{
	"limit": 100,
	"total": 152,
	"results": [{
		"id": 2143,
		"url": "/rockstargames",
		"name": "Rockstar Games",
		"meta": {
			"bug_count": 155,
			"accepting_submissions": true,
			"minimum_bounty": 150,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Publishers of such popular games as Grand Theft Auto, Max Payne, Red Dead Redemption, L.A. Noire, Bully \u0026 more.",
		"stripped_policy": "Statement\nWe are dedicated to the privacy and security of our users, and the environment we create for them. We believe that having a talented group of independent security researchers is paramount to achieving that goal. We are running this HackerOne bounty program to reward researchers for identifying potential vulnerabilities . Please review the following guidelines detailing the rules of this bug bounty program.  Only research following these guidelines will be eligible for a bounty.\nRewards\nOur minimum bounty for successful vulnerability submissions is $150.  Depending on the severity and complexity of the identified potential vulnerability, higher bounties may be paid out at our discretion.  \nScope\nThe current scope is limited to the domains listed below.  No authorization is given to test any other web applications, video game titles or mobile applications.  No bounties will be given for any disclosures relating to any applications outside the scope of this program.  \nWe encourage you to hunt for bugs in support.rockstargames.com, which is run on top of the Zendesk platform.  Zendesk also participates in the HackerOne bounty program; see this page for details and to report Zendesk vulnerabilities: Zendesk Bug Bounty (https://hackerone.com/zendesk/).\nPlease note that game bugs, glitches or exploits are not part of the bug bounty program, but can still be submitted on our support site at: https://support.rockstargames.com/hc/en-us/requests/new\nResponsible Disclosure and Guidelines\nWhen submitting potential vulnerabilities, we ask that you follow our guidelines for disclosure. A submission that does not meet these requirements may not qualify for a bounty.\nThe following attributes are expected in a valid submission:\n* The type of issue being reported. What kind of attack, does it fit a CWE number, etc.\n* Steps for reproduction. If we cannot reliably reproduce the issue, we cannot fix it.\n* What is the potential impact of the bug?\n* How could a malicious user potentially benefit from this issue?\nEligibility\nFor your submission to qualify for a bounty, you must:\n* Adhere to all guidelines and terms related to the program, including those on this page, the terms provided by Hacker One, and the Legal agreements you accepted before being admitted to this bounty program.\n* Be the first to submit this particular vulnerability.\n* Not publicly disclose or discuss the vulnerability before or after submitting it.\nExclusions\nBugs that are outside the scope or guidelines detailed here are not eligible for this program.\nThe privacy, security and experience of our users are of the utmost importance. Under no circumstances may any testing target or negatively affect our users. You must use only accounts you own and/or created specifically for testing purposes.\nThe following attributes would invalidate any submitted vulnerabilities:\n* Attacks involving physical access to a user's device, Rockstar property or data centers\n* Social engineering of users, Rockstar staff or contractors\n* Denial-of-service attacks\n* Bugs in 3rd party authentications (attacks specifically against our implementation are fine)\n* Results from automated tools without any manual confirmation\n* Bugs affecting 3rd party sites that consume data from Social Club\n* Any similar action that interferes with a user's privacy, security or experience\nAdditionally, the following sorts of technical issues are also excluded:\n* Lack of security-related headers, such as: content-security-policy, public-key-pins, x-xss-protection, x-content-type-options, x-frame-options\n* SSL/TLS configuration issues, such as:  Perfect Forward Secrecy not supported, TLSv1.0 / 1.1\n* Strict transport security (HSTP) is not enforced\n* Lack of HTTPOnly flag on non-session cookies\n* CSRF token verification missing from pages (unless you can do something impactful with the request)\n* Autocomplete enabled\n* Banner disclosures\n* Session timeout\n* Window.opener issues\n* Clickjacking\n* Nickname/gamertag enumeration\n* Cross-Script Includes (Unless a particularly creative or damaging exploit can be found as a result)\n* SSO /auth/Home/SetCookie?token query string information disclosure (Unless you can demonstrate a compelling way to exploit this to hijack a user's account or bypass authentication)\n* Text / content injection\n* Email spoofing directly or as it ties to any of our contact forms\n* Insecure crossdomain.xml policy on rockstargames.com \n* DNSSEC configuration\n* Ability to add hyperlinks to player feed, friend requests, etc.  \n* Recently released zero day vulnerabilities.  Please give us time to patch.  \n",
		"handle": "rockstargames",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/002/143/8ce8f5fa84d59a83bbdc71eb21dfff9906adf391_large.png?1433294886",
		"internet_bug_bounty": false
	},
	{
		"id": 425,
		"url": "/souq",
		"name": "Souq.com",
		"meta": {
			"bug_count": 243,
			"accepting_submissions": true
		},
		"about": "Largest Ecommerce site in the Middle East and North Africa offering over 400K products serving over 23 Million Visitors a month.",
		"stripped_policy": "POLICY UPDATE FEB 26th 2017\nSee sections:\n1. (Important Notes)\n4.1 (Browsers versions)\n5.1.1 (Qualifying Target Sites)\n5.1.3 (Qualifying Mobile Apps)\n6.2 (Non-Qualifying Vulnerabilities) \n8. (Rewards)\nPOLICY UPDATE SEP 22nd 2016\nSee sections:\n4.1 (Browsers versions)\n5.1.1 (Qualifying Target Sites)\n5.1.2 (Qualifying Target APIs)\n5.1.3 (Qualifying Mobile Apps)\n6.2 (Non-Qualifying Vulnerabilities) \n1 IMPORTANT NOTES\nIf you do not agree with these terms, please do not participate in this program\nThis policy is susceptible to change any time without notice. \nWherever the word \"site\" is mentioned, it means \"Souq.com\" or any related sub-domain or system\n2 PROGRAM RULES\nSouq.com is pleased to work with the entire community and acknowledge all efforts to help us secure our platform.\nHowever, only those that meet the following eligibility requirements may receive a monetary reward:\n- Do not intentionally harm the experience or usefulness of the site.\n- Do not attempt to view, modify, or damage data belonging to site users and customers.\n- Do not make any information public until the issue has been resolved.\n- Do not attempt any type of denial-of-service- like attack against the site.\n- Do not attempt to hide your real-world identity.\n- Do not perform any research or testing against the site in violation of law.\n- Do not take a copy of any vulnerabilities or entire sensitive information or source-code in the site.\n- Do not publicly disclose the vulnerability prior to our resolution and make it publicly disclosed on hackerone.com site.\n3 PROGRAM ELIGIBILITY AND SUBSCRIPTION\n3.1 ELIGIBILITY CRITERIA\nYou must be older than 18 years old.\nYou must be registered in our Security Researchers Pool.\nYou must provide full non-anonymous information about yourself\nYou must be the first reporter of a vulnerability\nThe vulnerability must be a qualifying vulnerability (see below)\nThe vulnerability must be only submitted through a ticket to https://hackerone.com/souq\nIf you are wanting to flood our servers with requests, please let us know first at infosec@souq.com\n3.2 NON-ELIGIBILITY TO PARTICIPATE\nResidents of any countries/regions that are under United States sanctions, such as Cuba, Iran, North Korea, Sudan, and Syria.\nCurrent employees of Souq.com or a Souq.com subsidiary, or an immediate family (parent, sibling, spouse, or child) or household member of such an employee.\nA contingent staff member or vendor employee currently working with Souq.com.\nA person involved in any part of the administration and execution of this program.\n3.3 PROGRAM SUBSCRIPTION\nEvery security researcher SHALL provide us with the account(s) used to generate the vulnerability.\nAny report not submitted by a registered security researcher will not be rewarded.\n-This is necessary to determine the account by which they are playing with and not to impact real operations.\n4 REPORTING\n4.1 MANDATORY REPORT FORMAT\nAll Security Reports shall follow the following format. Failure to include all of this information will result in an invalid submission:\n1. Title: [Vulnerability Type] at [Target vulnerable URL or App]\nex. SQL Injection at http://uae.souq.com/ae-en/account_settings.php\nex. Broken Authentication at Souq.com iOS Application\n2. Steps: How to reproduce (Step-by-Step). Generic and vague description will be discarded.\n3. The browser name and version number that was tested on. All browser versions on All advices will be considered Informative, especially for the following categories:\nIE \u0026lt; 11\nChrome \u0026lt; 54\nFirefox \u0026lt; 48\nSafari \u0026lt; 10\n4. Describe the perceived impact.\n5. Screenshots and videos must be submitted as an evidence of successful exploitation.\n6. How to mitigate the impact.\n4.2 EXAMPLE REPORT\nTitle: Sql Injection on sell.souq.com\nSteps: 1, 2, 3...etc\nTested on FF v.48\nImpact: the databases can go to sleep mode\nScreenshots: 1, 2, 3...etc\nMitigation: apply a filter on url validation\n5 TARGETS\n5.1 QUALIFYING TARGETS\nThe following targets are considered acceptable and qualifying testing targets in addition to those under \"Scope\" subtitle:\n5.1.1 Sites\nuae.souq.com\ndeals.souq.com\nsell.souq.com\nssl.souq.com (account pages)\n5.1.2 APIs\napi.souq.com\nmobileapi.souq.com\n5.1.3 Mobile Apps\nAndroid App Ver. 4.11 and above\niOS App Ver. 5.17 and above\n5.2 NON-QUALIFYING TARGETS\nAny other subdomain not listed in Qualifying Targets above, such as:\n- blog.souq.com\n- affiliates.souq.com\n- pr.souq.com\n- developer.souq.com\n- country sites: kuwait.souq.com, saudi.souq.com, egypt.souq.com\n-  Windows mobile app\n- All pages at ssl.souq.com related to selling activities\n6 VULNERABILITIES\n6.1 QUALIFYING VULNERABILITIES\nCommand Injection\nSQL Injection\nRemote Code Execution\nCross-Site Scripting (XSS)\nCross-Site Request Forgery (CSRF)\nBuffer Overflow\n6.2. NON-QUALIFYING VULNERABILITIES\nXSS in Flash files not developed by Souq.com, e.g. third-party ads\nSocial engineering of Souq.com staff or contractors\nSSL/TLS best practices\nMissing security-related HTTP headers best practices or those which do not lead directly to a vulnerability\nIssues related to software or protocols not under our control\nReports from automated tools or scans\nVulnerabilities affecting users of outdated browsers or platforms\nBrute Force protection on login page\nPresence of autocomplete attribute on web forms\nAny physical attempts against Souq.com property or data centers\nReports of fraudulent listings on Souq.com\nVulnerabilities affecting users of outdated browsers or platforms\nMixed content warnings\nDenial of Service attacks\nClickjacking/UI redressing\nSoftware version disclosure\nAccount/e-mail enumeration\nReflected file download attacks\nIncomplete or missing SPF/DKIM\nResults of automated tools or scanners\nPresence of autocomplete attribute on web forms\nSelf-exploitation (i.e. password reset links or cookie reuse)\nIssues related to networking protocols or industry standards\nOpen redirects on ad/analytics subdomains (e.g. google analytics, vizury, omni, doubleclick...etc)\nUse of a known-vulnerable library (without proof of exploitability)\nDescriptive/verbose/unique error pages (without proof of exploitability)\nAny non-Souq.com branded applications\nUsing unreported vulnerabilities to find other bugs\n6.3 TARGET OF THE MONTH\nBased on new releases roadmap, each month we will have top priority applications to be tested for security. The submitted reports under this category should have faster processing than other submitted reports in other areas.\n7 PROGRAM MANAGEMENT\nSecOps Team Account is the focal point between Souq.com and all Security Researchers on hackerone.com platform.\nBug submissions will be reviewed within 30 days. So please don't send reminders before this time window.\nAll bug submissions shall be verified by SecOps Team. The bug reporters may be asked to fulfill any missing information or provide more information.\nWhen a report is closed as “Non-Applicable”, “Duplicate”, “Informative” or “Spam”, don't re-open it again from your side. Highlight your justification why the issue need to get re-opened, and Souq.com SecOps Team will re-open it as per our internal procedures,\n8 REWARDS\nSouq.com will provide rewards to eligible reporters of qualifying vulnerabilities as described in this program.\nOur minimum reward is $50 USD. The maximum reward is $3,000 USD.\nRewards values vary depending upon the impact of the vulnerability reported in subject to Souq.com.\nThose who report vulnerabilities of rate “HIGH” as mentioned below will have their names mentioned on Souq.com Hall of Fame.\nRewards Criteria goes as the following:\n8.1 HIGH\nThis includes \n- SQL Injection\n- Remote Command Execution\n- Remote File Injection \n- Any vulnerability may result in:\n-- Disclosure of customer/seller SENSITIVE details, including PII, \n-- Takeover of user account.\nThese are eligible for rewards up to 1500 USD, based on the evaluated risk on Souq.com, ON CASE BY CASE.\n8.2 MEDIUM\n XSS are eligible for 100 USD\n8.3 LOW\nCSRF is eligible for 50 USD\n8.4 NEGLIGIBLE\nScore is less than 2 will be treated as INFORMATIONAL. Hence, it is eligible for “THANK YOU” message.\nRewards are paid on monthly basis after being processed\nThis is not a contract or competition, and so, rewards may be provided on an ongoing basis to the same individuals so long as this program is active and the vulnerabilities are unique and not duplicates.\n9 THE FINE PRINT\nYou must comply with all applicable laws in connection with your participation in this program. You are also responsible for any applicable taxes associated with any reward you receive.\nWe may modify the terms of this program or terminate this program at any time. We won’t apply any changes we make to these program terms retroactively.\nReports received prior to the paid bug bounty program launch (June 7th, 2015) are not eligible for monetary rewards.\nAll submissions to this program are collected on computers in the UAE. Souq bug bounty program will be governed by the laws of the UAE, and you consent to the exclusive jurisdiction and venue of the courts of the UAE for any disputes that arise out of this program.\n9 LICENSE\nBy providing your submission to Souq.com, you:\n- Agree to grant Souq.com an irrevocable, perpetual, royalty-free, worldwide, unlimited, nonexclusive, sub-licensable, unrestricted right and license (i) to use, review, assess, test, and otherwise analyze your submission; to reproduce, modify, distribute, display, and perform publicly, and to commercialize and create derivative works of, your entry and all its content, in whole or in part, in connection with this program; and (ii) to feature your submission and all content in connection with the marketing, sale, or promotion of this program (including but not limited to internal and external sales meetings, conference presentations, trade-shows, and screen shots of the submission in press releases) in all media (now known or later developed). License in intellectual property in your submission.\n- Agree to sign any necessary document that may be required for us.\n- Understand and acknowledge that Souq.com may have developed or commissioned materials similar or identical to your submission, and you waive any claims you may have resulting from any similarities to your submission.\n- Understand that you qualify for a one-time payment for each eligible vulnerability and are not guaranteed any additional compensation or credit for use of your submission.\n- Represent that your submission is your own work and that you haven’t used information owned by another person or entity.\n10 CONFIDENTIAL INFORMATION\nYou acknowledge that you:\n- have/will/may work(ed) during providing the submission with proprietary and confidential information (including, but not limited to, software, databases, financial data, trade secrets, source codes and systems or any other data related to the Souq.com) (hereinafter referred to as \"Confidential Information\"), and shall keep such information confidential and not share or use any such with any Souq.com or any third party.\n- you will not:\n1-retain any Confidential Information of the Souq.com that has been in my possession during providing the above Services to the Souq.com or before or at any other time and shall immediately return to the Souq.com any such Confidential Information and shall further undertake to completely destroy any and all Proprietary Information that is in my possession and from any computer, word processor or other device in my possession or custody or control containing such information.\n2- expose the Souq.com vulnerabilities nor interfere in anyway with the Souq.com business nature for any reason to a third party or any future clients’ without a written permission from the Souq.com officer.\n3- disclose the existence or the nature of the Services or the discussions, correspondences or messages made between Souq.com and them relating to any Proprietary Information without the prior written authorization of Souq.com.\n4- share any of the information obtained about the Souq.com to any other entities or any third party.\n5- Neither you nor your associates or other entities or any third party related to them shall in any manner whatsoever circumvent or attempt to circumvent the Site and/or the Confidential Information and/or any details related to Souq.com.\n- The decisions of Souq.com regarding the said rewards and the program are considered to be final and binding.\n- That, therefore, you hereby fully and finally release and discharge the above-mentioned Souq.com, parent companies, its shareholders, agents, directors, managers, employees, subsidiaries and branches wherever you are from any liability, claim, demand or action whatsoever whether relating to your bug reports or for any other cause whatsoever.\n- You further agree that any breach of the above mentioned undertakings will cause Souq.com irreparable harm, and further acknowledges and agrees that Souq.com is entitled but not limited to claiming injunctive relief in any court of competent jurisdiction to prevent breach or to halt a further or continuing breach.\n",
		"handle": "souq",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/425/736c2459962fe7c2f9b19d135c9f2584598f1446_large.png?1446733811",
		"internet_bug_bounty": false
	},
	{
		"id": 13031,
		"url": "/brickftp",
		"name": "BrickFTP",
		"meta": {
			"bug_count": 38,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "",
		"stripped_policy": "Software security researchers are increasingly engaging with Internet companies to hunt down vulnerabilities. Programs by HackerOne, Google, Facebook, Mozilla, Github, and others have helped to create a strong bug-hunting community.\nHere at BrickFTP, we celebrate security and we encourage independent security researchers to help us keep our products secure. We offer a Security Bug Bounty Program (the \"Program\") to create an incentive and reward structure so that researchers are able to devote resources to working on BrickFTP.\nWe will pay $100 to $1,000, at our discretion, to any researcher who discovers a significant security vulnerability in BrickFTP. We pay quickly and fairly, every time, as long as you follow our rules.\nIf you've found a vulnerability or would like to perform security research against BrickFTP, please read through the rules below.\nReports We Are Looking For\nWe want to know about anything about our platform that poses a significant security vulnerability to either us or our customers.\nThese can include:\nPrivilege Escalation\nAuthentication Bypass\nLeakage of Sensitive Data\nRemote Code Execution\nSQL Injection\nCross-Site Request Forgery (XSRF)\nCross-Site Scripting (XSS)\nCode Injection\nBug Bounty Program Requirements\nTo participate in our program, you must create trial account on our platform by navigating to BrickFTP.com and clicking the button to start a Free Trial. Your account must include the phrase \"[BUGBOUNTY]\" in the \"Site Name\" used when registering. (Without quotes, but with square brackets.)\nDo not create more than one trial account within a 60-day period for the purpose of conducting security research against our platform.\nDo not attempt to gain access to another user's account or data.\nDo not impact other users with your testing.\nDo not perform any attack that could harm the reliability/integrity of our services or data. DDoS/spam attacks are not allowed.\nDo not publicly disclose a bug either before or after it has been fixed. Public disclosure means disclosure to anyone, even on private \"Hacker\" websites and forums.\nDo not attempt non-technical attacks such as social engineering, phishing, or physical attacks against our employees, users, or infrastructure.\nDo not upload information about the vulnerability to any site you do not directly own. This includes uploading videos to YouTube, Vimeo, etc, even if marked private.\nAny scanners or automated tools used to find vulnerabilities need to be rate limited.\nDecisions made by us regarding the eligibility of submissions are final. Do not write back to dispute a decision.\nYou are expected to be 100% professional and pleasant to work with via E-Mail.\nReports That Do Not Qualify\nThe following types of reports do not qualify and will not pay a bounty.\nVulnerabilities that do not grant any additional ability or privileges beyond normal BrickFTP features.\nVulnerabilities on the BrickFTP.com marketing website or support website, unless they lead to a vulnerability on the actual BrickFTP platform.\nVulnerabilities that only affect outdated or unpatched browser/plugin versions.\nVulnerabilities requiring exceedingly unlikely user interaction.\nVulnerabilities, such as timing attacks, that prove the existence of a user or site.\nVulnerabilities requiring social or physical attacks.\nReports related to denial of service attacks or DNSsec.\nInsecure cookie settings for non-sensitive cookies.\nDisclosure of public information and information that does not present significant risk.\nVulnerabilities that have already been submitted by another user, that we are already aware of, or that have been classified as ineligible.\nScripting or other automation and brute forcing of intended functionality.\nIssues that we can't understand or reproduce.\nCommonly False Positive Reports\nBrickFTP is an FTP, SFTP, and WebDAV hosting service. Obviously this means that we will have an open FTP server on port 21, SFTP on port 22, and it means that our servers respond to DAV verbs.\nReporting any of the above false positives shall result in your being blacklisted from the Program.\nImportant Terms\nWe aim to pay bounties as quickly as possible and will pay bounties sometimes before the issue is patched. Therefore, we require that you do not disclose any vulnerability publicly, either before or after the bounty is paid.\nIf paid a bounty, you may disclose that you received a bounty, but you may not disclose the amount or any information related to the type of vulnerability you found. Under no other circumstances may you disclose anything about your participation in this program.\nYou are still bound by the Terms of Service you agreed to upon signup for your Trial account. Please read and understand this document as it affects your rights.\nBrickFTP's submission rules under HackerOne DIFFER SLIGHTLY from the rules for its Bounty program posted on its website.  They are modified to the least extent possible to be compatible with HackerOne's rules.  If you participate via Hackerone, you will be bound by these rules.  If you participate via our website, you will be bound by the rules posted there.\nTo Report a Vulnerability\nTo report a vulnerability via Hackerone, first re-read this entire page to be sure that you understand the terms. A single violation of the terms set forth on this page will lead to an immediate revocation of your access to the Bug Bounty program and we will not pay any bounties to anyone who has violated any of the terms on this page.\nSubmissions in violation of the terms will not be eligible for the Program, however, we will obviously evaluate them anyway and we reserve the right to act on their recommendations without notice to the submitter.\nIf your submission is in compliance with our rules, we will respond as quickly as possible to your submission.\nIf you do not receive a response within 48 hours and you are absolutely certain that you are in 100% compliance with these rules, please write to us again to check on the status of your submission.\n",
		"handle": "brickftp",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/013/031/708b8ac8aa7355244ac72c0ec1ad15a7a5b5bbb4_large.?1463527247",
		"internet_bug_bounty": false
	},
	{
		"id": 16334,
		"url": "/lyst",
		"name": "Lyst",
		"meta": {
			"bug_count": 17,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "",
		"stripped_policy": "No technology is perfect, and Lyst believes that working with skilled security researchers across the globe is crucial in identifying weaknesses in any technology. If you believe you've found a security issue in our product or service, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nBounties\nWe award bounties based on 4 severity levels. Examples below are only suggestions as to the kind of bugs we'd expect to see in each category. Depending on the impact you can demonstrate from a particular bug we may pay higher than suggested.\nP1: Critical – $5000+\nRemote code execution\nPrivilege escalation\nP2: High – $1000+\nStored XSS without user interaction\nCSRF\nSQL injection\nAccount takeover with user interaction\nP3: Medium – $300+\nXSS with user interaction\nEdge case performance issues which could be used for DoS\nP4: Low – $100+\nMixed content warnings\nDebugging information\nTest Accounts\nYou must only test against accounts that you have created. You may register for accounts as long as you include the suffix +hackerone before the @ in your email address. For example test+hackerone@example.com.\nYou may be banned for registering accounts without this string in your email address.\nTest Cards\nWe have 5 test cards to use. Note these are not real credit card numbers. All orders will not be processed.\n4024007175579357 \n4916375378230974 \n4839456722548214 \n4556908228877498 \n4916736231570825\nUse the address 921 Front St #100, San Francisco, CA 94111 for all of them.\nRate Limits and Bans\nWe enforce rate limiting on most of our website. This may result in your address being banned if you make more than around 160 requests per minute from a single IP address. Do not try and evade this limit.\nIf you are banned due to excessive activity please halt requests and wait a short amount of time and the ban will be released automatically.\nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nExamples of vulnerabilities Lyst are particularly interested in hearing about\nAuthentication flaws\nCross-site scripting (XSS)\nSQL Injection\nCross-site request forgery (CSRF/XSRF)\nMixed content scripts (scripts loaded over HTTP on an HTTPS page, blockable errors only)\nServer side code execution\nPrivilege Escalation\nAuthorization flaws/Access Control Bypasses (e.g. being able to perform security-sensitive actions as a Restricted User) \nClickjacking on authenticated pages with sensitive state changes\nExclusions\nWhile researching, we'd like to ask you to refrain from:\n* Denial of service\n* Spamming\n* Social engineering (including phishing) of Lyst staff or contractors\n* Any physical attempts against Lyst property or data centers\n* Username enumeration\n* Exposure of social features such as users saved items\n* Missing \"best practices\" without a clear demonstration of impact in our use case\n* CSRF on login/logout/other non-authenticated content\n* Missing headers\n* Secure and HTTPonly flags on cookies\n* crossdomain.xml misconfiguration without an exploit scenario\nThank you for helping keep Lyst and our users safe!\n",
		"handle": "lyst",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/016/334/cc88dd0f3d037c6ab6729cf799fc547416075779_large.?1479307097",
		"internet_bug_bounty": false
	},
	{
		"id": 16885,
		"url": "/youporn",
		"name": "YouPorn",
		"meta": {
			"bug_count": 9,
			"accepting_submissions": true,
			"minimum_bounty": 50,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "The world’s #1 source for free HD porn",
		"stripped_policy": "Security is a top priority at YouPorn. We love to work with skilled security researchers to improve the security of our service. If you believe you've found a security bug in the services listed in our scope, we will be happy to work with you to resolve the issue promptly and ensure you are fairly rewarded for your discovery.\nScope\nAt this time, the scope of this program is limited to security vulnerabilities found on the YouPorn website. Vulnerabilities reported on other properties or applications are currently not eligible for monetary reward. High impact vulnerabilities outside of this scope might be considered on a case by case basis.\nIn-Scope Sub-Domains:\nhttp://www.youporn.com/\nOut-of-Scope Sub-Domains:\nhttp://*.youporn.com/\nhttp://*.youpornpremium.com/\nhttp://feedback.youporn.com/\nThe official YouPorn mobile application for iOS and Android is also not in-scope for this program.\nFor account access issues or visual layout and website functionality bugs, please work with our Customer Support (http://www.youporn.com/support) which will resolve those issues independently. \nNote: Contacting our support team about the status of a HackerOne report will result in an immediate disqualification for a bounty. All communications will must conducted through the HackerOne system only.\nEligibility\nYou will qualify for a reward only if you are the first person to responsibly disclose an unknown issue. The YouPorn security team has 30 days to respond to the report, and up to 90 days to implement a fix base on the severity of the report.\nPlease allow for this process to fully complete before attempting to contact us again. Note that posting details or conversations about the report or posting details that reflect negatively on the program and the YouPorn brand, will result in immediate removal from the program.\nAny vulnerability found must be reported no later than 24 hours after discovery.\nYou are not allowed to disclose details about the vulnerability anywhere else.\nYou must avoid tests that could cause degradation or interruption of our service.\nYou must not leak, manipulate, or destroy any user data.\nYou are only allowed to test against accounts you own yourself.\nThe use of automated tools or scripted testing is not allowed.\nRewards\nYouPorn may provide rewards to eligible reporters of qualifying vulnerabilities. Our minimum reward is $50 USD, and our maximum rewards is $25,000 USD. Reward amounts may vary depending upon the severity of the vulnerability reported. \nThe following table outlines the average rewards for specific classes of vulnerabilities:\n|Vulnerability Types|Core YouPorn *|All Other|\n|---|---|---|---|---|\n|Remote Shell / Command Execution|$15,000|$5,000|\n|Remote Code Execution|$10,000|$2,500|\n|SQL Injection (with output)|$5,000|$2,500|\n|Significant Authentication Bypass|$5,000|$1,000|\n|Local file Inclusion|$2,500|$1,000|\n|SQL Injection (blind)|$2,500|$1,000|\n|Insecure Direct Object References|$1,500|$750|\n|Server Side Request Forgery|$1,500|$750|\n|Stored Cross Site Scripting|$1,500|$500|\n|Other Cross Site Scripting|$250|$50|\n* Core YouPorn covers www.youporn.com. It does not include any other sub-domains or any YouPorn blogs.\nYouPorn reserves the right to decide if the minimum severity threshold is met and whether it was previously reported. Rewards are granted entirely at the discretion of YouPorn.\nTo qualify for a reward under this program, you should:\nBe the first to report a vulnerability.\nSend a clear textual description of the report along with steps to reproduce the vulnerability.\nInclude attachments such as screenshots or proof of concept code as necessary.\nDisclose the vulnerability report directly and exclusively to us. \nA good bug report should include the following information at a minimum:\nList the URL and any affected parameters\nDescribe the browser, OS, and/or app version\nDescribe the perceived impact. How could the bug potentially be exploited?\nExceptions \u0026amp; Rules\nOur bug bounty program is limited strictly to technical security vulnerabilities of YouPorn services listed in the scope. Any activity that would disrupt, damage or adversely affect any third-party data or account is not allowed.\nPlease do not mass create accounts to perform testing against YouPorn applications and services. Also do not perform brute force testing to determine whether rate limiting is in place for particular APIs or pieces of functionality.\nThe following are strictly prohibited:\nDenial of Service attacks.\nPhysical attacks against offices and data centers.\nSocial engineering of our service desk, employees or contractors.\nCompromise of a YouPorn users or employees account.\nAutomated tools or scans, botnet, compromised site, end-clients or any other means of large automated exploitation or use of a tool that generates a significant volume of traffic.\nAdditionally, the following vulnerabilities will not be considered for bounty:\nCross site request forgery (CSRF)\nCross domain leakage\nInformation disclosure\nSoftware version disclosure\nXSS attacks via POST or headers\nMissing SPF or DMARC records\nHttpOnly and Secure cookie flags\nSSL/TLS related (such as HSTS, GET over HTTP, Password sent in HTTP)\nPassword and account recovery policies\nSession timeout\nSession Hijacking (cookie reuse)\nMissing X-Frame or X-Content headers\nAccount enumeration\nClick-jacking\nRate-limiting \nDownloading video\nConfirmation Email (anything related with)\nLegal Notes: Payments are made through HackerOne (https://hackerone.com/faq#for-hackers-question-how-do-i-get-paid) only. You are responsible for paying any taxes associated with rewards. We reserve the right to modify the terms of this program or terminate this program at any time. By participating in this program, you agree to be bound by these rules. You must comply with all applicable laws in connection with your participation in this program.\nThank you for helping keep YouPorn safe!\n",
		"handle": "youporn",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/016/885/006be1265e2495857e800d84736442d18d9c55f1_large.jpg?1484003421",
		"internet_bug_bounty": false
	},
	{
		"id": 224,
		"url": "/formassembly",
		"name": "FormAssembly",
		"meta": {
			"bug_count": 35,
			"accepting_submissions": true
		},
		"about": "Enabling Anyone to Collect Data with Web Forms and Surveys. Safely, Responsibly, Easily. ",
		"stripped_policy": "FormAssembly Disclosure Program\nAt FormAssembly, our customers entrust us with storing their data and the security of that data is our first priority. We appreciate the role the security research community plays in fulfilling this objective. We are committed to the pursuit of collaborative effort with this community to improve our security and we wish to acknowledge and recognize those who have made an effort to improve our security. If you believe you've discovered a security issue within our guidelines, we encourage you to report the issue to us. \nScope\nThe scope of this program is limited to technical vulnerabilities on FormAssembly related applications and services under the following domains:\n*.formassembly.com\n*.tfaforms.com\nTesting is prohibited for the following hostname patterns:\n*.tfaforms.net\nformassembly.disqus.com\nAny reports including these domains will be automatically rejected and the user will be subject to permanent disqualification from this program.\nNo testing is permitted against production enterprise resources, regardless of hostname. To test our enterprise application, please use enterprisedemo.formassembly.com as the target. You may login to this application as the administrative user demo with the password demo. \nDisclosure Eligibility\nTo participate in the FormAssembly disclosure program, you must be the first person to responsibly disclose a previously unknown issue. Our staff will assess each report to determine if it is an eligible disclosure. We strive for a quick response, but we will respond to your report within 30 days. Additionally, we will request up to 90 days to implement a fix depending on the severity and complexity of the report. \nImplementing a fix is not the same as releasing a fix. The release of a fix will be determined based upon the severity and complexity of the disclosure. Due to the complexity of deployments at FormAssembly, a release may not occur within the 90 day window. We will keep you updated during this process. \nWe also believe that 30 day response, 90 day resolution timeline is a reasonable timeline to govern our process. Please allow for this process to complete before publicly disclosing the vulnerability or contents of the report. Public disclosure prior to completion of this process will result in disqualification of your report. \nSubject the exclusions below, we appreciate issues related to the FormAssembly infrastructure, FormAssembly user data, FormAssembly application, including, but not limited to: \n* Cross-Site Request Forgery (CSRF/XSRF)\n* Cross-Site Scripting (XSS)\n* Authentication Vulnerabilities (including OAuth, SSO)\n* Privilege Escalation \n* Session Management\n* SQL Injection \n* Remote Code Execution\n* Information Disclosure, including Sensitive Data\n* Content Spoofing\n* Configuration\nAll reports must contain data to ensure compliance with the disclosure program. We may request additional information to ensure compliance, such as IP address associated with the testing, user accounts created to perform testing, approximate timestamps of testing, and other information related to your testing process. You can help expedite the review process by providing this information in your initial report. \nAs a general rule, providing as much relevant information in the disclosure will ensure an expedited response. We recommend that you describe the risk identified, justify your submission and its alleged severity, provide a proof of concept, and any other relevant information. \nPlease do not upload files in an archive format. Upload files individually. \nGeneral Exclusions\nWhile we will consider submissions involving the following categories, we will not accept disclosures for each unless the disclosure is noteworthy in terms of technical implementation, creativity, severity, or other relevant criteria.\nStrict-Transport-Security Issues. We are aware, but are not enabling it yet. \nClickjacking. We are aware of the absence of the X-Frame-Options header on some resources.\nDenial of Service\nSocial Engineering and phishing\nSpam\nSecurity issues involving third-party APIs used by FormAssembly\nInformation disclosure involving announcements from runtimes (PHP) or server banners (Apache, nginx). \nAny reports involving non-FormAssembly applications, such as web server, WordPress, etc.\nSubmissions detailing best practices or recommendations. While we appreciate the advice, general advice without substantiation or relevance to our resources does not qualify.\nAbsolute Exclusions\nThe following conditions are absolutely excluded from this disclosure program. Any submissions of these excluded categories will result in permanent disqualification.\nAny testing performed against any production FormAssembly Enterprise instances.\nAny vulnerability obtained through the compromise of FormAssembly user or FormAssembly employee accounts. If you need to test a vulnerability, create account(s).\nTesting with automated tools. While we appreciate the virtue of automated tools and the role these tools occupy in security research, running these tools against our resources requires no research nor effort and does not qualify for this program.\nAny tests that result in the degradation or interruption of service.\n",
		"handle": "formassembly",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/224/04377915ff01694f1ea90a098c1950907556acf7_large.png?1436271755",
		"internet_bug_bounty": false
	},
	{
		"id": 16420,
		"url": "/alvosec",
		"name": "Alvosec",
		"meta": {
			"bug_count": 12,
			"accepting_submissions": true,
			"minimum_bounty": 5,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "https://alvosec.com/about-us/",
		"stripped_policy": "No technology is perfect, and Alvosec believes that working with skilled security researchers across the globe is crucial in identifying weaknesses in any technology. If you believe you've found a security issue in our product or service, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nDisclosure Policy\nOUR MAIN GOAL IS TO PROTECT OUR SERVERS, SO ANY FOUNDED VULNERABILITY OR MISCONFIGURATION THAT CAN LEAD TO DISCLOSURE OF SENSITIVE DATA SHOULD BE REPORTED HERE.\nWhich type of attacks are allowed to preform on our system:\nbypassing firewall rules\nprivilege escalation of MySQL, SSH, mail server or any other service which is running on the server\nSSL attack\nDNS attack\nzero day exploit\ndata leaking\n(Don't use Nessus or OpenVAS, try to preform as much as possible manual research)\nIMPORTANT! (Server bounty will be open only for some time! We will anounce when server bounty is finished.)\nOUR SECOND GOAL IS TO KEEP OUR WEBSITE SAFE AS MUCH AS POSSIBLE. \nType of attacks:\n*OWASP TOP 10\n* Pentest is allowed to perform only on alvosec.com + including all subdomains.\nOut of Scope\nAlso, the following do not quality:\nDoS, brute force, user enumeration or DDoS attacks\nBanner or version disclosures.\nHSTS or CSP headers\nMissing SPF\nMissing cookie flags on non-security sensitive cookies\nUser enumeration\nHost header injection\nPresence of autocomplete attribute on web forms\nDisclosure of known public files or directories, (e.g. robots.txt)\nOpen ports without a vulnerability\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nExclusions\nAVOID USING AUTOMATED TOOLS (SCANNERS ETC.) THAT ARE MAKING HUGE LOAD ON SERVERS.\nWhile researching, we'd like to ask you to refrain from:\n* Denial of service\n* Spamming\n* Social engineering (including phishing) of Alvosec staff or contractors\n* Any physical attempts against Alvosec property or data centers\nThank you for helping keep Alvosec and our users safe!\n",
		"handle": "alvosec",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/016/420/ef94b8ef6715ee830a54c963500f7edb5e288d6c_large.?1479605399",
		"internet_bug_bounty": false
	},
	{
		"id": 16893,
		"url": "/discourse",
		"name": "Discourse",
		"meta": {
			"bug_count": 21,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Discourse is JavaScript (ember.js) and Ruby on Rails based 100% open source discussion software -- https://github.com/discourse/discourse",
		"stripped_policy": "We take security very seriously at Discourse. We welcome any peer review of our 100% open source code (https://github.com/discourse/discourse) to ensure nobody's Discourse forum is ever compromised or hacked.\n⚠️️ Only test and report against https://try.discourse.org -- reports against any other URL will be closed as \"Not Applicable.\" You have been warned.\nTriage\nWe are not interested in social engineering reports\nWe are not interested in version disclosure reports\nWe are not interested in HTTP sniffing or HTTP tampering exploits, our sandbox is HTTPS and you can assume all live Discourse instances will be HTTPS.\nWe will triage into:\nMedium — CSRF / exploit that causes a user to perform an operation they didn't explicitly consent to ($128)\nHigh — XSS exploits ($256)\nCritical — exploit resulting in privilege escalation to admin, or downloading the site database ($512+)\nWe will publicly acknowledge any report that results in a security commit to https://github.com/discourse/discourse\nDisclosure Policy\nSecurity issues always take precedence over bug fixes and feature work. We can and do mark releases as \"urgent\" if they contain serious security fixes.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nExclusions\nWhile researching, we'd like to ask you to refrain from:\nDenial of service\nSpamming\nSocial engineering (including phishing) of Discourse staff or contractors\nAny physical attempts against Discourse property or data centers\nThank you for helping keep Discourse and our users safe!\n",
		"handle": "discourse",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/016/893/11b95a68ffd48583e1b5ed5429b8e82e175975f9_large.?1481849067",
		"internet_bug_bounty": false
	},
	{
		"id": 3152,
		"url": "/quora",
		"name": "Quora",
		"meta": {
			"bug_count": 37,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Quora: The best answer to any question",
		"stripped_policy": "In order to achieve our mission of sharing and growing the world's knowledge, we need to maintain a secure platform for writers and readers. To that end, we run this bug bounty program to enlist the community's help in identifying and mitigating security threats. We appreciate all security concerns brought forth and are constantly striving to keep on top of the latest threats. Being pro-active rather than re-active to emerging security issues is a fundamental belief at Quora. Every day, new security issues and attack vectors are created. Quora strives to keep abreast on the latest state-of-the-art security developments by working with security researchers and companies. We appreciate the community's efforts in creating a more secure world.\nProgram Rules\nAutomated security testing against the site or APIs are not allowed.\nLocalize all your tests to the account you are using to test. Don't affect other users.\nFindings derived primarily from social engineering (e.g. phishing, vishing, smishing) are not allowed.\nFollow HackerOne's disclosure guidelines (https://hackerone.com/guidelines).\nRewards\nOur rewards are based on the impact of a vulnerability. We will update the program over time based on feedback, so please give us feedback on any part of the program you think we can improve on.\nPlease provide detailed reports with reproducible steps. If the report is not detailed enough to reproduce the issue, the issue will not be eligible for bounty.\nWhen duplicates occur, we award the first report that we can completely reproduce.\nMultiple vulnerabilities caused by one underlying issue will be awarded one bounty.\nAmounts below are the maximum we will pay per category. We aim to be fair; all reward amounts are at our discretion.\nCritical severity bugs ($3000): Vulnerabilities that cause a privilege escalation on the platform from unprivileged to admin, allows remote code execution, financial theft, etc. Examples:\nRemote Code Execution\nRemote Shell/Command Execution\nVertical Authentication bypass\nSQL Injection that leaks targeted data\nHigh severity bugs ($750): Vulnerabilities that affect the security of the platform including the processes it supports. Examples:\nLateral authentication bypass\nStored XSS for another user \nLocal file inclusion\nInsecure handling of authentication cookies\nMedium severity bugs ($300): Vulnerabilities that affect multiple users, and require little or no user interaction to trigger. Examples:\nReflective XSS \nInsecure Direct Object References\nLow severity bugs ($100): Issues that affect singular users and require interaction or significant prerequisites (MitM) to trigger.Examples:\nSelf-XSS\nInformation leaks\nScope\n*.quora.com (http://quora.com/) (And only *.quora.com)\nThe latest version of Android and iOS apps installed from the official store at:\nhttps://play.google.com/store/apps/details?id=com.quora.android\nhttps://itunes.apple.com/us/app/quora/id456034437\nFocus Areas\nRemote code execution / shell injection\nVertical Authentication bypass\nSQL injection\nSome Exclusions\nSometimes we have made a conscious tradeoff and have not implemented the security best practice. Please be aware that we will not pay a bounty for reports that are only about a missing security best practice. \nExamples include but are not limited to:\nMissing HTTP security headers, like:\nStrict-Transport-Security\nX-Frame-Options\nX-XSS-Protection\nNon-existent or weak captcha / captcha bypass\nLogin or “Forgot Password” page brute-forcing, and account lockout not being enforced\nLack of enforcement of certain product feature usage limits, such as the number of A2As\nLack of binary protection or obfuscation of the mobile app\nNon-sensitive user data stored unencrypted on external storage by the mobile app\nCrashes of the mobile app due to malformed URL schemes or intents \nVulnerabilities that require physical access to the device\nCSRF\nHaving said that, if a missing best practice can be exploited to impact our users, we do want to hear about it and will pay a bounty.\nVulnerabilities in third-party libraries without proof of exploitation will not be rewarded.\nhttps://www.quora.com/about/challenges/ is run by HackerRank is therefore excluded from the bounty program.\nReport product-related issues by following the instructions at this link: https://www.quora.com/How-can-I-report-a-bug-on-Quora (https://www.quora.com/How-can-I-report-a-bug-on-Quora).\nThank you for helping keep Quora and our users safe!\n",
		"handle": "quora",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/003/152/b978ca17cecd2111e2347aee536b51af48b81dd8_large.png?1439494590",
		"internet_bug_bounty": false
	},
	{
		"id": 16634,
		"url": "/nintendo",
		"name": "Nintendo",
		"meta": {
			"bug_count": 0,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "",
		"stripped_policy": "Nintendo’s goal is to provide a secure environment for our customers so that they can enjoy our games and services. In order to achieve this goal, Nintendo is interested in receiving vulnerability information that researchers may discover regarding Nintendo’s platforms.  Currently, in the context of the HackerOne program, Nintendo is only interested in vulnerability information regarding the Nintendo Switch™ system and the Nintendo 3DS™ family of systems and is not seeking vulnerability information regarding other Nintendo platforms, network service, or server-related information.  \nBelow are examples of types of activities that Nintendo is focused on preventing:\n* Piracy, including:\n       * Game application dumping\n       * Copied game application execution\n* Cheating, including:\n       * Game application modification\n       * Save data modification\n* Dissemination of inappropriate content to children\nBelow are examples of vulnerabilities that Nintendo is interested in receiving information about:\n* System vulnerabilities regarding Nintendo Switch\n       * Privilege escalation from userland\n       * Kernel takeover\n       * ARM® TrustZone® takeover\n* Vulnerabilities regarding Nintendo-published applications for Nintendo Switch\n       * Userland takeover\n* System vulnerabilities regarding the Nintendo 3DS family of systems\n - Privilege escalation on ARM® ARM11™ userland\n - ARM11 kernel takeover\n - ARM® ARM9™ userland takeover\n - ARM9 kernel takeover\n- Vulnerabilities regarding Nintendo-published applications for the Nintendo 3DS family of systems\n - ARM11 userland takeover that doesn't require other hacks or tools (\"secondary\" exploits would be those that require other hacks or tools to be effective; those would be out of scope for this program) \n - Hardware vulnerabilities regarding either the Nintendo Switch system or the Nintendo 3DS™ family of systems\n- Low-cost cloning\n- Security key detection via information leaks\nNintendo reserves the right to choose whether or not it will address any reported vulnerabilities.\nARM and TrustZone are registered trademarks of ARM Limited (or its subsidiaries) in the EU and/or elsewhere. ARM9 and ARM11 are trademarks of ARM Limited (or its subsidiaries) in the EU and/or elsewhere. All rights reserved.\nRewards\nNintendo will pay rewards to the first reporter of qualifying vulnerability information ranging from $100 USD to $20,000 USD. Only one reward per qualifying piece of vulnerability information will be awarded.  Nintendo will determine at its discretion whether the vulnerability information qualifies for a reward as well as the amount of any such reward. Nintendo does not disclose how the reward amount is calculated. Vulnerability information that is already known to Nintendo or the public, for example, does not qualify for a reward.  Rewards will not be issued to individuals who are on sanction lists, or who are in countries on sanction lists.  \nThe reward amount depends on the importance of the information and the quality of the report. In general, the importance of the information is higher if the vulnerability is severe, easy-to-exploit, etc.\nA report is evaluated to be high quality if you show that the vulnerability is exploitable by providing a proof of concept (functional exploit code is even better). If you don’t yet have a proof of concept, or functional exploit code, we still encourage you to report to us sooner rather than later such that you do not to lose the opportunity to become the first reporter; you can then submit a proof of concept or functional exploit code later (within three (3) weeks of the initial report) and it will be considered to be a part of the report. \nThe reward will be paid after the reported vulnerability has been fixed by Nintendo, but no later than four (4) months after Nintendo has confirmed the reported vulnerability.\nNintendo will not disclose to the public the amount of any reward distributed by Nintendo.\nDisclosure of vulnerability information\nBecause older system versions can continue to exploit vulnerabilities that have been reported to Nintendo by researchers and subsequently fixed by Nintendo, you agree that you shall not disclose vulnerability information reported to Nintendo to any other third party.\nReport template\nPlease include the details requested below when submitting vulnerability information to Nintendo. All such reports should be submitted in English.\n- State the name of the applicable platform (e.g., Nintendo Switch, Nintendo 3DS, or New Nintendo 3DS)\n- State the region you used (e.g., JP, US, or EU) if the platform is Nintendo 3DS or New Nintendo 3DS\n- State the system version number(s) that the vulnerability applies to\n- Describe all of the steps required to reproduce the issue\n- Describe the details of what the vulnerability is and, if possible, potential ways to fix the vulnerability\n- Describe, if applicable, how individuals might be able to utilize the vulnerability information to impair the applicable system(s) and/or game(s) by showing a proof of concept or functional exploit code. You are allowed to submit a proof of concept or functional exploit code later (within three (3) weeks), after the initial submission of the report.\n- Confirm that the vulnerability is not widely known to the public.\nLegal\nYou agree that you will not violate any law, or disrupt or compromise any data that is not your own in connection with reporting vulnerability information to Nintendo.  \nNintendo reserves the right to modify the terms of this program at any time.  \nYou have no obligation to provide Nintendo with the abovementioned security and vulnerability information. However, you agree that by submitting such information to Nintendo, even if the information is not eligible for a reward, you grant Nintendo a worldwide, perpetual, irrevocable, non-exclusive, transferable, sublicenseable, fully-paid and royalty-free license under any and all intellectual property rights that you own or control to use, copy, modify, create derivative works based upon and otherwise exploit such information for any purpose.\nNintendo will not grant rewards to people who are/were employed by Nintendo or third parties that are/were engaged in developing code and/or hardware for Nintendo.\n",
		"handle": "nintendo",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/016/634/5f16fe1ab4e4baf6e0441e63ba30a1f32476c29b_large.png?1480712007",
		"internet_bug_bounty": false
	},
	{
		"id": 254,
		"url": "/robinhood",
		"name": "Robinhood",
		"meta": {
			"bug_count": 17,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "$0 commission stock trading platform",
		"stripped_policy": "Robinhood Bug Bounty Program\nGiven enough eyeballs, all bugs are shallow. - Eric Raymond\nRobinhood is a U.S. based financial services company headquartered in Palo Alto, California. The Robinhood platform allows individuals to invest in publicly traded companies and exchange-traded funds listed on U.S. exchanges without paying a commission. We believe that exceptionally engineered systems are the cornerstones of establishing trust and recognize the importance of security researchers in helping us keep our platform safe. We encourage responsible disclosure of security vulnerabilities and will award bounties commensurate with the severity of the issue.\nResponsible Disclosure\nIf you are able to execute an attack and gain access to our systems, accounts, or any other type of sensitive data, we ask that you make every effort to not leak data or damage the integrity of our systems and report the issue privately to us via this program. Specifically, this means:\n* Provide us with a reasonable amount of time to fix the issue before publishing it elsewhere.\n* Provide us with details (code, endpoints, etc) of the vulnerability so we can find and fix it.\n* Do not leak, tamper, or destroy any Robinhood data.\n* Do not defraud Robinhood users or Robinhood itself (by making fraudulent transactions).\n* Do not create a large number of user accounts or fake data records.\nSpecial Considerations\nDue to the nature of our business, we ask that you also follow these guidelines:\n* Do not perform tests against our system around when the stock market is open (Mon-Fri, 9AM - 4:30PM US/Eastern) which could result in downtime for our services.\n* Do not make financial transactions (money transfers, stock trades, etc) with compromised user account(s).\nScope\nRobinhood maintains the following services which are within the scope of this program:\n* Website (https://www.robinhood.com)\n* API (https://api.robinhood.com)\n* iOS and Android apps (available in their respective app stores)\nThe following are security vulnerabilities which would be relevant for us if they exist:\n* Authentication bypass or privilege escalation\n* Remote code execution\n* Sensitive data leakage\n* SQL injections\n* Accounting errors\n* XSS/CSRF/click-jacking\n* Denial of service not relating to a distributed attack\nOut of scope\nThe following issues are outside the scope of this program and should not be attempted:\n* No physical attacks against Robinhood employees, offices, or data centers.\n* No social engineering of Robinhood employees or users (phishing).\n* No DDoS (SYN floods, Slowloris attacks, etc)\n* 3rd-party API integrations with our services.\n* Vulnerabilities that are strictly client-side or require physical or malicious access to the user's device.\n* Our blog (http://blog.robinhood.com) or presences on social media (Facebook, Twitter, etc).\nSignal to Noise\nThe following issues are ambiguous in nature and should be carefully considered before a report is filed:\n* Missing best practices which don't lead to a vulnerability (automated scanners tend to report these)\n* Missing security headers (X-XSS-Protection, X-Content-Type-Options, X-Frame-Options, etc)\n* Missing CSRF tokens which don't affect the security of the application\n* SSL/TLS issues (renegotiation DoS, cipher suites, etc) unless you can demonstrate a practical attack\n* Brute force attacks against user chosen passwords\n* Throttling rate limits on endpoints which do not require it\nIn general, reports for these issues should demonstrate practical method(s) for exploitation. Otherwise, these reports will be closed as non-applicable.\nRewards\nThe minimum payout is $100 USD for reporting a previously unknown security vulnerability of sufficient severity and higher amounts will be awarded commensurate with the severity of the vulnerability. Final determination of the eligibility and severity of the issue will be made by the Robinhood security team.\n",
		"handle": "robinhood",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/254/d74a60c188938c8138257c2efe5ed90485d61156_large.png?1403588542",
		"internet_bug_bounty": false
	},
	{
		"id": 15252,
		"url": "/portswigger",
		"name": "PortSwigger Web Security",
		"meta": {
			"bug_count": 25,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "",
		"stripped_policy": "Scope\nWebsite: https://portswigger.net/    \nSoftware: Burp Suite Professional and Burp Suite Free Edition\nAll subdomains of portswigger.net are strictly out of scope. Do not test these.\nIf you wish to test the Burp Collaborator functionality, please configure your own private Collaborator server and test that. \nVulnerabilities of interest\nHere are some examples of vulnerabilities that we could consider to be valid, and rough guidelines as to what kind of payout you can expect:\nCritical - $5000\nSQL injection on portswigger.net\nRemotely retrieving arbitrary users' Burp Collaborator interactions\nHigh  - $3000\nStored XSS on portswigger.net\nFile path traversal on portswigger.net\nComplete authentication bypass on portswigger.net\nA website accessed through Burp Suite can make Burp execute arbitrary code\nMedium - $1000\nA website accessed through Burp Suite can retrieve local files from the user's system\nA website accessed through Burp Suite can extract data from Burp's sitemap\nExploitable reflected XSS on portswigger.net\nCSRF on significant actions\nAny medium severity issue involving unlikely user interaction - $100-$1000\nReflected XSS that is unexploitable due to CSP\nDLL hijacking on the Burp Suite installer, on fully patched Windows 7/8.1/10\nHeader injection in Burp Suite\nIf a report does not qualify but we find it useful, we may reward it with reputation or swag as a goodwill gesture.\nIssues not of interest\nThe following are strictly forbidden and may result in you being barred from the program, the website, or both:\nDenial of service attacks\nPhysical or social engineering attempts\nTargeting subdomains of portswigger.net\nBruteforcing subdomains\nSpamming orders\nUnthrottled automated scanning - please throttle all tools to one request per second.\nWe are not interested in low severity, purely theoretical and best-practice issues. Here are some examples:\nDenial of service vulnerabilities\nHTTP Options header\nServer errors with no sensitive information like https://portswigger.net/careers%22%3E\nHeaders like Server/X-Powered-By disclosing version information\nXSS issues in non-current browsers\nwindow.opener related issues\nUnvalidated reports from automated vulnerability scanners\nCSRF with minimal security implications (logout, DoS, etc.)\nIssues related to email spoofing (eg SPF/DMARC)\nDNS issues\nContent spoofing\nReports that state that software is out of date or vulnerable without a proof of concept\nMissing autocomplete attributes\nMissing cookie flags on non-security sensitive cookies\nSSL/TLS scan reports (this means output from sites such as SSL Labs)\nCaching issues\nConcurrent sessions\nHPKP / HSTS preloading\nImplausible bruteforce attacks \nThere are a few known issues we consider to be low severity, but may fix eventually:\nAs customer numbers are emailed out in plaintext, users should be encouraged to regenerate them on first login\nGenerating a new customer number should kill all associated sessions\nInvoices, quotations and receipts can be accessed by anyone who is given the link. This is an intentional design decision to enable sharing (the ability to view someone's invoice without being given the link would be considered a serious vulnerability)\nPlug 'n Hack discloses the port the proxy is listening on by design\nChanging the proxy settings to listen on a non-loopback IP exposes the web interface to people with network access by design.\nSome other caveats:\n- The Paypal price can be tampered with but underpayment will result in product non-delivery so this isn't a security issue.\n- We use Content-Security-Policy (CSP) site-wide. This means you will have a hard time doing alert(1). We pay for HTML/JavaScript injection regardless but to maximize your payout, see if you can make a payload that will steal some sensitive information.\n- As the makers of Burp Suite, we can assure you that we have already scanned our website with it. Don't waste your bandwidth.\n- Extensions including those in the BApp Store are out of scope. We highly recommend disabling all extensions before testing Burp, to save yourself from wasting time.\nWhat constitutes a vulnerability in Burp Suite?\nThe system that Burp Suite runs on is trusted, and every system that can access the Proxy listener is trusted to access the data within Burp. Extensions, configuration files and project files are also trusted. Websites accessed through Burp are untrusted, so anything a website could do to read files off the user's computer, read data out of Burp Suite, or gain remote code execution would be considered a vulnerability. Also, any way to get someone else's Collaborator interactions would be considered a vulnerability. Burp doesn't enforce upstream SSL trust by design, so we're not currently concerned about issues like weak SSL ciphers that would be considered a vulnerability in a web browser. Detection of Burp usage, denial of service vulnerabilities, and license enforcement/obfuscation issues are all out of scope. Please refer to the payout guidelines for some example vulnerabilities.\nContact\nIf you have any questions, you can contact us at support@portswigger.net\nGood luck and have fun!\n",
		"handle": "portswigger",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/015/252/1946f1aee90e57d8c1d717e800d60484823667de_large.?1473435773",
		"internet_bug_bounty": false
	},
	{
		"id": 1989,
		"url": "/starbucks",
		"name": "Starbucks",
		"meta": {
			"bug_count": 176,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Inspiring and nurturing the human spirit -- one person, one cup, one neighborhood at a time.",
		"stripped_policy": "Starbucks believes in a program that fosters collaboration amongst security professionals to help protect our customers’ personal information from malicious activity due to vulnerabilities against our networks, web and mobile applications and set security policies across our organization. We treat the security and safety of our customers’ personal information with the utmost importance.\nFor the protection of our customers, Starbucks does not disclose, discuss or confirm security matters until comprehensively investigating, diagnosing and fixing any known issues.\nProgram Rules\nDo not intentionally harm the experience or usefulness of the service to others, including degradation of services \u0026amp; denial of service attacks.\nDo not attempt to view, modify, or damage data belonging to others\nDo not disclose the reported vulnerability to others until we’ve had reasonable time to address it.\nBounty Eligibility\nYou must agree and adhere to the Program Rules and Legal terms as stated in this policy.\nYou must be the first to report the issue in order to be eligible for bounty*.\nYou must be available to supply additional information, as needed by our team, to reproduce and triage the issue.\nStarbucks Partners are not eligible for participation in this program\n*Please note that Starbucks has been managing a bug bounty program independent of HackerOne for some time. Reports submitted to our existing program have been submitted outside of the HackerOne platform and, as such, we may not always be able to link to a duplicate report. We appreciate your understanding in this matter as we transition our program to the HackerOne platform.\nTargets Eligible for Reward\nCurrently, we offer monetary rewards only for the properties listed below.\nSubdomains not specifically listed are not included in the Targets Eligible for Reward.  \nSome unique issue types not related to the domains listed below, such as reports of subdomain takeovers, may also be eligible for reward.\nWe may modify this list over time, so be sure to visit our policy often to review any updates.\nIf you have found a vulnerability in a Starbucks site or app not contained within this list, you can still submit, and Starbucks will triage the report.\nThese types of reports will not result in a monetary reward but valid reports that are resolved can improve your reputation score on the HackerOne platform.\nwww.starbucks.com (http://www.starbucks.com)\nwww.starbucks.ca (http://www.starbucks.ca)\nwww.starbucks.com.br (http://www.starbucks.com.br)\nwww.starbucks.fr (http://www.starbucks.com.fr)\nwww.starbucks.co.uk (http://www.starbucks.com.co.uk)\nwww.starbucks.de (http://www.starbucks.com.de)\nstore.starbucks.com (http://store.starbucks.com)\nstore.starbucks.ca (http://store.starbucks.ca)\nstore.starbucks.fr (http://store.starbucks.fr)\nstore.starbucks.co.uk (http://store.starbucks.co.uk)\nstore.starbucks.de (http://store.starbucks.de)\nwww.teavana.com (http://www.teavana.com)\nStarbucks iOS (https://itunes.apple.com/app/starbucks/id331177714) \u0026amp; Android (https://play.google.com/store/apps/details?id=com.starbucks.mobilecard) apps for US, CA, BR, FR, UK, DE\nStarbucks app for Windows (https://www.starbucks.com/coffeehouse/mobile-apps/starbucks-app-for-windows)\nMany of our sites share a common platform. Because of this, a vulnerability reported on one domain may exist on another domain if the issue exists in the shared platform itself. For example, an issue reported for starbucks.com may also present in the exact same way on starbucks.ca and the issue will be resolved on both sites with the same fix. We ask that you take the time to try to confirm this first, and include the other vulnerable locations in one report rather than submitting multiple reports. In these cases, we treat the issue as one bug and will close out others as duplicates. Rest assured, we do take the existence of a vulnerability present on multiple sites into consideration during reward time.\nPlease consider the following when reporting issues:\n- Many of our eCommerce sites share a common platform including: teavana.com, store.starbucks., and some shop.starbucks. sites. Some bugs may present in only one of the sites, some may present in multiple with the same root cause.\n- Many of our other www.starbucks.* sties share a common platform, including: starbucks.com, starbucks.ca, starbucks.de, starbucks.fr, starbucks.com.br, starbucks.co.uk. Some bugs may present in only one of the sites, some may present in multiple with the same root cause.\n- It speeds up the triage process if you include in your one report other locations where the same bug is present.\n- We do consider the number of locations where the vulnerability exists when awarding.\n- When in doubt, please file a single report and write down your thoughts. If we think you found different vulnerabilities, we’ll be more than happy to let you file another bug so your reputation and signal will get another boost.\nExclusions\nDenial of Service attacks\nDescriptive error messages or headers (e.g. Stack Traces, application or server errors, banner grabbing) \nDisclosure of known public files or directories\nOutdated software / library versions\nOPTIONS / TRACE HTTP method enabled\nCSRF on logout\nCSRF on forms that are available to anonymous users\nCookies that lack HTTP Only or Secure settings for non-sensitive data\nSelf-XSS and issues exploitable only through Self-XSS\nReports resulting from automated scanning utilities without additional details or a POC demonstrating a specific exploit\nAttacks requiring physical access to a user's device\nAttacks dependent upon social engineering of Starbucks employees or vendors.\nUsername enumeration based on login or forgot password pages.\nEnforcement policies for brute force or account lockout\nSSL/TLS best practices\nClickjacking, without additional details demonstrating a specific exploit\nMail configuration issues including SPF, DKIM, DMARC settings\nUse of a known-vulnerable library without a description of an exploit specific to our implementation\nPassword and account recovery policies\nPresence of autocomplete functionality in form fields\nPublicly accessible login panels\nLack of email address verification during account registration\nRate-limiting issues\nContent spoofing / text injection\nMissing security headers without additional details or a POC demonstrating a specific exploit \nMixed content issues\nAttacks requiring physical access to device or MiTM\nIssues related to active sessions after password changes.\nHyperlink injection in emails using forms available to any user\nHost Header Injection\nStarbucks reserves the right to add to and subtract from the Exclusions list depending on evaluated severity of reported vulnerabilities and risk acceptance.\nRewards\nAll bounty amounts will be at the discretion of the Starbucks Bug Bounty team, which will be evaluated for severity, impact, and quality of the report to determine the bounty level. There could be submissions which we accept the risk and will not fix.\n* Critical: Bounty min of $4000.00.\nExamples: privilege escalation, remote code execution, SQL injection (depending on impact), unauthorized access to account data.\nHigh: Bounty min of $500.00.\nExamples: Stored XSS against another user, insecure direct object reference to unauthorized data, SQL injection (depending on impact).\nMedium: Bounty min of $250.00\nExamples: XSS (depending on impact), CSRF (depending on impact).\nLow: Bounty min of $100.00\nExamples: XSS (depending on impact), CSRF (depending on impact), Invalidated redirects (depending on impact).\nWhat to include in your report\nA well written report will allow us to more quickly and accurately triage your submission.\n* A clear description of the issue, including the impact you believe it has to the user, Starbucks, others.\n* Specific reproduction steps including the environment used for testing (browsers, devices, tools, configuration) and any accounts used during testing.\n* Your recommendations to resolve the issue.\nLegal\nStarbucks reserves the right to modify terms and conditions of this program and your participation in the program constitutes acceptance of all terms. Please check this site regularly as we routinely update our program terms and eligibility, which are effective upon posting. We reserve the right to cancel this program at any time. Must be 18 or older to be eligible for an award.\n",
		"handle": "starbucks",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/989/fab88ba475dceb0fe28ffe15c4c5027b06408bbf_large.?1432930626",
		"internet_bug_bounty": false
	},
	{
		"id": 16064,
		"url": "/deptofdefense",
		"name": "U.S. Dept Of Defense",
		"meta": {
			"bug_count": 253,
			"accepting_submissions": true
		},
		"about": "",
		"stripped_policy": "DoD Vulnerability Disclosure Policy\nPurpose\nThis policy is intended to give security researchers clear guidelines for conducting vulnerability discovery activities directed at Department of Defense (DoD) web properties, and submitting discovered vulnerabilities to DoD.\nOverview\nMaintaining the security of our networks is a high priority at the DoD. Our information technologies provide critical services to Military Service members, their families, and DoD employees and contractors. Ultimately, our network security ensures that we can accomplish our missions and defend the United States of America.\nThe security researcher community regularly makes valuable contributions to the security of organizations and the broader Internet, and DoD recognizes that fostering a close relationship with the community will help improve our own security. So if you have information about a vulnerability in a DoD website or web application, we want to hear from you!\nInformation submitted to DoD under this policy will be used for defensive purposes – to mitigate or remediate vulnerabilities in our networks or applications, or the applications of our vendors.\nThis is DoD’s initial effort to create a positive feedback loop between researchers and DoD – please be patient as we refine and update the process.\nPlease review, understand, and agree to the following terms and conditions before conducting any testing of DoD networks and before submitting a report. Thank you. \nScope\nAny public-facing website owned, operated, or controlled by DoD, including web applications hosted on those sites.¹\nHow to Submit a Report\nPlease provide a detailed summary of the vulnerability, including: type of issue; product, version, and configuration of software containing the bug; step-by-step instructions to reproduce the issue; proof-of-concept; impact of the issue; and suggested mitigation or remediation actions, as appropriate.\nBy clicking “Submit Report,” you are indicating that you have read, understand, and agree to the guidelines described in this policy for the conduct of security research and disclosure of vulnerabilities or indicators of vulnerabilities related to DoD information systems, and consent to having the contents of the communication and follow-up communications stored on a U.S. Government information system.\nGuidelines\nDoD will deal in good faith with researchers who discover, test, and submit vulnerabilities² or indicators of vulnerabilities in accordance with these guidelines:\n* Your activities are limited exclusively to –\n * (1) Testing to detect a vulnerability or identify an indicator related to a vulnerability;³ or \n * (2) Sharing with, or receiving from, DoD information about a vulnerability or an indicator related to a vulnerability. \n* You do no harm and do not exploit any vulnerability beyond the minimal amount of testing required to prove that a vulnerability exists or to identify an indicator related to a vulnerability.\n* You avoid intentionally accessing the content of any communications, data, or information transiting or stored on DoD information system(s) – except to the extent that the information is directly related to a vulnerability and the access is necessary to prove that the vulnerability exists. \n* You do not exfiltrate any data under any circumstances. \n* You do not intentionally compromise the privacy or safety of DoD personnel (e.g. civilian employees or military members), or any third parties.\n* You do not intentionally compromise the intellectual property or other commercial or financial interests of any DoD personnel or entities, or any third parties.\n* You do not publicly disclose any details of the vulnerability, indicator of vulnerability, or the content of information rendered available by a vulnerability, except upon receiving explicit written authorization from DoD.\n* You do not conduct denial of service testing.\n* You do not conduct social engineering, including spear phishing, of DoD personnel or contractors.   \n* You do not submit a high-volume of low-quality reports.\n* If at any point you are uncertain whether to continue testing, please engage with our team.\nWhat You Can Expect From Us\nWe take every disclosure seriously and very much appreciate the efforts of security researchers.  We will investigate every disclosure and strive to ensure that appropriate steps are taken to mitigate risk and remediate reported vulnerabilities.\nDoD has a unique information and communications technology footprint that is tightly interwoven and globally deployed. Many DoD technologies are deployed in combat zones and, to varying degrees, support ongoing military operations; the proper functioning of DoD systems and applications can have a life-or-death impact on Service members and international allies and partners of the United States. DoD must take extra care while investigating the impact of vulnerabilities and providing a fix, so we ask your patience during this period.\nDoD remains committed to coordinating with the researcher as openly and quickly as possible. This includes:\nWithin three business days, we will acknowledge receipt of your report. DoD’s security team will investigate the report and may contact you for further information.\nTo the best of our ability, we will confirm the existence of the vulnerability to the researcher and keep the researcher informed, as appropriate, as remediation of the vulnerability is underway.\nWe want researchers to be recognized publicly for their contributions, if that is the researcher’s desire. We will seek to allow researchers to be publicly recognized whenever possible. However, public disclosure of vulnerabilities will only be authorized at the express written consent of DoD.\nInformation submitted to DoD under this policy will be used for defensive purposes – to mitigate or remediate vulnerabilities in our networks or applications, or the applications of our vendors.\nLegal\nYou must comply with all applicable Federal, State, and local laws in connection with your security research activities or other participation in this vulnerability disclosure program.\nDoD does not authorize, permit, or otherwise allow (expressly or impliedly) any person, including any individual, group of individuals, consortium, partnership, or any other business or legal entity to engage in any security research or vulnerability or threat disclosure activity that is inconsistent with this policy or the law.  If you engage in any activities that are inconsistent with this policy or the law, you may be subject to criminal and/or civil liabilities.\nTo the extent that any security research or vulnerability disclosure activity involves the networks, systems, information, applications, products, or services of a non-DoD entity (e.g., other Federal departments or agencies; State, local, or tribal governments; private sector companies or persons; employees or personnel of any such entities; or any other such third party), that non-DoD third party may independently determine whether to pursue legal action or remedies related to such activities.\nIf you conduct your security research and vulnerability disclosure activities in accordance with the restrictions and guidelines set forth in this policy, (1) DoD will not initiate or recommend any law enforcement or civil lawsuits related to such activities, and (2) in the event of any law enforcement or civil action brought by anyone other than DoD, DoD will take steps to make known that your activities were conducted pursuant to and in compliance with this policy. \nDoD may modify the terms of this policy or terminate the policy at any time. \n¹ These websites constitute “information systems” as defined by 6 U.S.C. 1501(9)).\n² Vulnerabilities throughout this policy may be considered “security vulnerabilities” as defined by 6 U.S.C. 1501(17)\n³ These activities, if applied consistent with the terms of this policy, constitute “defensive measures” as defined by 6 U.S.C. 1501(7)). \n",
		"handle": "deptofdefense",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/016/064/f90e53b2657375c0f620872b6bf790fab4d6725e_large.png?1477763288",
		"internet_bug_bounty": false
	},
	{
		"id": 12633,
		"url": "/owox",
		"name": "OWOX, Inc.",
		"meta": {
			"bug_count": 27,
			"accepting_submissions": true
		},
		"about": "Get more advantages from Google Analytics and complete control over your data in Google BigQuery",
		"stripped_policy": "No technology is perfect, and OWOX believes that working with skilled security researchers across the globe is crucial in identifying weaknesses in any technology. If you believe you've found a security issue in our product or service, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nExclusions\nWhile researching, we'd like to ask you to refrain from:\n* Researching www.owox.com, www.owox.ru, www.owox.ua domains (temporarily)\n* my.bi.owox.com (to be deprecated soon)\n* Denial of service\n* Spamming\n* Social engineering (including phishing) of OWOX staff or contractors\n* Any physical attempts against OWOX property or data centers\nThank you for helping keep OWOX and our users safe!\n",
		"handle": "owox",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/012/633/0ec1a453b212c50daddfd897a8d9f778df5e838b_large.?1462606095",
		"internet_bug_bounty": false
	},
	{
		"id": 12946,
		"url": "/pushwoosh",
		"name": "Pushwoosh",
		"meta": {
			"bug_count": 69,
			"accepting_submissions": true
		},
		"about": "Real-time cross-platform push notification service. Engage your audience effectively by sending unlimited push notifications",
		"stripped_policy": "We are offering a place in our Hall of Fame on an ongoing basis for those penetration testers, who’ll find valid vulnerabilities, subject to the rules and terms of participation. If you discovered a vulnerability in Pushwoosh application, services or infrastructure, please don’t share it publicly. Send any problems to us via Contact Us (https://www.pushwoosh.com/contact-us/) form on our website. We’ll ping you back as soon as we can with a confirmation and endless kudos. \nWe're trying to respond as fast as we can, but It may take us up to 14 days to process a new report.\nSending a bug report\nOnly original, previously unreported bugs will be taken into account. Please submit one issue per ticket.\nWhat should be included in your report:\n* Thoroughly described ways to reproduce the particular bug\n* How this vulnerability can be exploit/potentially exploit\nWould be highly appreciated:\n* Screenshot or video with an exploit demonstration\nAPI Information and Documentation\nPushwoosh Docs (http://docs.pushwoosh.com) \nCreating the Account\nYou must use the pentester_anyCharacters@any.domain email alias when signing up for pushwoosh.com (https://www.pushwoosh.com/) accounts that will be used to participate in this bounty.\nAccounts not following this rules will be suspended without warning.\nTargets\nThe target host for this bounty is:\n* go.pushwoosh.com\nThe following will not qualify for the program:\npushwoosh.com and docs.pushwoosh.com and community.pushwoosh.com are specifically excluded from this bounty.\nThe following will not qualify for the bounty program:\nAny kind of brute force\nDisclosure of known public files or directories, (e.g. robots.txt)\nDDOS\nPassword policy\nAny CSRF\nOpen redirect\nMissing secure cookie flag\nDNSSEC not configured\nMissing SPF DNS record (http://www.openspf.org/FAQ/Common_mistakes#all-domains)\nAny CSV Macro Injection (https://www.owasp.org/index.php/CSV_Excel_Macro_Injection)\nClickjacking\nAny kind of HTML injection on Rich Media\nMissing HTTP security headers (https://www.owasp.org/index.php/List_of_useful_HTTP_headers#tab=Headers)\nReports from security scanners and other automatic systems\nVulnerability reports based solely on the software version / protocol\nIssues with zendesk widgets and intercom widgets\nPushwoosh Responsible Disclosure Policy\nIn the best interest of our customers and Internet users worldwide, we ask that you follow the guidelines of responsible disclosure:\n* Do not publicly disclose part or all of the vulnerability until we have had a chance to investigate and address it.\n* Do allow us a reasonable timeframe of 90 days to respond back to you and address the vulnerability before making any information public.\nOur Thanks to You\nPushwoosh greatly appreciates the efforts of those security researchers who identify vulnerabilities and work with us to ensure that we can develop a fix and issue it to all our users. We thank you for going out of your way to help us minimize the risk to our users as well as help us in our vision to improve the overall security of our products.\n",
		"handle": "pushwoosh",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/012/946/e0e6d3d22adec3ae5aebd95967455ffc7c4f3ea0_large.png?1463570908",
		"internet_bug_bounty": false
	},
	{
		"id": 15668,
		"url": "/shopify-scripts",
		"name": "shopify-scripts",
		"meta": {
			"bug_count": 116,
			"accepting_submissions": true
		},
		"about": "",
		"stripped_policy": "Shopify Scripts is a ruby gem (https://github.com/Shopify/mruby-engine) based on MRuby (https://github.com/mruby/mruby), developed at Shopify. It provides a sandboxed, lightweight environment where untrusted Ruby scripts can safely be run in a way that isolates them from Shopify’s native Ruby environment. We are looking to reward any issue that affects this sandboxed environment that could put Shopify’s infrastructure or our merchants’ data at risk.\nYou can find technical details on our implementation of MRuby at https://www.mruby.science/ or play with a live MRuby sandbox (https://www.mruby.science/runs).\nUpdate Dec 9, 2016: We wish to thank the researchers who have submitted vulnerability reports to the Shopify Scripts program. As of today, we have implemented technical mitigations (seccomp-bpf sandboxing and process isolation) on the application servers hosting Shopify Scripts. As a result, we expect most vulnerabilities will no longer be exploitable without additional bugs in the kernel or seccomp itself, and so we are lowering the payout amounts for our program to 10% of previous levels. Researchers who have submitted issues prior to today will receive payouts under the old structure, however any new reports received will be eligible for payouts within the structure below.\nScope\nAny issue in MRuby (https://github.com/mruby/mruby), as long as it is exploitable through mruby-engine (https://github.com/Shopify/mruby-engine).\nAny issue that affects Shopify caused by a bug in MRuby (https://github.com/mruby/mruby) or mruby-engine (https://github.com/Shopify/mruby-engine).\nRules for participation\nDo not test any proofs of concept on Shopify’s infrastructure, or existing Shopify stores.\nDo not disclose issues publicly before they are resolved.\nOnly original reports will be rewarded.\nWe will reward security issues only; bugs without security implications should not be reported.\nYou agree to release any patch sent to us under the original project license (in this case, MIT License (https://github.com/mruby/mruby/blob/master/MITL)).\nFailure to follow these rules will disqualify you from participating in this program.\nMaximum payouts and eligible vulnerabilities\n$2,000 for issues that directly lead to a compromise of Shopify’s infrastructure (for example, remote code execution with a PoC provided).\n$1,000 for denial of service against Shopify’s infrastructure caused by a bug in MRuby or mruby-engine (for example, a crash in the native library).\n$500 for a bypass of resource limitations (execution time, instruction count, etc).\n$200 for serialization issues, escaping issues, unsafe handling of attacker-controlled data, etc. caused by a bug in MRuby or mruby-engine.\n$100 for security issues not affecting Shopify but affecting MRuby or mruby-engine.\nCriteria for awarding bounties\nWe will use the following criteria to help us determine a final payout amount for each valid issue reported to us. \nThe report demonstrates beyond a doubt that that the issue is exploitable, with a working proof of concept or any other appropriate means.\nThe report includes a patch that resolves the issue. Since MRuby is an open source project, we’d like to encourage meaningful contributions that will benefit everyone.\nDifficulty of exploitation and impact will be considered as well.\nKnown issues\nThe following issues are already known to us, and will be closed as duplicates:\nStack overflows resulting from execution of recursive Ruby code\nStack overflows resulting from parsing of long Ruby expressions\nStack overflows when printing recursive objects\nAny issue listed at https://github.com/mruby/mruby/issues\n",
		"handle": "shopify-scripts",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/015/668/528aa2cdf99ad073baa698a013ca763bd0da0ca2_large.jpg?1475592254",
		"internet_bug_bounty": false
	},
	{
		"id": 424,
		"url": "/blockchain",
		"name": "Blockchain",
		"meta": {
			"bug_count": 19,
			"accepting_submissions": true,
			"minimum_bounty": 50,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "The world's most popular Bitcoin wallet! Charts, statistics, blockchain explorer and more!",
		"stripped_policy": "ABOUT BLOCKCHAIN\nBlockchain is Bitcoin's most popular bitcoin wallet and block explorer. As of January 2014 the site has over 1.1 million registered users and 200 million page views per month.\nHACKERONE\nThe purpose of this reward program is to be proactive about security by providing a channel for security researchers to report potential security vulnerabilities identified related to our web assets and mobile applications.\nNote: Higher rewards will be paid out in case of vulnerabilities of a certain interest or criticality. \nPlease review our security writeup before submitting reports:\nhttps://blockchain.info/wallet/security\nSCOPE\nThe following items can be reported to us through HackerOne, but are out of scope for bounty rewards:\n- Vulnerabilities related to 3rd-party software (e.g. Java, plugins, extensions) are not in scope.\n- Minor issues, e.g. cookie flags and auto-complete fields are out of scope.\n- Open URL Redirects\nThe following commonly reported items are known to us and should not be reported:\n- Open redirect at blockchain.info/r. unless you devise a way to bypass the warning screen\n- The same email address can be used to register multiple wallet accounts -- this is intentional.\n-  https://en.bitcoin.it/wiki/ and the  en.bitcoin.it domain are NOT owned by Blockchain and therefore are NOT in scope.\n- Support for HTTP methods such as OPTIONS does not constitute a vulnerability by itself; please ONLY submit findings related to this if you identify specific vulnerabilities.\nTHANK YOU\nBounties are paid out after a risk assessment has been made by our Security Engineering team. Bugs must fall within scope, be reproducible, and must not have been previously reported by other researchers in order to be eligible for a bounty. Roughly speaking, we calculate the severity of an issue with the following formula:\nSeverity = Impact * Likelihood\nBase bounty amounts are as follows:\nLow: $50\nMedium: $400\nHigh: $1600\nCritical: \u0026gt;$1600\nWe will pay higher bounties to researchers who make things easy for us. Such activities include:\n- Providing additional details when queried or confirming fixes\n- Detailed threat modeling information about the identified issues. How would an attacker use the issue you identified to attack our customers or our team?\n- Clearly written reports\n- Working proof of concept provided and/or detailed steps to reproduce issue\n",
		"handle": "blockchain",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/424/3d77b7fc77349876951384c2f45d23881eabfa57_large.jpg?1422661620",
		"internet_bug_bounty": false
	},
	{
		"id": 15688,
		"url": "/brave",
		"name": "Brave Software",
		"meta": {
			"bug_count": 33,
			"accepting_submissions": true,
			"minimum_bounty": 50,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "",
		"stripped_policy": "Brave Software believes that working with security researchers across the globe is crucial in making the web safer. If you believe you've found a security issue in our product or service, we encourage you to notify us. We welcome working with you to resolve the issue promptly. Thanks in advance!\nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party. We may publicly disclose the issue before resolving it, if appropriate. \nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nIf you would like to encrypt your report, please use the PGP key with long ID 5273 5B5A AAFA F9B1 B40A  7222 6B64 A862 A4C7 8E4B (available in the public keyserver pool).\nIn-scope\nSecurity issues in any current release of the Brave browser. This includes desktop, iOS, and Android (excluding LinkBubble). Packages are available at https://brave.com/downloads.html.\nExclusions\nThe following bug classes are out-of scope:\n* Bugs that are already reported on any of Brave's issue trackers (https://github.com/brave), or that we already know of. Note that some of our issue trackers are private.\n* Bugs on [*.]brave.com are generally out-of-scope, unless they are highly severe and warrant an immediate fix. Due to a high volume of reports, we may not respond to issues related to the website.\n* Issues in an upstream software dependency (ex: libchromiumcontent, Electron) which are already reported to the upstream maintainer.\n* Login/logout CSRF\n* Attacks requiring physical access to a user's device.\n* New browser fingerprinting attacks are generally out-of-scope but will be considered on a case-by-case basis. Bypass of an existing fingerprinting defense, however, is valid.\n* Self-XSS\n* Issues related to software or protocols not under Brave's control\n* Vulnerabilities in outdated versions of Brave\n* Redirect continuation URL vulnerabilities\n* Missing security best practices that do not directly lead to a vulnerability\n* Issues that do not have any impact on the general public\n* Issues in LinkBubble (https://play.google.com/store/apps/details?id=com.linkbubble.playstore) are no longer in scope.\n* Denial-of-service and crash issues in Brave browser are out-of-scope UNLESS: the issue does not exist in Chrome AND the issue crashes/hangs the entire browser (not just a single tab). Unless the DOS issue also leads to remote code execution or disclosure of users' data, we will not award a bounty but may give you thanks.\nWhile researching, we'd like to ask you to refrain from:\n* Denial of service\n* Spamming\n* Social engineering (including phishing) of Brave Software staff or contractors\n* Any physical attempts against Brave Software property or data centers\nThank you for helping keep Brave Software and our users safe!\n",
		"handle": "brave",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/015/688/5ad0a4dfbd28220048d5b49731abf91a49ea4b8f_large.?1475691936",
		"internet_bug_bounty": false
	},
	{
		"id": 8212,
		"url": "/rubygems",
		"name": "RubyGems",
		"meta": {
			"bug_count": 25,
			"accepting_submissions": true,
			"minimum_bounty": 500,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "RubyGems.org is the Ruby community’s gem hosting service.",
		"stripped_policy": "Found a security issue with RubyGems or RubyGems.org? Please follow these steps to report it.\nFor bounty rewards, only the rubygems library is in scope.\nReporting a security issue\nBefore continuing, please ensure this is a security issue for the RubyGems client or the RubyGems.org service. For all vulnerabilities with individual gems, follow our guide on reporting security issues (http://guides.rubygems.org/security/#reporting-security-vulnerabilities) with others' gems. If it's a security issue with the Ruby on Rails framework, see the Rails Security guide (http://rubyonrails.org/security/).\nFor any security bug or issue with the RubyGems client or RubyGems.org service, please let us know here with details about the problem.\nPlease note: the rubygems-developers mailing list (https://groups.google.com/forum/#!forum/rubygems-developers), the rubygems.org mailing list (https://groups.google.com/forum/#!forum/rubygems-org), and the #rubygems IRC channel are public areas. If escalating to these places, please do not discuss your issue, simply say that you’re trying to get a hold of someone from the security team. Thanks in advance for responsibly disclosing your security issue.\nReporting RubyGems.org Website Problems\nIf you're having trouble pushing a gem, or otherwise need help with your RubyGems.org account, please open a new help issue.\nFor bugs or other problems with RubyGems.org, please use the RubyGems.org help site to open a new issue (http://help.rubygems.org).\nDisclosure Process\nRubyGems and RubyGems.org follow a 5 step disclosure process:\nSecurity report received and is assigned a primary handler. This person will coordinate the fix and release process.\nProblem is confirmed and, a list of all affected versions is determined. Code is audited to find any potential similar problems.\nFixes are prepared for all releases which are still supported. These fixes are not committed to the public repository but rather held locally pending the announcement.\nA suggested embargo date for this vulnerability is chosen.\nOn the embargo date, the rubygems-developers mailing list (https://groups.google.com/forum/#!forum/rubygems-developers) is sent an announcement. This will include patches for all versions still under support. The changes are pushed to the public repository and new gems released to rubygems. At least 6 hours after the mailing list is notified, a copy of the advisory will be published on the RubyGems.org blog (http://blog.rubygems.org/).\nThis process can take some time, especially when coordination is required with maintainers of other projects. Every effort will be made to handle the bug in as timely a manner as possible, however it’s important that we follow the release process above to ensure that the disclosure is handled in a consistent manner.\nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nExclusions\nWhile researching, we'd like to ask you to refrain from:\n* Denial of service\n* Spamming\n* Brute-force attacks\n* Social engineering (including phishing) of RubyGems.org staff or volunteers\n* Any physical attempts against RubyGems.org property or data centers\n* Using scanners or automated tools to find vulnerabilities - they’re noisy and lead to false positives\nReceiving Security Updates\nThe best way to receive all the security announcements is to subscribe to the rubygems-developers mailing list (https://groups.google.com/forum/#!forum/rubygems-developers).\nNo one outside the core team or the initial reporter will be notified prior to the lifting of the embargo. We regret that we cannot make exceptions to this policy for high traffic or important sites, as any disclosure beyond the minimum required to coordinate a fix could cause an early leak of the vulnerability.\nInternet Bug Bounty Qualification\nFor bounty rewards, only the rubygems library (https://github.com/rubygems/rubygems) is in scope. Also, only critical vulnerabilities that demonstrate complete compromise of the system's integrity or confidentiality are eligible for a bounty - typically Arbitrary Code Execution or equivalent impact. While we encourage you to submit all potential issues, lower severity issues are not in scope for the bounty at this time.\n| Impact | Amount |\n| --- | --- |\n| High Demonstrate that remote exploitation of this bug can be easily, actively, and reliably achieved. | $1,500+ |\n| Medium Demonstrate that remote exploitation of this bug is very likely (e.g. good control a register). | $1,000 |\n| Minimum Demonstrate the presence of a security bug with probable remote exploitation potential. | $500 |\nThe project maintainers have final decision on which issues constitute security vulnerabilities. The Internet Bug Bounty Panel (https://internetbugbounty.org/#the-panel) will respect their decision, and we ask that you do as well. It's important to keep in mind that not all submissions will qualify for a bounty, and that the decision to award a bounty is entirely at the discretion of the Panel.\nComments on this Policy\nIf you have any suggestions to improve this policy, please send an email to security@rubygems.org.\nThank you for helping keep RubyGems and our users safe!\n",
		"handle": "rubygems",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/008/212/d77786c61e21edfce61834b86085e205d4d7413d_large.png?1469676240",
		"internet_bug_bounty": true
	},
	{
		"id": 545,
		"url": "/yelp",
		"name": "Yelp",
		"meta": {
			"bug_count": 182,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Connecting people to great local businesses in communities around the world.",
		"stripped_policy": "There’s no such thing as a perfect technology — not since they put the finishing touches on the wheel — but here at Yelp we are committed to getting as close as we can. It’s a big world and we believe that working with skilled security researchers from all corners is the key to identifying the weaknesses in any technology. If you think you have found a security issue in our product, it could be your lucky day. Let us know via our bug-bounty program on HackerOne and we’ll work with you to fix it. Yes, there’s a reward in it for you, too. \nScope\nWe’d love to have you muck around with our web apps, mobile apps, and infrastructure. Hit us with your best shot. We also put together a bug-bounty map (https://engineeringblog.yelp.com/2016/09/yelp-public-bug-bounty-map.html) to help you hit the ground running.\nPayouts\nOur vulnerability-reward payouts will go up to $15,000 USD for the most impactful exploits. If we accept your report, our minimum bounty is $100.\nWe'll Be Nice To You\nThe security team at Yelp is all about keeping our users, our data, our employees, and our sites safe and sound. We are committed to working with security experts from all over the world to stay up-to-date with the latest security techniques. If you have found a security issue and you think we should know about it, we are ready to work with you. Let us know about it and we will make every effort to fix the issue. \nWe believe in recognizing everyone’s work. If your work helps us improve the security of our platform and services, we are happy to acknowledge your contribution. Rest assured, there are cash rewards, too. \nPlease Be Nice To Us\nWe want you to bring out your big guns, but hold off on actually breaking anything. Please avoid DDoS’ing us or breaking our systems and services while you are testing. If you are testing a feature that involves an email component, use an \"@test.com\" account, where possible, to make your tests easily filterable.\nExclusions\nIssues related to software not under Yelp’s control are out of scope. If you have found a vulnerability in systems managed externally, we can’t make any guarantees about when we can fix those issues.\nWe don’t need help running automated vulnerability scanners. We’ve got those covered. We need your brainpower, not your processing power.\nNewly acquired sites and companies are subject to a twelve-month blackout period. Bugs reported sooner are certainly appreciated but won't qualify for rewards.\nNote eat24hours.com, eat24.com, yes-pos.com, Eat24 mobile apps, and other Eat24 properties are not in the scope of this program.\nOut-of-scope Bugs\nVulnerabilities that require social engineering/phishing.\nClickjacking without a well-defined security/privacy risk.\nOpen redirects that cannot be leveraged to programmatically exfiltrate sensitive information (e.g., cookies, OAuth tokens, etc.).\nDisclosure of software version numbers (we maintain forks of several tools, and apply security patches accordingly).\nUnvalidated vulnerabilities reported by automated tools/scanners.\nContent Spoofing/Text Injection that cannot be leveraged for XSS or sensitive data disclosure.\nHost header injection without a specific proof of concept.\n",
		"handle": "yelp",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/545/abb21cac92cea90dd4ea103bc0d5d062d43793d2_large.png?1473896260",
		"internet_bug_bounty": false
	},
	{
		"id": 1453,
		"url": "/boozt",
		"name": "Boozt Fashion AB",
		"meta": {
			"bug_count": 120,
			"accepting_submissions": true
		},
		"about": "E-Commerce shop",
		"stripped_policy": "At Boozt we take security seriously, we want our customers not to only have great shopping experience but also feel and know they are safe.\nBut nobody's perfect and top-notch security online is possible only with everyone's help.\nIf you think you found a security vulnerability within our systems we ask you to give us reasonable amount of time to fix before publicly disclosing it. Also please follow the guidelines below on scope and (non-)qualifying vulnerabilities.\nScope\n*  www.boozt.com\n*  m.boozt.com\n*  booztfashion.com\n*  *.booztx.com\n*  www.booztlet.com\n*  Boozt iOS App\n*  Boozt Android APP\n!! If the same vulnerability can be found over different domains - www.boozt.com / www.booztlet.com - it's counted as one. It's one system with only UI \u0026amp; Domain that is different so most of the time vulnerabilities are shared and we will attribute it to original report even though domain does not match.\nRules\n* Follow the HackerOne Vulnerability Disclosure Guidelines\n* Do not access or modify other users' private data\n* Do not DDoS\n* Do not use automated tools or scanners\n* Do not move beyond \"proof of concept\" repro steps for server-side execution issues.\nQualifying vulnerabilities\nFocus is on vulnerability that could expose private user data or in any other way affect user or Boozt data security. Very good and severe vulnerability examples are SQL injection, server-side code exection, XSS.\nNon-qualifying vulnerabilities\nThese are vulnerabilities that we are aware of and are accepted risk or are already on the roadmap to being fixed.\n* Missing CSRF tokens on forms (we are reviewing this internally and addressing all known cases.)\n* Any reports on CSRF issues regarding adding/remove cart items, favorites, recent items, etc will be marked as Not Applicable. Also any reports on login/logout CSRF issues. We are aware of these cases and there is no need to report them.\n* Sessions not being invalidated when a best practice says so\n* Sessions being hijacked because of HTTP\n* Reports from automated tools or scans\n* Rate limitations (e.g. reset password, login, etc). Also includes BruteForce / DDoS reports.\n* Phishing\n* Clickjacking (or any other security issue achieved through using Clickjacking)\n* Missing http security headers\n* Full-Path Disclosure\n* Non-usage of HTTPS on specific parts of the site (we have a plan for the fixes in the roadmap already)\n* HTTPS Caching issues\n* Reports of insecure SSL/TLS ciphers\n* Version number information disclosure\n* User enumeration\n* HTTP Public-Key-Pins (HPKP)\n* Reports of insecure crossdomain.xml configuration\n* Social engineering of Boozt staff\n* Issues on services not under Boozt control\n* Spam techniques, including SPF and DKIM issues\n* Code Obfuscation in Mobile Apps\n* Issues relating to Password Policy\n* Best practices concerns (evidence of a security issue required)\n* Race conditions that don't compromise the security of Boozt or our customers\nThanks \nWe will act as fast as possible to all responsible disclosures to fix them. In addition we will determine on our discretion if the report qualifies for bounty and amount depending on the severity of the report.\nOur security bug bounty reward budget is between 50$ and 500$, lowest being minor security issues and highest being severe bugs like SQL injection or remote code execution.\nPlease consider that we are trying bug bounty program first time and it is in very early stages. Because of this we currently do not agree to publicly disclose any reports.\n",
		"handle": "boozt",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/453/1ddb741bd3da57ed9f3400c9e5da68861d430c88_large.png?1427993957",
		"internet_bug_bounty": false
	},
	{
		"id": 1601,
		"url": "/legalrobot",
		"name": "Legal Robot",
		"meta": {
			"bug_count": 102,
			"accepting_submissions": true,
			"minimum_bounty": 20,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Automated legal document review using artificial intelligence",
		"stripped_policy": "If you believe you have found a security vulnerability in Legal Robot, we encourage you to let us know right away. We will investigate all legitimate reports and do our best to quickly fix the problem. However, some of our products are in beta, so we do expect a large volume of changes in our code and may already be aware of the issue. If you submit a report for a known issue, we will do our best to let you know quickly so you can move on.\nRules\nIn the words of Cesar Millan: \"no talk, no touch, no eye contact\". Basically, use good judgment (except as outlined below in \"Destructive/Invasive Attacks\").\n* Clearly identify your account by adding something like \"H1\", \"attacker\", \"hacker\", \"test\", etc. to your name so we don't terminate your account when we see suspicious activity.\n* Do not destroy or degrade the performance of our products and services, or violate the privacy and integrity of user accounts and data. \n* To be clear, you must never attempt to view, modify, or damage data belonging to others in production (though, we encourage these attempts in our non-production environment).\n* Do not interact with other users without their prior consent.\n* Do not attempt a denial-of-service attack on our production environment (legalrobot.com).\n* Do not perform any research or testing in violation of law.\nAs long as your research stays within the bounds of the criteria in this policy, we welcome the dialogue and promise not to take legal action.\nReport Focus \u0026amp; Tips\nWe are particularly interested in problems that allow unauthorized access to other user's documents and will award monetary bounties accordingly. However, YOU MUST ONLY ATTEMPT THIS IN OUR NON-PRODUCTION ENVIRONMENT (legalrobot-uat.com).\nOur www subdomain only hosts static, non-sensitive content like our blog and marketing pages, so many attacks against this subdomain are unlikely to result in a bounty. We suggest that you focus your efforts on our app subdomain.\nWe proudly use Stripe (https://stripe.com) as our payment processor. To simulate a payment and gain access to a paid-only section of our app, we suggest you work in our non-production environment (legalrobot-uat.com) and check out the Stripe testing documentation (https://stripe.com/docs/testing) which has test credit card numbers.\nIf you accidentally perform a live transaction, just let us know at hello@legalrobot.com and we'll make things right. Security researchers that dispute a live transaction will be immediately banned from our HackerOne program and will no longer be exempted from legal action. We may take further action outside of this policy (but always in accordance with our terms of service (https://www.legalrobot.com/terms/)).\nDestructive/Invasive Attacks\nWe provide a non-production environment (legalrobot-uat.com) that you may use for destructive and invasive attacks. All of the data in this environment is non-sensitive, so have at it... just DO NOT do anything illegal, or launch an extended denial-of-service or similar attack that could disrupt or get us blacklisted with our service providers (keep any DoS attempts short... like, under a few minutes). Because legalrobot-uat.com is not a full production environment, DMARC, SPF, and similar email issues will not be eligible. To be clear, issues that exist on the legalrobot-uat.com domain but not on legalrobot.com will not be accepted.\nIneligible Reports\nReports from automated tools or scans\nAlready public issues related to software, scripts, or protocols not under our control (e.g. meteor.js, node.js, cordova, etc)... unless we are using a version that is seriously out of date\nSecurity issues in 3rd party components (Disqus, Intercom, Stripe), unless they present a unique threat to our service. Usually, these issues should be reported to the company that makes the component. We're more than happy to hear about these issues, but they will not be eligible for a bounty (reputation only).\nUse of a known-vulnerable library without evidence of exploitability\nDisclosure of software version, server IP, or other non-sensitive information. We're happy to accept reports on this, but reports will be closed as informative without a demonstration of an exploit using the information.\nAttacks requiring physical access to a user's device or network\nAttacks that require attacker app to have the permission to overlay on top of our app (e.g., tapjacking)\nAny access to data where the targeted user needs to be operating a rooted mobile device\nVulnerabilities affecting users of outdated browsers, platforms, or crypto (i.e. TLS BEAST, POODLE, etc)\nSocial engineering of our staff or contractors, phishing, spear phishing, etc.\nAny physical attempts against our property or our host's data centers\nPresence of autocomplete attribute on web forms\nMissing public key pins\nMissing best practices (we require evidence of a security vulnerability)\nMissing cookie flags on non-sensitive cookies (we don't use cookie-based auth)\nHost header injections unless you can show how they can lead to stealing user data.\nReports of spam (i.e. any report involving ability to send emails without rate limits)\nLack of CSRF tokens (unless there is evidence of actual, sensitive user action not protected by a token)\nLogin/logout CSRF\n[Temporary] New reports of missing rate-limiting on Meteor methods. We recognize this is a problem and we're currently working our way through several hundred method calls.\n[Temporary] New reports of authorization bypass on sensitive methods. We recognize this is a problem and we're currently working our way through a couple dozen sensitive method calls.\nYou must be the first person to report the issue to us. If a duplicate reproduction is submitted while the vulnerability is still in the wild, we will only award a bounty if the duplicate submissions provide more information or show the issue to be more extensive.\nQuestions\nFor any questions or clarification on this policy, feel free to email us at hello@legalrobot.com or ask us inside the app through the Intercom chat window (bottom right corner when logged in). All security reports must be performed through HackerOne so we can track reports and compensate you.\nThanks \u0026amp; Compensation\nWe believe in recognizing the work of others. If your work helps us improve the security of our service, we'd be happy to acknowledge your contribution (/legalrobot/thanks). In addition to showing our appreciation for our security researchers, we also offer a monetary bounty for security issues, provided you follow the rules. More serious issues will be rewarded appropriately. Many researchers find similar or identical issues at the same time so unfortunately, duplicate issues will only receive our appreciation.\n",
		"handle": "legalrobot",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/601/94ce9ab8c6afa0fc4265a7cb4c8cdda5fceee215_large.png?1472852893",
		"internet_bug_bounty": false
	},
	{
		"id": 14478,
		"url": "/skyliner",
		"name": "Skyliner",
		"meta": {
			"bug_count": 11,
			"accepting_submissions": true
		},
		"about": "The launch platform for your best work.",
		"stripped_policy": "No technology is perfect, and Skyliner believes that working with skilled security researchers across the globe is crucial in identifying weaknesses in any technology. If you believe you've found a security issue in our product or service, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nExclusions\nWhile researching, we'd like to ask you to refrain from:\n* Denial of service\n* Spamming\n* Social engineering (including phishing) of Skyliner staff or contractors\n* Any physical attempts against Skyliner property or data centers\n* Testing third party systems e.g. Google Analytics, Medium, MailChimp (list-manage.com), etc.\n* Testing any domains not specifically listed in the Domains section here\n* Please don’t try signing up for our beta mailing list unless you actually want to be a beta user. :)\n* We initially had qa.skyliner.io as being in scope but have since removed it. We won’t mark reports about it as inapplicable, but please note it is no longer in scope.\n* Spamming our Slack invitation app with fake email addresses.\n* We don’t use HPKP or CSP headers. That’s an intentional choice.\nThank you for helping keep Skyliner and our users safe!\n",
		"handle": "skyliner",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/014/478/667bc96f963644d4efca990e2f1ba3fcc8a7c6ac_large.png?1470598213",
		"internet_bug_bounty": false
	},
	{
		"id": 555,
		"url": "/instacart",
		"name": "Instacart",
		"meta": {
			"bug_count": 127,
			"accepting_submissions": true
		},
		"about": "Same-day grocery delivery",
		"stripped_policy": "Instacart is committed to working with security experts across the globe to stay up to date with the latest security techniques. If you have discovered a security issue that you believe we should know about, please let us know about it and we'll make every effort to quickly correct the issue.\nEligibility and Responsible Disclosure\nWe are happy to thank everyone who submits valid reports which help us improve the security of Instacart! However, only those that meet the following eligibility requirements may receive a monetary reward:\nYou must be the first reporter of a vulnerability.\nThe vulnerability must be a qualifying vulnerability (see below) associated with a site or application in scope.\nWe can’t be legally prohibited from rewarding you (for example, you can’t be a resident of or located within Cuba, Sudan, North Korea, Iran or Syria a national of other certain countries, or on a denied parties or sanctions list).\nYou may not publicly disclose the vulnerability prior to our resolution.\nQualifying Properties\nWebsites listed at the bottom of the page\nInstacart's Android/iPhone App\nQualifying Vulnerabilities\nAny design or implementation issue that is reproducible and negatively affects the security of Instacart users is likely to be in scope for the program. Common examples include:\nCross Site Scripting (XSS)\nCross Site Request Forgery (CSRF)\nServer-Side Request Forgery\nRemote Code Execution\nSQL Injection\nUnauthorized Access to Customers Accounts\nNon-Qualifying Vulnerabilities\nDepending on their impact, not all reported issues may qualify for a monetary reward. However all reports are reviewed on a case-by-case basis and any report that results in a change being made will at a minimum receive Hall of Fame recognition.\nPlease refrain from accessing private information (so use test accounts), performing actions that may negatively affect Instacart users (spam, denial of service), or sending reports from automated tools without verifying them. We also discourage the use of vulnerability testing tools that automatically generate significant traffic.\nThe following issues are outside the scope of our vulnerability rewards program (either ineligible or false positives):\nAttacks requiring physical access to a user's device\nSubdomain takeovers without demonstration of an actual takeover (false positives will be marked as N/A)\nForms missing CSRF tokens (we require evidence of actual CSRF vulnerability)\nLogin/logout CSRF\nPassword and account recovery policies, such as reset link expiration or password complexity\nMissing security headers which do not lead directly to a vulnerability\nClickjacking on static websites\nContent spoofing / reflection/ injection (on 404 page, search result page etc)\nKnown-vulnerable library (without evidence of exploitability)\nIssues related to software or protocols not under Instacart control\nReports from automated tools or scans\nReports of spam\nSPF and DKIM issues\nLow impact open redirects\nLow impact host header issues (including X-Forwarded-Host and similar headers)\nSSL/TLS protocol vulnerabilities\nBest practice concerns will be reviewed, but in general we require evidence of a vulnerability\nBypass of URL malware detection\nVulnerabilities only affecting users of outdated or unpatched browsers and platforms\nBrute force promo code\nReflected file download\nCSV formula injection\nEmail enumeration\nTHANKS\nIf your work helps us improve the security of our services, we will issue a reward commensurate to the impact of the vulnerability, in addition to acknowledging your contribution in our Hall of Fame (https://hackerone.com/instacart/thanks).\nYou can learn more about Instacart in our FAQ (https://www.instacart.com/faq), and see the areas to which we deliver (https://www.instacart.com/locations).\n",
		"handle": "instacart",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/555/2a9ca7f0370806b503a41d41d03ad300718a9e80_large.png?1470088859",
		"internet_bug_bounty": false
	},
	{
		"id": 2379,
		"url": "/kaspersky",
		"name": "Kaspersky Lab",
		"meta": {
			"bug_count": 55,
			"accepting_submissions": true
		},
		"about": "Kaspersky Lab is the world’s largest privately held vendor of Internet security solutions for businesses and consumers.",
		"stripped_policy": "Kaspersky Lab is running its public Bug Bounty Program for six months from August 1, 2016. All researchers are welcome to participate.\nUnder the Kaspersky Lab Bug Bounty Program, qualified individuals are encouraged to submit bug reports for vulnerabilities in Kaspersky Internet Security 2017 (https://products.s.kaspersky-labs.com/english/homeuser/kis2017) or Kaspersky Endpoint Security 10 SP1MR3 (http://aes.kaspersky-labs.com/english/endpoints/kes10windows/kes10winsp1mr3enaes56.exe) or Kaspersky Password Manager 8 (https://products.s.kaspersky-labs.com/multilanguage/homeuser/kpmwin8.0/setup8.0.6.538.exe). \nPlease review and accept the terms and conditions of the Kaspersky Internet Security 2017 (https://hackerone.box.com/shared/static/lpa6rlcmja4udys12oijjjirq1sq7bab.pdf) and Kaspersky Endpoint Security 10 SP1MR3 (https://hackerone.box.com/shared/static/la5b6ier63s1prxfhybnily4742gmjwb.pdf) Testing Licenses Certificates before you test and/or report a vulnerability. \nScope of program\nKaspersky Lab would like you to test the security of Kaspersky Internet Security 2017 and Kaspersky Endpoint Security 10 SP1MR3 running on Microsoft Windows 8.1, or a more recent Microsoft desktop OS.\nVulnerability types in scope:\n-              Local privilege escalation (average reward $1,000)\n-              User data (like passwords and another sensitive information) compromise (average reward $2,000)\n-              Remote code execution (average reward $5,000)\nOut of scope:\nKaspersky Lab’s online services, websites, and other network services.\nWe are looking for security issues in the desktop products only.\nQualifying vulnerability\nRewards for qualifying bugs typically range from $300. Bounties will be paid out at Kaspersky Lab’s discretion. Kaspersky Lab retains sole discretion in determining which submissions are qualified, actionable, and eligible for reward. Severity of the issue and quality of reports will be considered in the reward amount. The maximum reward depends on vulnerability importance.\nWe are using CVSSv2 for vulnerability priorities.\nDisclosure policy\nResearchers invited to participate in the Kaspersky Lab program must adhere to the Disclosure Policy located here (https://hackerone.com/disclosure-guidelines). The program prohibits disclosure of any vulnerability discovered in Kaspersky Internet Security 2017 to any party publicly or privately until the vulnerability fix is released. Upon completion of the vulnerability fix, Kaspersky Lab may agree to disclosure after 30 days.\nEligibility\nWe are thankful to every individual researcher who submits a vulnerability report, helping us improve overall security of Kaspersky Lab’s products. However, only those that meet the following criteria may be eligible to receive a reward. Some of the requirements to participate in the Bug Bounty Program include:\n- You must be the first reporter of a vulnerability in order to be considered for an award\n- You must not be employed by Kaspersky Lab or its subsidiaries or related entities\n- You must comply with these terms when discovering the vulnerability\n- You must follow all guidelines when submitting the vulnerability report\n- We can’t be legally prohibited from rewarding you for any reason\n",
		"handle": "kaspersky",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/002/379/819fcc1c42c8eb98f18431e977c2edbfbac757ab_large.png?1434417296",
		"internet_bug_bounty": false
	},
	{
		"id": 9021,
		"url": "/powerdns",
		"name": "PowerDNS",
		"meta": {
			"bug_count": 9,
			"accepting_submissions": true
		},
		"about": "A versatile \u0026 powerful set of nameserver technologies.",
		"stripped_policy": "No technology is perfect, and PowerDNS believes that working with skilled security researchers across the globe is crucial in identifying weaknesses in any technology. If you believe you've found a security issue in our products, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nPlease note that our websites and infrastructures are in no way part of this program, and are explicitly out of scope.  \nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nBounty Program\nTo show our appreciation of responsible security researchers, PowerDNS offers a monetary bounty for reports of qualifying security vulnerabilities. Reward amounts will vary based upon the severity of the reported vulnerability, and eligibility is at our sole discretion.\nScope\nWe are interested in security issues in the following products:\n* PowerDNS Authoritative Server\n* PowerDNS Recursive Server\n* dnsdist\nWhen reporting a vulnerability in one of the aforementioned products, please check that it exists in currently supported versions. You can check our development tree at https://github.com/PowerDNS/pdns, but please do not report any potential security issue to the public bug tracker.\nRewards\nBesides our respect and attribution, PowerDNS may provide rewards to eligible reporters of \nqualifying vulnerabilities. Rewards include:\n* PowerDNS-Branded Clothing (T-Shirts, Polo Shirts, Hoodies).\n* Minimum reward of $100 USD for vulnerabilities we consider to be serious but of low-impact, up to a \nmaximum of $5000 USD for the most severe vulnerabilities.\nPowerDNS will determine at its discretion whether a reward should be granted and the \namount of the reward. In particular we may choose to pay higher rewards for severe \nvulnerabilities or lower rewards for vulnerabilities that are considered less severe. This is not a \ncontest or competition.\nExclusions\nWhile researching, we'd like to ask you to refrain from:\n* Denial of service\n* Spamming\n* Social engineering (including phishing) of PowerDNS staff or contractors\n* Any physical attempts against PowerDNS property or data centers\nThank you for helping keep PowerDNS and our users safe!\n",
		"handle": "powerdns",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/009/021/497812e177e5689317bba5bae96091e06c00671f_large.?1454539664",
		"internet_bug_bounty": false
	},
	{
		"id": 8906,
		"url": "/open-xchange",
		"name": "Open-Xchange",
		"meta": {
			"bug_count": 141,
			"accepting_submissions": true
		},
		"about": "Creator of communication, collaboration and office productivity software for service providers",
		"stripped_policy": "Introduction to OX App Suite \u0026amp; Program Rules\nOX App Suite is a cloud based communication, collaboration and office productivity suite which allows individuals and organisations to perform digital day-to-day work through a unified service. Our mission is to provide best in class privacy for users and operational security for providers. We believe in open standards, data ownership and self-determination of users.\nSince our APIs and source code are both publicly documented and exposed we rely on strong authentication, crypto implementations and do not support the concept of security by obscurity. At the same time we're delivering the software in a way that it comes with secure defaults. For this program we offer both access to a hosted sandbox and invite you to install OX App Suite on your premises for research, contribution and usage.\nNo technology is perfect, and Open-Xchange believes that working with skilled security researchers across the globe is crucial in identifying weaknesses and build trust in technology. If you believe you've found a security issue in our product or service, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nScope\nOur corporate website and related services are not in scope for this program, please report them to the contact provided at our website instead. This program focuses on the software we make.\nSince we're open-source, you can use a locally installed instance of OX App Suite and have a look at its source-code. Especially when using local installations, we expect that you're using up to date versions on supported operating systems, hardened configurations of those services as well as a set of strong credentials.\nWe're offering a sandbox for you to execute research using shared accounts. Please note that other researchers may access and use your data on a shared account. Contact us if you need a dedicated user account, those are assigned to researchers which have a track record of valid reports. \nSandbox installation\nhttps://sandbox.open-xchange.com/ (User: user{1..5}@sandbox-ox.tld_{1..4}, Pass: secret)\n{1..5} means all numbers from 1 to 5, for example, user2@sandbox-ox.tld_3\nService infrastructure\nOX App Suite\nOX Documents\nOX Guard\nApp Stores\nOX Drive for iOS and Android\nOX Mail App for iOS and Android\nPackages \u0026amp; Source Code\nLearn more and find installation guides at https://oxpedia.org/ and https://documentation.open-xchange.com/\nSource code can be cloned from https://code.open-xchange.com. The \"master\" branches for frontend, backend, calcengine, guard and office repos represent whats available as packages and as a sandbox\nAny other environments of OX App Suite providers or Open-Xchange itself are strictly out of scope and attack attempts will lead to permanent exclusion from this program. Please note that the provided research environment will be automatically reset. If your research is impeded by this reset, please let us know in advance.\nThis Program solely targets software vulnerabilities within OX App Suite, the sandbox, and the client software provided by Open-Xchange as listed. The report must be reproducible on currently supported versions and operating systems. Vulnerabilities need to be of practical relevancy and documented in a way that they can be reproduced. Send screen-shots, code, video; whatever helps to understand the flaw.\nNon-Qualifying Vulnerabilities\nIssues located within third party components for example MySQL, Apache or Java or Libraries\nSocial Engineering of Open-Xchange employees and contractors\nPhysical attacks against infrastructure, employees and offices of Open-Xchange\nUpload, sending or inject malware to Open-Xchange and contractors\nResearch that results in spam, harassment or any kind of unauthorized communication\nUsing data acquired by compromising customer or employee accounts\nDenial of service attacks that use high bandwidth or excessive requests\nVulnerabilities which have been made possible by purposely weakening the default configuration while using authorized privileged access\nVulnerabilities which are purely hypothetical or already publicly known or variations of such, including vulnerabilities that are made possible by exploiting another reported vulnerability.\nVulnerabilities which have already been reported to us (including reports received outside of Hackerone, for example from customers or pentests). Those are considered as \"Duplicate\" in case they describe a similar attack type, regardless of which component is affected.\nVulnerabilities that are present at multiple endpoints but the fix is being made at a central component that affects all endpoints. We reward based on vulnerability, not per endpoint.\nEligibility and Disclosure\nYou must agree and comply to the Program rules\nYou must be the first person to responsibly disclose an unknown issue\nYou must not publicly disclose the vulnerability prior to our public disclosure\nOur security team will review each committed finding and establish communication as soon as possible to reproduce and solve the reported vulnerability. Please allow 3 working days for our initial response. We ask you to make a good faith effort to avoid privacy violations, destruction of data and interruption or degradation of our service during your research.\nRewards\nBesides our respect and attribution of your work, Open-Xchange may provide rewards to eligible reporters of qualifying vulnerabilities. Rewards include:\n* Open-Xchange-branded Swag: T-Shirts, Polo Shirts, Hoodies\n* Minimum reward of $100 for vulnerabilities we consider to be serious, up to a maximum of $5000 for the most severe vulnerabilities\nDue to logistical issues and subsequent overhead and disappointment on both sides, we're not sending Swag packages to locations with notorious weak infrastructure. In this case we're awarding a amount below the minimum reward to compensate.\nWe will respond to your reports as soon as possible, bounty however will be assigned once a week after reviewing and rating the reports in terms of impact and risk.\nOpen-Xchange will determine in its discretion whether a reward should be granted and the amount of the reward. In particular we may choose to pay higher rewards for severe vulnerabilities or lower rewards for vulnerabilities that are considered less severe. When doing our estimation we're using CVSS and map the score against our payout-grades. This means certain aspects are of importance when considering the reward for a specific issue, for example:\n* Does it affect all users or would a practical attack require significant effort to compromise a wider range of users?\n* What level of authentication at the attacker and victim side is required to make the attack work?\n* Are social-engineering vectors (e.g. phishing) required to execute the vulnerability?\n* Is the attack vector remotely exploitable and are multiple steps required to execute it?\n* Does the attack require interaction of the victim to be effective?\n* Does the attack rely on weaknesses in third party components on the victims side?\nBased on this evaluation of impact and severity it could be that issues which is similar on a technical side gets different ratings and subsequently payout. We're not having a fixed amount of reward for a specific kind of issue. Note that the scale between minimum and maximum payout is not linear. We reserve the right to change these program rules at any time without prior announcement.\nThank you for helping keep Open-Xchange and its users safe! And by the way, we're hiring...\n",
		"handle": "open-xchange",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/008/906/c8dee3da19cbba57d70ebc406d78664326e68b30_large.?1454083837",
		"internet_bug_bounty": false
	},
	{
		"id": 237,
		"url": "/harvest",
		"name": "Harvest",
		"meta": {
			"bug_count": 151,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Harvest is a leader in online time tracking and invoicing. Work better, and make smarter decisions for your business.",
		"stripped_policy": "At Harvest security is very important, our customers trust us with their data and we take this trust extremely seriously. With this security bounty system we aim to reward the work of security researchers who find issues with Harvest’s suite of applications. Our team is committed to addressing all security issues in a responsible and timely manner.\nRules for reporting\nIf you find a security issue let us know and we will make every effort to resolve the issue as soon as possible. Please do not publicly disclose any details until Harvest has confirmed the bug has been fixed. If you provide us a reasonable amount of time to resolve it, we promise to get back to you quickly at each step of the resolution process.\nAll bug reports should include\nA detailed step-by-step explanation of how to replicate the issue.\nAttack Scenario to demonstrate the risk.\nRules for testing security issues on Harvest\nUse test accounts.  Please add +hackerone to your email address before the @, e.g. researcher+hackerone@example.com\nAvoid security scanners or tools which may cause DoS, DDoS or scraping-like behaviour.\nDo not use automatic tools against contact or support forms\nDo not comment on the blog while testing\nNEVER try to gain access to real user's account or data.\nYou must not leak, manipulate, or destroy any user data.\nDo not impact users with your testing\nDo not perform denial of service attacks, mail bombing, spam, scraping, brute force, or automated attacks with programs like Burp Intruder.\nDo not attempt non-technical attacks such as social engineering, phishing, or physical attacks against our employees, users, or infrastructure.\nAny vulnerability found must be reported no later than 48 hours after discovery.\nIf you have any doubt please write us: security@getharvest.com\nWhat we are looking for\nIn general any vulnerability which could negatively affect the security of our users like:\nCross-site Scripting (XSS)\nCross-site Request Forgery\nServer-Side Request Forgery (SSRF)\nSQL Injection\nServer-side Remote Code Execution (RCE)\nXML External Entity Attacks (XXE)\nAccess Control Issues (Insecure Direct Object Reference issues, etc)\nExposed Administrative Panels that don't require login credentials\nDirectory Traversal Issues\nLocal File Disclosure (LFD)\nAnything not listed but important.\nConcatenating bugs to increase the attack scenario is encouraged. We do not allow by any means escalations such as port scanning internal networks or privilege escalation attempts. Never download or access private data.\nWhat we are NOT looking for\nBest practices concerns (we require evidence of a security vulnerability)\nSessions not being invalidated when a best practice says so\nCSV/Excel command injection issues\nVulnerabilities only affecting users of outdated or unpatched browsers and platforms\nRace conditions that don't compromise the security of Harvest or our customers\nReports about theoretical damage without a real risk\nThe output of automated scanners without explanation\nwindow.opener Related Issues\nCSRF with no security implications (like Login/logout/unauthenticated CSRF)\nMissing cookie flags on non-security sensitive cookies\nAttacks requiring physical access to a user's device\nMissing security headers not related to a security vulnerability\nReports of insecure SSL/TLS ciphers unless you have a working proof of concept\nBanner grabbing issues to figure out the stack we use or software version disclosure\nOpen ports without a vulnerability\nPassword and account recovery policies, such as reset link expiration or password complexity\nInvalid or missing SPF (Sender Policy Framework) records\nDisclosure of known public files or directories, (e.g. robots.txt)\nReports of spam\nUser enumeration\nDNS misconfiguration\nPresence of autocomplete attribute on web forms\nDNSSEC settings\nHSTS or CSP headers\nHost header injection unless you can show how a third-party can exploit it.\nVulnerabilities that require a rooted, jailbroken or software emulated device\nIf you really feel that something listed above will have a great impact on our security, and you have a working proof of concept, please feel free to report it explaining the attack scenario that we are missing, otherwise it will be classified as Not Applicable.\nScope\nApps\nAndroid: https://play.google.com/store/apps/details?id=com.harvestapp\niOS: https://itunes.apple.com/us/app/harvest-time-expense-tracker/id355395846\nMac: https://www.getharvest.com/mac\nWeb\nharvestapp.com\nforecastapp.com\nid.getharvest.com\ngetharvest.com\nWhat is explicitly out of scope\nAny submitted reports related to these applications will be closed as N/A:\nharveststatus.com\nhelp.getharvest.com\ngetharvest.com/contact\nsupport.forecastapp.com\nTo qualify for a bounty\nYou must be the first reporter \nIt must not be a duplicate or known issue\nYour report must be within scope \nYou should not disclose the issue before its resolution \nYou should not access another user’s data without permission\nThe report should describe an attack scenario and a real risk for the user.\nIf you have any doubt please write us: security@getharvest.com\nWhat is ineligible for a bounty, but appreciated\nRecently disclosed 0 day vulnerabilities\nUse of a known-vulnerable library\nReflected XSS\nOpen redirects\nSelf-XSS (making users attack themselves generally is not a security issue)\nSignificant Content Spoofing - Text Injection attacks\nAny low severity issue (not listed on \"What we are not looking for\" section)\nThank you for helping keep Harvest and our users safe.\nHappy bug hunting!\n",
		"handle": "harvest",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/237/542cd17b1f916d51fe5cd0cc6cf5ccb89652345e_large.png?1403079688",
		"internet_bug_bounty": false
	},
	{
		"id": 13559,
		"url": "/gocd",
		"name": "GoCD",
		"meta": {
			"bug_count": 31,
			"accepting_submissions": true
		},
		"about": "Open source continuous delivery server specializing in advanced workflow modeling and visualization",
		"stripped_policy": "No technology is perfect, and GoCD believes that working with skilled security researchers across the globe is crucial in identifying weaknesses in any technology. If you believe you've found a security issue in our product or service, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nIn scope\nYour own GoCD installation (https://www.gocd.io/download)\nSQL injection\nRemote code execution\nCross-site scripting\nCross-site request forgery\nDirectory Traversal\nInformation Disclosure\nPrivilege escalation\nOther things that would obviously leave user data vulnerable\nOut of scope\nPublic websites (https://*.gocd.io)\nSubmitting test data to our public websites (https://*.gocd.io/*)\nGoCD instances of third parties\nDenial of service\nSpamming\nSocial engineering (including phishing) of GoCD staff or contractors\nAny physical attempts against GoCD property or data centers\nNOTE: PLEASE do not report clickjacking on www.gocd.io. It's hosted by GitHub Pages and we have no control over it, to change X-FRAME-OPTIONS.\nThank you for helping keep GoCD and our users safe!\nNOTE\nWe have experimental/nightly releases on our website at\nhttps://www.gocd.io/download/?experimental=true\nWe recommend using these while testing to avoid reporting duplicates.\n",
		"handle": "gocd",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/013/559/727d33fabdf02590aede6b1175e95a5346d8fb16_large.?1465311808",
		"internet_bug_bounty": false
	},
	{
		"id": 8146,
		"url": "/olx",
		"name": "OLX",
		"meta": {
			"bug_count": 146,
			"accepting_submissions": true
		},
		"about": "OLX is an online classifieds platform that enables its users to create ads and display them on social networks.",
		"stripped_policy": "At OLX, we take security issues seriously. If you believe you've detected a vulnerability within our products we'd like to hear about it. We'll investigate all reports and do our best to fix these issues as soon as possible.\nScope\nThe scope of our program includes the following sites:\nPoland: olx.pl\nPortugal: olx.pt\nUnited Arab Emirates: dubizzle.com\nIndia: olx.in\nOther OLX products from different countries are not included in scope. Apps related to these sites are now included in the scope. Vulnerabilities need to be documented in a way that they can be reproduced. Send screen-shots, code, video to helps to understand it.\nWhat about public disclosure?\nWe're more than happy to publicly disclose your bug once it has been fixed by our developers.\nExceptions \u0026amp; Rules\nAny activity that would disrupt, damage or adversely affect any third-party data or account is not allowed. Please do not mass create accounts to perform testing. Also do not perform brute force testing to determine whether rate limiting is in place for particular APIs or pieces of functionality.\nThe following are strictly prohibited:\nDenial of Service attacks.\nPhysical attacks against offices and data centers.\nSocial engineering of our service desk, employees or contractors.\nCompromise of a OLX users or employees account.\nAutomated tools or scans, botnet, compromised site, end-clients or any other means of large automated exploitation or use of a tool that generates a significant volume of traffic.\nOut of Scope/Non-qualifying vulnerabilities\nOutdated WordPress Plugins \nCross site request forgery (CSRF)\nCross domain leakage\nInformation disclosure\nSoftware version disclosure\nVulnerabilities which are already publicly known or variations of such\nHttpOnly and Secure cookie flags\nSSL/TLS scan reports (this means output from sites such as SSL Labs)\nPassword and account recovery policies\nSession timeout\nSession Hijacking (cookie reuse)\nMissing X-Frame or X-Content headers\nAccount enumeration\nClick-jacking\nRate-limiting\nXSS attacks via POST or headers\nSelf-exploitation (i.e. password reset links or cookie reuse)\nUse of a known-vulnerable library (without proof of exploitability)\nVulnerabilities as reported by automated tools without additional analysis as to how they're an issue\nDirectory listing\nOpen redirects \nContent Spoofing\nUnrestricted file upload\nRewards\nAt this time, we are not awarding bounties or cash rewards for reported vulnerabilities. As our vulnerability disclosure program matures, we'll start including monetary bounties for valid security reports. \nAt OLX, we take security issues seriously. If you believe you've detected a vulnerability within our products we'd like to hear about it. We'll investigate all reports and do our best to fix these issues as soon as possible.\n",
		"handle": "olx",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/008/146/aee37a6f3db7b0dcceec1295940bff91837299e6_large.jpg?1464879711",
		"internet_bug_bounty": false
	},
	{
		"id": 12707,
		"url": "/fantasytote",
		"name": "FantasyTote",
		"meta": {
			"bug_count": 29,
			"accepting_submissions": true
		},
		"about": "",
		"stripped_policy": "Not taking new reports at this time.\nNo technology is perfect, and FantasyTote believes that working with skilled security researchers across the globe is crucial in identifying weaknesses in any technology. If you believe you've found a security issue in our product or service, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nThe logged in pages are currently under Http Basic Auth. hackerone is the username and password.\nIn order to test FantasyTote, your IP address must be coming from Austria Belgium Bulgaria Croatia Republic of Cyprus Czech Republic Denmark Estonia Finland France Germany Greece Hungary Ireland Italy Latvia Lithuania Luxembourg Malta Netherlands Poland Portugal Romania Slovakia Slovenia Spain Sweden, United Kingdom ,Iceland Liechtenstein Norway . I cannot lift this restriction. \nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nExclusions\nWhile researching, we'd like to ask you to refrain from:\n* Denial of service\n* Spamming\n* email/username enumeration\n* CSRF\n* HTTP Host header attacks \n* Brute forcing logins. An email gets send to account holder when this happens\n* When password/email changed, there is no email send. This has been mentioned in many cards. Alos that zz+s@gmail.com is the same as zz@gmail.com and all the issues around that. Fix coming.\n* Social engineering (including phishing) of FantasyTote staff or contractors\n* Any physical attempts against FantasyTote property or data centers\n* SPF record issues\nThank you for helping keep FantasyTote and our users safe!\n",
		"handle": "fantasytote",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/012/707/0cfb42ab4a5dad40c6ac65cb7e4cf785198d6a93_large.jpg?1463088643",
		"internet_bug_bounty": false
	},
	{
		"id": 7724,
		"url": "/ruby",
		"name": "Ruby",
		"meta": {
			"bug_count": 10,
			"accepting_submissions": true,
			"minimum_bounty": 500,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "A Programmer's Best Friend",
		"stripped_policy": "This issue tracker is for security issues in the Ruby programming language, neither websites (including www.ruby-lang.org) nor third party applications. Please submit issues that are regarding the Ruby programming language.\nRuby is used to power some of the most important sites on the web and its increasing popularity has made it a critical piece of internet infrastructure. If you've found a security bug that could potentially impact the security of these sites, you have our thanks and might be eligible for a cash reward.\nInternet Bug Bounty Qualification\nOnly critical vulnerabilities that demonstrate complete compromise of the system's integrity or confidentiality are eligible for a bounty - typically Arbitrary Code Execution or equivalent impact. While we encourage you to submit all potential issues, lower severity issues are not in scope at this time.\n| Impact | Amount |\n| --- | --- |\n| High Demonstrate that remote exploitation of this bug can be easily, actively, and reliably achieved. | $1,500+ |\n| Medium Demonstrate that remote exploitation of this bug is very likely (e.g. good control a register). | $1,000 |\n| Minimum Demonstrate the presence of a security bug with probable remote exploitation potential. | $500 |\nThe project maintainers have final decision on which issues constitute security vulnerabilities. The Internet Bug Bounty Panel (https://internetbugbounty.org/#the-panel) will respect their decision, and we ask that you do as well. It's important to keep in mind that not all submissions will qualify for a bounty, and that the decision to award a bounty is entirely at the discretion of the Panel.\n",
		"handle": "ruby",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/007/724/4bfe4b81eacd0b8498bfbc72d7bf823d2cdba3fd_large.png?1449271894",
		"internet_bug_bounty": true
	},
	{
		"id": 13291,
		"url": "/nextcloud",
		"name": "Nextcloud",
		"meta": {
			"bug_count": 60,
			"accepting_submissions": true
		},
		"about": "Access, share and protect your files, calendars, contacts, communication \u0026 more at home and in your enterprise.",
		"stripped_policy": "As an open-source project we know and believe in the well-known Linus' law:\nGiven enough eyeballs, all bugs are shallow\nWe're inviting researchers all over the globe to take a look at Nextcloud and bring it's security to the next level. If you're interested to learn how we handle security you can read more about it on our dedicated security page (https://nextcloud.com/security/).\nProgram policy\nWe know how valuable your time is and employ a \"No bullshit policy\" that boils down to: Don't be a jerk. Instead of bothering you with a huge list of exclusions we're going to tell you what we're especially looking after: \nBugs in the latest published Nextcloud server software (Download (https://nextcloud.com/install/#instructions-server) / Source Code (https://github.com/nextcloud/server/tree/stable11?files=1)) (note that \"apps\" you enable from the appstore are not necessarily bundled. Only the one from the \"Not enabled\" category)\nBugs in the Nextcloud Android client (Download (https://play.google.com/store/apps/details?id=com.nextcloud.client) / Source Code (https://github.com/nextcloud/android)) (we do exclude bugs that do require the existence of another malicious app on the system)\nA bug is for us something that actively allows an attacker to escalate their privileges. Something like \"Attacker can delete arbitrary files of other users\" is fine, \"Missing X-Frame-Options on the download servers\" not so much. At the moment we are also considering Denial of Service not a reward worthy vulnerability. (we will acknowledge you though!)\nOh, and to make us even happier please go the extra mile to download the software locally. Running tests against our demo infrastructure is something that decreases the experience for other users massively. Whatever you decide to do, do not run any tests against production instances of other people.\nFound a security bug in one of above mentioned components? Awesome! Just report it here and we will get back to you. These components are also for what monetary rewards are awarded. Bonus points if you check back with our threat model (https://nextcloud.com/security/threat-model) before.\nFound a bug in one of our web sites or so? While we can't offer you any monetary reward we will acknowledge the issue and happily accept reports for it via this platform as well. But please do not run any Denial of Service attacks against our infrastructure or extract user data. Please do also refrain from using automated testing tools against our infrastructure or disclosing bugs to other parties before we have published a patch.\nWe believe in transparency about our security, so any valid vulnerabilities discovered are always publicly disclosed once confirmed and resolved.\nRewards\nOur rewards are based on severity and range up to $5,000. To give you some guidance we have compiled below list:\n| Impact | Definition | Highest possible reward |\n|----------|--------------------------------------------------------------------------------------------------------------------------|-------------|\n| Critical | Gaining remote code execution on the server as non-admin user. (i.e. RCE) | $5,000 |\n| High | Gaining access to complete user data of any other user. (i.e. Auth Bypass) | $2,000 |\n| Medium | Limited disclosure of user data or attacks granting access to a single users' user session. (i.e. XSS) | $750 |\n| Low | Very limited disclosure of user data or attacks involving a very high unlikely amount of user interaction. | $250 |\nNote that we only are able to offer monetary rewards for issues within the software mentioned in our program policy.\n",
		"handle": "nextcloud",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/013/291/2171e035d0d8f72331e2ada0722c07cd39d6712c_large.png?1467374034",
		"internet_bug_bounty": false
	},
	{
		"id": 13417,
		"url": "/secnews",
		"name": "SecNews",
		"meta": {
			"bug_count": 10,
			"accepting_submissions": true,
			"minimum_bounty": 50,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "SecNews is a greek website, which informs the visitors about the latest news in Hacking  \u0026 IT Security industry.",
		"stripped_policy": "Intro\nTransparency, information and collaboration are values that we care here in SecNews.\nNo technology is perfect, and SecNews believes that working with skilled security researchers not only in Greece but across the globe is crucial in identifying weaknesses in any technology.\nWe are always interested in how we can make our website and our infrastructure more secure.\nAnyone knows how the power of the security researcher community can help an entity to achieve results more quickly and more effectively than can achieve on their own resources.\nFor all the above reasons, we are announcing SecNews vulnerability disclosure and bug bounty program in cooperation with HackerOne bug reporting platform. \n If you believe you've found a security issue or vulnerability that can impact SecNews website, infrastructure or our users and visitors, we encourage you to notify us the soonest possible. We will investigate all legitimate reports and do our best to fix any security vulnerability. \nWe are more than happy to work with all of you to resolve the issue and from our side we ask to be aligned with SecNews Disclosure Policy and Guidelines .\nScope\nAny web properties owned by SecNews are in scope for the program. Including:\n*.secnews.gr\nSecNews visitors or authors are out of scope for our Vulnerability Disclosure program.\nEligibility\nIn order for your submission to be eligible:\n- You must agree to our Disclosure Policy.\n- You must be the first person to responsibly disclose an unknown issue. \nAll legitimate reports will be reviewed and assessed by SecNews's security team to determine if it is eligible. \nWe cannot accept submissions from children under the age of 13. Reporters under the age of 13 will not be eligible to receive SecNews rewards. We will find another way to recognize your effort.\nRewards\nFor each eligible vulnerability report, the reporter will receive one, part or maybe all of the below items \u0026amp; services according to the final reward panel decision:\nRecognition on our webpage secnews.gr, in the top slider for more than 6 weeks . Promotion of the reporter to the social media and through our mailing list.\nArticle about the reporter or a full interview (only if the reporter wants publicity)\nA limited edition of an EXCLUSIVE SecNews t-shirt. \n-6/12 months provision licenses of top level software \u0026amp; services related to information security, protection or penetration testing.\nIf the vulnerability reported is severe and of high importance a reward amount in range from 50€ - 3000€ is also provided.\nThe amounts listed are for good quality reports that don't require complex or unlikely user interaction\nLess convincing or more constrained bug submissions will likely qualify for reduced reward amounts, as chosen at the discretion of the reward panel.\nOn top of these rewards, we offer either a range of  50€ - 500€ if a well-written patch is provided with the report. The amount for this reward is determined by the panel based on the quality and the effort required to write a good patch for the bug.\nMonetary compensation is offered under the program under specific circumstances and according to the rules above.\nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our website. Only interact with accounts you own or with explicit permission of the account holder.\nExclusions\nThe following conditions are out of scope for the vulnerability disclosure program. Any of the activities below will result in disqualification from the program permanently.\nPhysical attempts against SecNews employees, offices and data centers.\nDenial of service\nSpamming. Pursuing vulnerabilities which send unsolicited bulk messages (spam) or unauthorized messages is not allowed.\nSocial engineering (including phishing) of SecNews employees, contractors, vendors, or service providers.\nKnowingly posting, transmitting, uploading, linking to, or sending any malware.\nAdditionally, the following will not be considered significant \u0026amp; severe vulnerabilities for bounty (Out of Scope):\nCross site request forgery (CSRF)\nCross domain leakage\nInformation disclosure\nSoftware version disclosure\nXSS attacks via POST or headers\nXSS attacks in General\nMissing SPF or DMARC records\nHttpOnly and Secure cookie flags\nSSL/TLS related (such as HSTS)\nPassword and account recovery policies\nSession timeout\nSession Hijacking (cookie reuse)\nMissing X-Frame or X-Content headers\nAccount enumeration\nClick-jacking\nRate-limiting\nTabnabbing\nAccess to admin pages (wp-admin)\nReflected XSS\nText injection (in error pages or elsewhere)\nAccess to robots.txt\nLegal Notes: Payments are made through HackerOne only. You are responsible for paying any taxes associated with rewards. We reserve the right to modify the terms of this program or terminate this program at any time. By participating in this program, you agree to be bound by these rules. You must comply with all applicable laws in connection with your participation in this program.\nThank you for helping keep SecNews and our daily visitors safe! \n",
		"handle": "secnews",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/013/417/6bc7b0481965c9135fcb99229af9a3344a3e58e0_large.?1464823532",
		"internet_bug_bounty": false
	},
	{
		"id": 11973,
		"url": "/websummit",
		"name": "WebSummit",
		"meta": {
			"bug_count": 27,
			"accepting_submissions": true,
			"minimum_bounty": 10,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Videos of Web Summit Talks",
		"stripped_policy": "not taking new reports at the moment.\nNo technology is perfect, and WebSummit believes that working with skilled security researchers across the globe is crucial in identifying weaknesses in any technology. If you believe you've found a security issue in our product or service, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nRules for participation\nDo not disclose issues publicly before they are resolved.\nOnly original reports will be rewarded.\nWe will reward security issues only; bugs without security implications should not be reported.\nFailure to follow these rules will disqualify you from participating in this program.\nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nOut-of-scope Vulnerabilities\nOpen redirects. 99% of open redirects have low security impact. For the rare cases where the impact is higher, e.g., stealing oauth tokens etc, we do still want to hear about them.\nReports that state that software is out of date/vulnerable without a proof of concept.\nHost header issues without an accompanying proof-of-concept demonstrating vulnerability.\nXSS issues that affect only outdated browsers.\nHighly speculative reports about theoretical damage. Be concrete.\nSelf-XSS that can not be used to exploit other users (this includes having a user paste JavaScript into the browser console).\nVulnerabilities as reported by automated tools without additional analysis as to how they're an issue.\nReports from automated web vulnerability scanners (Acunetix, Vega, etc.) that have not been validated.\nDenial of Service Attacks.\nReflected File Download (RFD).\nwindow.opener-related issues.\nMissing autocomplete attributes.\nMissing cookie flags on non-security-sensitive cookies.\nIssues that require physical access to a victim’s computer.\nBanner grabbing issues (figuring out what web server we use, etc.).\nOpen ports without an accompanying proof-of-concept demonstrating vulnerability.\nExclusions\nWhile researching, we'd like to ask you to refrain from:\n* Denial of service\n* Spamming\n* Social engineering (including phishing) of WebSummit staff or contractors\n* Any physical attempts against WebSummit property or data centers\n* Scope is limited to just videos.websummit.net. All other properties on the websummit.net domain are out of scope.\n* As our content is embedded on other sites, we do not have an x-frame options header, which is fine for the moment, so don't report clickjacking issues.\n* Don't test the messaging system(contact us). That is provided by a third party(intercom.io) and is completely self-contained.\nNon-qualifying vulnerabilities\nUser enumeration (we have deemed this acceptable risk)\nReports from automated tools or scans\nMissing http security headers (unless you deliver a proof of concept that leverages their absence)\nReports of insecure SSL/TLS ciphers (unless you have a working proof of concept -- and not just a report from a scanner)\nMissing http security headers (unless you deliver a proof of concept that leverages their absence)\nReports of insecure SSL/TLS ciphers (unless you have a working proof of concept -- and not just a report from a scanner)\nDNS misconfiguration (Subdomain Takeover) \nDMARC/SPF issues\nThank you for helping keep WebSummit and our users safe!\n",
		"handle": "websummit",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/011/973/02af17d775ce9c9e0752b93205f3d907ca1c1adb_large.png?1461327743",
		"internet_bug_bounty": false
	},
	{
		"id": 7068,
		"url": "/bime",
		"name": "Bime",
		"meta": {
			"bug_count": 36,
			"accepting_submissions": true,
			"minimum_bounty": 50,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "BIME allows customers to import data, create various queries, and view customizable dashboards - all within BIME's beautifully intuitive interface.",
		"stripped_policy": "BUG BOUNTY POLICY\nCapitalized terms used in this Bug Bounty Policy and not otherwise defined have the meaning ascribed to such terms in our Terms of Service (https://www.bimeanalytics.com/terms-of-use.html).\nBime aims to keep its Service safe for everyone, and data security is of utmost priority. If you are a security researcher and have discovered a security vulnerability in the Service, we appreciate your help in disclosing it to us privately and giving us an opportunity to fix it before publishing technical details.\nBime will engage with security researchers when vulnerabilities are reported to us as described here. We will validate, respond, and fix vulnerabilities in support of our commitment to security and privacy. We won’t take legal action against, suspend, or terminate access to the Service of those who discover and report security vulnerabilities responsibly. Bime reserves all of its legal rights in the event of any noncompliance.\nReporting\nShare the details of any suspected vulnerabilities with the Zendesk Security Team by filing a report (https://hackerone.com/bime/reports/new). Please do not publicly disclose these details outside of this process without explicit permission. In reporting any suspected vulnerabilities, please include the following information:\nVulnerable URL - the endpoint where the vulnerability occurs;\nVulnerable Parameter - if applicable, the parameter where the vulnerability occurs;\nVulnerability Type - the type of the vulnerability;\nSteps to Reproduce - step-by-step information on how to reproduce the issue\nScreenshots or Video - a demonstration of the attack; and\nAttack Scenario - an example attack scenario may help demonstrate the risk and get your issue resolved faster.\nReports that carry an acceptable risk but demonstrate a valid security-related behavior will be closed as informative. Submissions that don’t present a security risk, are false positives, or are out of scope will be closed as N/A. (Please note that the scope is outlined below.) \nIdentical reports will be marked as “Duplicate[s]” of the original submission; the original report can be marked as (but not limited) to “Triaged”, “N/A”, or “Informative.”\nMore information on a proper submission (https://support.hackerone.com/hc/en-us/articles/205072249-What-does-a-good-report-look-like-), report states (https://support.hackerone.com/hc/en-us/articles/205624695), and acceptable reporting behavior (https://support.hackerone.com/hc/en-us/articles/208475476-What-are-examples-of-bad-behavior-), can be found on linked Hackerone’s articles.\nTesting Exclusion\nIn no event are you permitted to access, download or modify data residing in any other Account, or one that is not registered to you.\nYou are also prohibited from:\nExecuting or attempting to execute any Denial of Service attack.\nKnowingly posting, transmitting, uploading, linking to, sending or storing any Malicious Software.\nAttempting to social engineer support staff.\nTesting in a manner that would result in the sending of unsolicited or unauthorized junk mail, spam, pyramid schemes or other forms of duplicative or unsolicited messages.\nTesting in a manner that would degrade the operation of the Service.\nTesting or otherwise accessing or using the Service from any jurisdiction that is a Prohibited Jurisdiction.\nTesting third party applications or websites or services that integrate with or link to the Service.\nBounty Ineligible Issues\nThe following items are known issues or accepted risks where we will not reward you:\nBrute-force, / Rate-limiting, / Velocity throttling, and other denial of service based issues.\nClickjacking.\nContent spoofing issues without branding CSS.\nCookie flags.\nIssue where the fix only requires a text change.\nLogin/Logout CSRF\nMalicious attachments on file uploads or attachments.\nMissing additional security controls, such as HSTS or CSP headers\nMobile issues that require a Rooted or Jailbroken device.\nPassword recovery policies, such as reset link expiration or password complexity\nReflected File Download (this may be rewarded in the future, but is currently out of scope)\nSPF, DKIM, DMARC issues.\nXSS (or a behavior) where you can only attack yourself\nXSS on pages where admins are intentionally given full HTML editing capabilities, such as custom theme editing\nBounties\nWe are pleased to offer a bounty for vulnerability information that helps us protect our customers as a thanks to the security researchers who choose to participate in our bug bounty program. Bime will decide the bounty amounts at our sole discretion, and all decisions are final.\nWe will only reward the first reporter of a valid vulnerability. Any duplicate reports will not be rewarded. \nYou are responsible for paying any taxes associated with the reward. Submissions from countries where we are prohibited by law from making payments, such as the US Sanction Lists (http://www.treasury.gov/resource-center/sanctions/Programs/Pages/Programs.aspx), are ineligible for rewards.\nAny submissions received prior to the launch of this bug bounty (April 27th, 2015) are also ineligible for rewards.\nOur Commitment\nIf you identify a verified security vulnerability in compliance with this Bug Bounty Policy, Bime commits to:\nAcknowledge receipt of your vulnerability report in a timely manner;\nNotify you when the vulnerability is fixed; and\nPublicly thank you for your responsible disclosure and helping us keep our customers safe.\nScope\nYou may test only against a Bime Account for which you are the Account Owner or an Agent authorized by the Account Owner to conduct such testing. For example:\nh1[your-bime-subdomain].bime.io\nAdditionally, the following Bime applications are in-scope:\nfast.bime.io\n*.bimeanalytics.com (https://www.bimeanalytics.com/)\nBime mobile applications on Android (https://play.google.com/store/apps/details?id=com.bimeanalytics.bimemobile) or iOS (https://itunes.apple.com/us/app/bime-mobile/id470488642)\nWe will reward you for the following types of vulnerabilities (except where noted otherwise in our Testing Exclusions and bounty ineligible section):\nRemote Command Execution (RCE)\nSQL Injection\nBroken Authentication\nBroken Session Management\nAccess Control Bypass\nCross-Site Scripting (XSS)\nCross-Site Request Forgery (CSRF)\nOpen URL Redirection\nDirectory Traversal\n",
		"handle": "bime",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/007/068/fb2b9f3ac157fc796131302cf9db120d4e34fdf9_large.png?1444957947",
		"internet_bug_bounty": false
	},
	{
		"id": 952,
		"url": "/pornhub",
		"name": "Pornhub",
		"meta": {
			"bug_count": 184,
			"accepting_submissions": true,
			"minimum_bounty": 50,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "The premiere destination for adult entertainment",
		"stripped_policy": "Security is a top priority at Pornhub. We love to work with skilled security researchers to improve the security of our service. If you believe you've found a security bug in the services listed in our scope, we will be happy to work with you to resolve the issue promptly and ensure you are fairly rewarded for your discovery.\nScope\nAt this time, the scope of this program is limited to security vulnerabilities found on the Pornhub and Pornhub Premium websites. Vulnerabilities reported on other properties or applications are currently not eligible for monetary reward. High impact vulnerabilities outside of this scope might be considered on a case by case basis.\nIn-Scope Sub-Domains:\nhttp://www.pornhub.com/\nhttp://mobile.pornhub.com/\nhttp://api.pornhub.com/\nhttp://ht.pornhub.com/\nhttp://www.pornhubpremium.com/\nThe official Pornhub mobile application for iOS and Android is also in-scope for this program.\nOut-of-Scope Sub-Domains:\nhttp://*.pornhub.com/\nhttp://*.pornhub.com/live/\nhttp://*.pornhubpremium.com/\nhttp://*.pronstore.com/\nFor account access issues or visual layout and website functionality bugs, please work with our Customer Support (http://www.pornhub.com/support) which will resolve those issues independently. \nNote: Contacting our support team about the status of a HackerOne report will result in an immediate disqualification for a bounty. All communications will must conducted through the HackerOne system only.\nEligibility\nYou will qualify for a reward only if you are the first person to responsibly disclose an unknown issue. The Pornhub security team has 30 days to respond to the report, and up to 90 days to implement a fix base on the severity of the report.\nPlease allow for this process to fully complete before attempting to contact us again. Note that posting details or conversations about the report or posting details that reflect negatively on the program and the Pornhub brand, will result in immediate removal from the program.\nAny vulnerability found must be reported no later than 24 hours after discovery.\nYou are not allowed to disclose details about the vulnerability anywhere else.\nYou must avoid tests that could cause degradation or interruption of our service.\nYou must not leak, manipulate, or destroy any user data.\nYou are only allowed to test against accounts you own yourself.\nThe use of automated tools or scripted testing is not allowed.\nRewards\nPornhub may provide rewards to eligible reporters of qualifying vulnerabilities. Our minimum reward is $50 USD, and our maximum rewards is $25,000 USD. Reward amounts may vary depending upon the severity of the vulnerability reported. \nThe following table outlines the average rewards for specific classes of vulnerabilities:\n|Vulnerability Types|Core Pornhub *|All Other|\n|---|---|---|---|---|\n|Remote Shell / Command Execution|$15,000|$5,000|\n|Remote Code Execution|$10,000|$2,500|\n|SQL Injection (with output)|$5,000|$2,500|\n|Significant Authentication Bypass|$5,000|$1,000|\n|Local file Inclusion|$2,500|$1,000|\n|SQL Injection (blind)|$2,500|$1,000|\n|Insecure Direct Object References|$1,500|$750|\n|Server Side Request Forgery|$1,500|$750|\n|Stored Cross Site Scripting|$1,500|$500|\n|Other Cross Site Scripting|$250|$50|\n* Core Pornhub covers pornhub.com and pornhubpremium.com as well as the official Pornhub mobile application. It does not include any other sub-domains or any Pornhub blogs such as Insights (http://www.pornhub.com/insights/).\nPornhub reserves the right to decide if the minimum severity threshold is met and whether it was previously reported. Rewards are granted entirely at the discretion of Pornhub.\nTo qualify for a reward under this program, you should:\nBe the first to report a vulnerability.\nSend a clear textual description of the report along with steps to reproduce the vulnerability.\nInclude attachments such as screenshots or proof of concept code as necessary.\nDisclose the vulnerability report directly and exclusively to us. \nA good bug report should include the following information at a minimum:\nList the URL and any affected parameters\nDescribe the browser, OS, and/or app version\nDescribe the perceived impact. How could the bug potentially be exploited?\nExceptions \u0026amp; Rules\nOur bug bounty program is limited strictly to technical security vulnerabilities of Pornhub services listed in the scope. Any activity that would disrupt, damage or adversely affect any third-party data or account is not allowed.\nPlease do not mass create accounts to perform testing against Pornhub applications and services. Also do not perform brute force testing to determine whether rate limiting is in place for particular APIs or pieces of functionality.\nThe following are strictly prohibited:\nDenial of Service attacks.\nPhysical attacks against offices and data centers.\nSocial engineering of our service desk, employees or contractors.\nCompromise of a Pornhub users or employees account.\nAutomated tools or scans, botnet, compromised site, end-clients or any other means of large automated exploitation or use of a tool that generates a significant volume of traffic.\nAdditionally, the following vulnerabilities will not be considered for bounty:\nCross site request forgery (CSRF)\nCross domain leakage\nInformation disclosure\nSoftware version disclosure\nXSS attacks via POST or headers\nMissing SPF or DMARC records\nHttpOnly and Secure cookie flags\nSSL/TLS related (such as HSTS, GET over HTTP, Password sent in HTTP)\nPassword and account recovery policies\nSession timeout\nSession Hijacking (cookie reuse)\nMissing X-Frame or X-Content headers\nAccount enumeration\nClick-jacking\nRate-limiting \nDownloading video\nConfirmation Email (anything related with)\nLegal Notes: Payments are made through HackerOne (https://hackerone.com/faq#for-hackers-question-how-do-i-get-paid) only. You are responsible for paying any taxes associated with rewards. We reserve the right to modify the terms of this program or terminate this program at any time. By participating in this program, you agree to be bound by these rules. You must comply with all applicable laws in connection with your participation in this program.\nThank you for helping keep Pornhub safe!\n",
		"handle": "pornhub",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/952/0ea70152eaa735d279740313a482c844b1e357b9_large.jpg?1432062016",
		"internet_bug_bounty": false
	},
	{
		"id": 8416,
		"url": "/localtapiola",
		"name": "LocalTapiola",
		"meta": {
			"bug_count": 84,
			"accepting_submissions": true,
			"minimum_bounty": 50,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "LocalTapiola’s products and services cover non-life, life and pension insurance, as well as investment and saving services.",
		"stripped_policy": "LocalTapiola Bug Bounty Program Rules\nLocalTapiola rewards parties who report security vulnerabilities in certain services, also known as a \"bug bounty\" program. In order to avoid misunderstandings and ambiguities, we apply the following guidelines; even if lengthy, please read them in their entirety before participating.\nWhat is this about?\nWe want to hear about any security vulnerabilities in our services. In order to reward security researchers, we offer monetary rewards for eligible security vulnerability reports that are disclosed to us in a coordinated way. However, there are certain rules that need to be followed to ensure that your security research does not cause security risk to other users or their data, and to decrease the likelihood that your research would be flagged as a malicious intrusion attempt by our monitoring. We also want to be clear about certain aspects relating to acceptance of reports and payment of rewards in order to avoid any surprises.\nA \"security vulnerability\" is defined as an issue that causes a breach of confidentiality, integrity, or availability of the service or data, or applies to personal data (privately identifiable information) being stored or processed in a way that is not compliant with the current data protection legislation.\nEligibility and Coordinated Disclosure\nWe are pleased to reward everyone who submits valid reports which help us improve the security of LocalTapiola! However, only those that meet the following eligibility requirements may receive a monetary reward:\n* You must be the first reporter of a vulnerability.\n* The vulnerability must be a qualifying vulnerability (see below) associated with affecting an in-scope site (see below).\n* You may not publicly disclose the vulnerability prior to our resolution\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party. Please note that some fix might involve third party software development and impact the fix availability and delay rewarding.\nIn-Scope Domains\nAt this time, the vulnerability reward program covers the following LocalTapiola services:\n* www.lahitapiola.fi\n* verkkopalvelu.lahitapiola.fi\n* verkkopalvelu.tapiola.fi\n* yrityspalvelu.tapiola.fi\n* viestinta.lahitapiola.fi (new - added November 11) \nWe welcome vulnerability reports about other LocalTapiola services or public web pages, too. However, these are not at this time part of this reward program.\nOut-of-Scope Domains\nAll other *.lahitapiola.fi and *.tapiola.fi subdomains - and other vaguely LocalTapiola -related domains.\nFindings not eligible for bounty\n“Self\" XSS\nMissing cookie flags\nSSL/TLS best practices\nInformation disclosures\nMixed content warnings\nDenial of Service attacks\nClickjacking/UI redressing\nSoftware version disclosure\nAccount/e-mail enumeration\nCross-Origin Resource Sharing\nReflected file download attacks\nIncomplete or missing SPF/DKIM\nPhysical or social engineering attacks\nResults of automated tools or scanners\nLogin/logout/unauthenticated/low-impact CSRF\nPresence of autocomplete attribute on web forms \nUsing unreported vulnerabilities to find other bugs\nVulnerabilities affecting non-HTML5 capable web browser\nSelf-exploitation (i.e. password reset links or cookie reuse)\nIssues related to networking protocols or industry standards\nUse of a known-vulnerable library (without proof of exploitability)\nXSS in Flash files not developed by LocalTapiola, e.g. third-party ads\n“Brute-force” -attacks, e.g. systematic password and key list processing\nDescriptive/verbose/unique error pages (without proof of exploitability)\nMissing security-related HTTP headers which do not lead directly to a vulnerability\nInternal pivoting, scanning, exploiting, or exfiltrating data from internal LocalTapiola systems\nOur policy regarding vulnerabilities in 3rd party commonly used and widespread libraries\nWe accept reports on vulnerabilities and flaws found in 3rd party commonly used and widespread libraries which we are using in our services and applications. However, we strongly encourage to report these findings upstream directly to the author of the affected libraries. We regard these findings as \"heads-up\" warnings and our bounty policy is strict - the bounty for a vulnerability in a common 3rd party library that we will eventually fix and/or patch is always $100 USD - awarded on triage. In the name of making the Internet a safer place and in the case where the reporter does not want to handle the upstream reporting, we reserve the right to do so ourselves.\nPermissible security research: We only allow security research, that -\nMakes a good faith effort to avoid affecting third party services or their availability;\nMakes a good faith effort not to affect or disclose other users' accounts, personal data, or content, and not to affect service availability to other users;\nOnly uses user account(s) that belong to you personally;\nOnly targets user account(s), user data or personal data that belong to you personally, or are bogus test data;\nOnly uses methods that are in compliance with all applicable local and national laws;\nDoes not use malicious or destructive payloads beyond what is technically required for a benign proof-of-concept demonstration;\nOnly targets services listed above, with the appropriate exclusions.\nHow to report a security vulnerability?\nIn your report, please describe, at least:\n* What you found;\n* Where exactly did you find it and steps to reproduce;\nExample: If the attack relates to a specific URL and a specific parameter, please provide that information in detail.\n* If the vulnerability applies to a service, please provide date and time (UTC) when you could reproduce the vulnerability (we may have deployed a new version since then).\nWe would be thankful for any further relevant technical information that you may have, especially if reproduction is tricky. If we cannot reproduce it, we cannot reward you. However, there is no need to describe the security impact of your finding - we understand security risks and we can figure that out. We only need technical details.\nFinnish bug hunters: please note that bug bounty reports shall be in English not Finnish. Thank you for your understanding.\nRewards\nTo show our appreciation of responsible security researchers, LocalTapiola offers a monetary bounty for reports of qualifying security vulnerabilities.\nQualified security vulnerabilities will be rewarded based on severity and impact, to be determined by the LocalTapiola security team. Rewards may range from LocalTapiola-branded swag to monetary rewards from $100 USD up to $50,000 USD. Reward amounts will vary based upon the severity of the reported vulnerability, and eligibility is at LocalTapiola sole discretion.\nIn some cases, rewards may be consolidated into a single payout. For example, multiple reports of the same vulnerability across different parameters of a resource, or demonstrations of multiple attack vectors against a fundamental framework issue.\nIf you report several issues that are duplicates in different parts of the service (e.g., the same code running on different nodes or platforms), or part of a larger issue, these may be combined into one and only one reward may be paid.\nRewards may be reduced or declined if there is evidence of abuse, such as data exfiltration or withholding reports in order to chain multiple issues together.\nRewards are usually paid out once a verified finding is fixed. LocalTapiola aims to have fixes within 90 days of a verified report.\nLegal\nIn connection with your participation in this program you agree to comply with all applicable local and national laws. \nYou may not participate in this program if you are a resident or individual located within a country appearing on any U.S. or E.U. sanctions list.\nVulnerabilities obtained by exploiting LocalTapiola users or employees are not eligible for a bounty and will result in immediate disqualification from the program. \nLocalTapiola has never given permission/authorization (either implied or explicit) to an individual or group of individuals to extract personal information or content of LocalTapiola customers and publicize this information on the open, public-facing Internet without customer consent, nor has LocalTapiola ever given permission for programs or data belonging to LocalTapiola to be modified or corrupted in order to extract and publicly disclose data belonging to LocalTapiola.\nLocalTapiola reserves the right to discontinue this reward program and change its terms at any time without prior notification. All decisions regarding reward payments are final. The rules of this reward program or any communication related thereto do not provide or imply any obligations to LocalTapiola of any kind.\nThank you for helping keep LocalTapiola and our customers safe!\n",
		"handle": "localtapiola",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/008/416/b17813b9cf8a825b2c01725fbc9e3dc4fdfe2597_large.png?1457688936",
		"internet_bug_bounty": false
	},
	{
		"id": 8907,
		"url": "/dovecot",
		"name": "Dovecot",
		"meta": {
			"bug_count": 5,
			"accepting_submissions": true
		},
		"about": "",
		"stripped_policy": "Introduction to Dovecot \u0026amp; Program Rules\nDovecot is an open source email server with an installed base of over 3 million servers all over the world and a global market share over 60% of all IMAP servers, Dovecot is the IMAP server of choice for ISPs, Telcos and Enterprises everywhere in the world.\nDovecot was designed since the beginning with security in mind and with many ways to provide privilege separation. Although the code is written with C, it's a little bit special C variant that makes it much more difficult to write security holes accidentally than with most other C-based projects. Dovecot is an excellent choice for both small and large installations. It is fast, simple to set up, requires no special administration and it uses very little memory.\nScope\nSince we're open-source, you can use a locally installed instance of Dovecot. Especially when using local installations, we expect that you're using up to date versions on supported operating systems, hardened configurations of those services as well as a set of strong credentials. \nDovecot core open-source repository:\n- Here is link where you find Open Source code: https://github.com/dovecot/core\n- Learn more and find installation guides at http://wiki2.dovecot.org\nThis Program solely targets software vulnerabilities within. The report must be reproducible on currently supported versions and operating systems. Vulnerabilities need to be documented in a way that they can be reproduced. Send screen-shots, code, video; whatever helps to understand the flaw.\nNon-Qualifying Vulnerabilities\nIssues located within third party components\nSocial Engineering of Dovecot employees and contractors\nPhysical attacks against infrastructure, employees and offices of Dovecot\nUpload, sending or inject malware to Dovecot employees and contractors\nResearch that results in spam, harassment or any kind of unauthorized communication\nUsing data acquired by compromising customer or employee accounts\nVulnerabilities which have been made possible by purposely weakening the default configuration while using authorized privileged access\nVulnerabilities which are already publicly known or variations of such\nDenial of service attacks\nVulnerabilities in our websites\nIssues in our DNS domains\nEligibility and Disclosure\nYou must agree and comply to our Program rules\nYou must be the first person to responsibly disclose an unknown issue\nYou must not publicly disclose the vulnerability prior to our public disclosure\nOur security team will review each committed finding and establish communication as soon as possible to reproduce and solve the reported vulnerability. Please allow 3 working days for our initial response. We ask you to make a good faith effort to avoid privacy violations, destruction of data and interruption or degradation of our service during your research.\nRewards\nBesides our respect and attribution, Dovecot may provide rewards to eligible reporters of qualifying vulnerabilities. Rewards include:\n- Dovecot branded clothing: T-Shirts, Polo Shirts, Hoodies\n- Minimum reward of $100 USD for vulnerabilities we consider to be serious, up to a maximum of $5000 USD for the most severe vulnerabilities.\n- For reward, you must show that there is potential for damage or exposure of private data. E.g. local crashes or assertions do not qualify. These will award points only.\nDovecot will determine in its discretion whether a reward should be granted and the amount of the reward. In particular we may choose to pay higher rewards for severe vulnerabilities or lower rewards for vulnerabilities that are considered less severe. This is not a contest or competition.\n",
		"handle": "dovecot",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/008/907/0390fae9ffeeecd15390208e9856794b63872577_large.?1454083939",
		"internet_bug_bounty": false
	},
	{
		"id": 8619,
		"url": "/bitaccess",
		"name": "bitaccess",
		"meta": {
			"bug_count": 23,
			"accepting_submissions": true
		},
		"about": "We make bitcoin simple",
		"stripped_policy": "Summary\nBitaccess is the easiest and fastest way for people to buy and sell bitcoins. Our products range from Bitaccess BTMs (Bitcoin Teller Machines), to verification services (app.bitaccess.co).\nUPDATE\nwe are updating our infrastructure and might have a slow response time to the reports, also note that most of the reports might be irrelevant when we lunch the new version. Please stay tuned, Thank you.\nPINs\nWe offer the ability to buy bitcoin at over 6,000 retail locations across Canada. You can redeem these PIN codes purchased at retail locations directly for bitcoin on our website.\nTo use the service, the customer needs to use a cellphone to open an account. They then can redeem a few PIN codes and receive bitcoins in return. \nWe are working on the new version of our test environment, we will update the program when we have everything ready to be tested.\nAn awesome attacker would find a way to redeem the same PIN twice!\nOther interesting attacks:\n* Getting around 2FA\n* Bypassing CAPTCHA\nIn Scope\nbitaccess.co\nop.bitaccess.co\ncash.bitaccess.co\nIf you find another property, please ask and we may add it to the list\nOut of Scope (Currently)\nsearch.bitaccess.co\nblog.bitaccess.co\napp.bitaccess.co\nbitcoin.bitaccess.co\nForeword\nNo technology is perfect. Bitaccess believes working with skilled security researchers across the globe is crucial in identifying weaknesses. If you believe you've found a security issue in our product or service, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nMake a good faith effort to avoid privacy violations, destruction of data and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nBounty Program\nTo show our appreciation of responsible security researchers, Bitaccess offers monetary bounties for reports of qualifying security vulnerabilities. Reward amounts will vary based upon the severity of the reported vulnerability and eligibility is at our sole discretion.\nExclusions\nWhile researching, we'd like to ask you to refrain from:\n* Submitting ID's on our production server\n* Denial of service\n* Spamming\n* Social engineering (including phishing) of Bitaccess staff or contractors\n* Any physical attempts against Bitaccess property or data centers\n* HTTP Secure flag, or general SSL configurations  (that is all a handled by our platform providers), CNAME or other domain settings for mail, etc.\nAbout us\nBitaccess Inc. manufactures Digital Kiosks that handle fiat to cryptocurrency (i.e. bitcoin) conversion) and vice versa.\nWe manufacture the hardware and software in house and have the highest number of operational bitcoin ATMs in the world. These kiosks can be used for digital purchases of gift cards and bill payment as well.\nWe'd like to invite the researchers to find any bugs we have in our operator panel and customer facing sites. We are launching a number of new products and would like to release them to pen-testers to begin.\n",
		"handle": "bitaccess",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/008/619/fa8e461be9558db800385d318fdcd1b81d82c430_large.?1453296695",
		"internet_bug_bounty": false
	},
	{
		"id": 1361,
		"url": "/moneybird",
		"name": "Moneybird",
		"meta": {
			"bug_count": 69,
			"accepting_submissions": true
		},
		"about": "Cloud accounting",
		"stripped_policy": "Disclosure policy\nAt Moneybird, we consider the security of our systems a top priority. But no matter how much effort we put into system security, there can still be vulnerabilities present.\nIf you discover a vulnerability, we would like to know about it so we can take steps to address it as quickly as possible. We would like to ask you to help us better protect our customers and our systems.\nPlease do the following\nDo not take advantage of the vulnerability or problem you have discovered, for example by downloading more data than necessary to demonstrate the vulnerability or deleting or modifying other people's data,\nDo not reveal the problem to others until it has been resolved,\nDo not use attacks on physical security, social engineering, brute force attacks, distributed denial of service, spam or applications of third parties, and\nDo provide sufficient information to reproduce the problem, so we will be able to resolve it as quickly as possible. Usually, the IP address or the URL of the affected system and a description of the vulnerability will be sufficient, but complex vulnerabilities may require further explanation.\nWhat we promise\nWe will respond to your report as soon as we can (at least within 3 business days) with our evaluation of the report and an expected resolution date,\nIf you have followed the instructions above, we will not take any legal action against you in regard to the report,\nWe will handle your report with strict confidentiality, and not pass on your personal details to third parties without your permission,\nWe will keep you informed of the progress towards resolving the problem,\nIn the public information concerning the problem reported, we will give your name as the discoverer of the problem (unless you desire otherwise), and\nWe strive to resolve all problems as quickly as possible, and we would like to play an active role in the ultimate publication on the problem after it is resolved.\nThis Responsible disclosure is based on the guidelines from NSCS (https://www.ncsc.nl/english/current-topics/news/responsible-disclosure-guideline.html) written by Floor Terra (http://responsibledisclosure.nl/en/).\n",
		"handle": "moneybird",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/361/09629ef6471a24aa3d0ad75e9c1cc87f922ca926_large.jpg?1460549580",
		"internet_bug_bounty": false
	},
	{
		"id": 1894,
		"url": "/github",
		"name": "GitHub",
		"meta": {
			"bug_count": 89,
			"accepting_submissions": true,
			"minimum_bounty": 200,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "How people build software",
		"stripped_policy": "GitHub Security Bug Bounty\nSoftware security researchers are increasingly engaging with Internet companies to hunt down vulnerabilities. Programs by Google (http://www.google.com/about/appsecurity/reward-program/), Facebook (https://www.facebook.com/whitehat), Mozilla (http://www.mozilla.org/security/bug-bounty.html), and others have helped to create a strong bug-hunting community. Our bounty program gives a tip of the hat to these researchers and provides some cold hard cash for their efforts.\nYou can find more information in the rules (https://bounty.github.com/#rules) and FAQs (https://bounty.github.com/#faqs). You can also check the current rankings on the leaderboard (https://bounty.github.com/#leaderboard).\nHappy bug hunting!\nRules\nRules for you\n  Don’t attempt to gain access to another user’s account or data.\n  Don’t perform any attack that could harm the reliability/integrity of our services or data. DDoS/spam attacks are not allowed.\n  Don’t publicly disclose a bug before it has been fixed.\n  Do not impact other users with your testing, this includes testing for vulnerabilities in repositories you do not own. We may suspend your GitHub account and ban your IP address if you do so.\n  Don’t use scanners or automated tools to find vulnerabilities. They’re noisy and we may suspend your GitHub account and ban your IP address.\n  Never attempt non-technical attacks such as social engineering, phishing, or physical attacks against our employees, users, or infrastructure.\n  When in doubt, email us: bounty@github.com.\nRules for us\n  We will respond as quickly as possible to your submission.\n  We will keep you updated as we work to fix the bug you submitted.\n  We will not take legal action against you if you play by the rules.\nWhat does not qualify?\n  Bugs that don’t affect the latest version of modern browsers (Chrome, Firefox, Edge, Safari). Bugs related to browser extensions are also out of scope.\n  Bugs requiring exceedingly unlikely user interaction.\n  Bugs, such as timing attacks, that prove the existence of a private repository or user.\n  Insecure cookie settings for non-sensitive cookies.\n  Disclosure of public information and information that does not present significant risk.\n  Bugs that have already been submitted by another user, that we are already aware of, or that have been classified as ineligible (https://bounty.github.com/ineligible.html).\n  Bugs in applications not listed under Open bounties (https://bounty.github.com#open-bounties) are generally not eligible. Look at individual bounties for details on scope.\n  Bugs in content/services that are not owned/operated by GitHub. This includes our users’ code, GitHub Pages sites, and third party services operating on subdomains of GitHub.com.\n  Vulnerabilities that GitHub determines to be an accepted risk will not be eligible for a paid bounty or listing on the site.\n  Scripting or other automation and brute forcing of intended functionality.\n  When in doubt, email us: bounty@github.com.\n",
		"handle": "github",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/894/3954e0a0e971f2a699ae137f7d4d6ff13a98cddf_large.jpg?1458666750",
		"internet_bug_bounty": false
	},
	{
		"id": 10543,
		"url": "/apitest",
		"name": "APITest.IO",
		"meta": {
			"bug_count": 115,
			"accepting_submissions": true
		},
		"about": "",
		"stripped_policy": "No technology is perfect, and APITest.IO believes that working with skilled security researchers across the globe is crucial in identifying weaknesses in any technology. If you believe you've found a security issue in our product or service, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nBounty Program\nReward amounts will vary based upon the severity of the reported vulnerability, and eligibility is at our sole discretion.\nExclusions\nWhile researching, we'd like to ask you to refrain from:\n* Denial of service\n* Spamming\n* Social engineering (including phishing) of APITest.IO staff or contractors\n* Any physical attempts against APITest.IO property or data centers\nThank you for helping keep APITest.IO and our users safe!\n",
		"handle": "apitest",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/010/543/77b7e6e7a60e040161561e9aee900ed9cae25c1f_large.?1459265182",
		"internet_bug_bounty": false
	},
	{
		"id": 314,
		"url": "/uber",
		"name": "Uber",
		"meta": {
			"bug_count": 588,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "",
		"stripped_policy": "Scope\nWe are interested in any vulnerability that could negatively affect the security of our users.\nIn-Scope Vulnerability Classes\nCross-site Scripting (XSS)\nCross-site Request Forgery\nServer-Side Request Forgery (SSRF)\nSQL Injection\nServer-side Remote Code Execution (RCE)\nXML External Entity Attacks (XXE)\nAccess Control Issues (Insecure Direct Object Reference issues, etc)\nExposed Administrative Panels that don't require login credentials\nDirectory Traversal Issues\nLocal File Disclosure (LFD)\nIn-Scope Properties\napi.uber.com\nbonjour.uber.com\nbusiness.uber.com\ncn-cfe1.uber.com\ncn-dc1.uber.com\ncn-dc2.uber.com\ncn-dc3.uber.com\ncn-dca1.uber.com\ncn-geo1.uber.com\ncn-pek1.uber.com\ncn-pr.uber.com\ncn-sjc1.uber.com\ncn-slow1.uber.com\ncn-slow2.uber.com\ncn-slow3.uber.com\ncn-spdy.uber.com\ncn-tt1.uber.com\ncn.uber.com\ncn1.uber.com\ncnfrontend-dca1.uber.com\ncnfrontend-sjc1.uber.com\ncnfrontend.uber.com\ncsp.uber.com\ndeveloper.uber.com\ndial.uber.com\neats.uber.com\nget.uber.com\ngetrush.uber.com\nhelp.uber.com\nlogin.uber.com\nlert.uber.com\nm.uber.com\npartners.uber.com\npetition.uber.org\nriders.uber.com\nrush.uber.com\nsftp.uber.com\nsms.uber.com\ntrack.uber.com\ntrip.uber.com\nubereats.com\nubermovement.com\n*.uberinternal.com\nvault.uber.com\nwww.uber.com\nAndroid/iPhone Partner App\nAndroid/iPhone Rider App\nAndroid/iPhone Eats App\nOut-of-scope Vulnerability Classes\nOpen redirects. 99% of open redirects have low security impact. For the rare cases where the impact is higher, e.g., stealing oauth tokens, we do still want to hear about them.\nPublicly accessible login panels - These generally have low security impact and are in software that Uber runs but doesn’t control.\nReports that state that software is out of date/vulnerable without a proof of concept.\nHost header issues without an accompanying proof-of-concept demonstrating vulnerability.\nXSS issues that affect only outdated browsers.\nStack traces that disclose information.\nCSV injection. Please see this article (https://sites.google.com/site/bughunteruniversity/nonvuln/csv-excel-formula-injection).\nSubmissions on the S3 bucket uber, We do not own this bucket!.\nBest practices concerns.\nHighly speculative reports about theoretical damage. Be concrete.\nSelf-XSS that can not be used to exploit other users (this includes having a user paste JavaScript into the browser console).\nVulnerabilities as reported by automated tools without additional analysis as to how they're an issue.\nReports from automated web vulnerability scanners (Acunetix, Vega, etc.) that have not been validated.\nDenial of Service Attacks.\nReflected File Download (RFD).\nwindow.opener-related issues.\nPhysical or social engineering attempts (this includes phishing attacks against Uber employees).\nContent injection issues.\nCross-site Request Forgery (CSRF) with minimal security implications (Logout CSRF, etc.)\nMissing autocomplete attributes.\nMissing cookie flags on non-security-sensitive cookies.\nIssues that require physical access to a victim’s computer.\nMissing security headers that do not present an immediate security vulnerability.\nFraud issues (please see the below section elaborating on this).\nSSL/TLS scan reports (this means output from sites such as SSL Labs).\nBanner grabbing issues (figuring out what web server we use, etc.).\nOpen ports without an accompanying proof-of-concept demonstrating vulnerability.\nRecently disclosed 0day vulnerabilities. We need time to patch our systems just like everyone else - please give us two weeks before reporting these types of issues.\nEntering the Uber offices, throwing crisps everywhere, unleashing a bunch of hungry racoons, and hijacking an abandoned terminal on an unlocked workstation while staff are distracted.\nOut-of-scope Properties\nnewsroom.uber.com\nlove.uber.com\ndrive.uber.com\neng.uber.com\npeople.uber.com\n*.uber.com.cn\nor any other properties relating to Uber in China, since they belong to Didi Chuxing\nuber.onelogin.com\nOneLogin runs their own bug bounty program and any vulnerabilities for OneLogin should be reported to them.\n*.dev.uber.com\n*.dev.uberinternal.com\nbrand.uberinternal.com\n*.et.uber.com - The underlying software here is exacttarget which Uber does not have control over.\nuber-finder.com - this is not software owned by Uber Engineering.\nRewards\nOur rewards are impact-based. This means, for example, that we will issue a relatively high reward for a vulnerability that has the potential to leak sensitive user data, but that we will issue little to no reward for a vulnerability that allows an attacker to deface a microsite. When we have our reward meetings, we always ask one question: If a malicious attacker abuses this, how bad off are we? We assume the worst and pay out the bug accordingly.\nIf we receive several reports for the same issue, we offer the bounty to the earliest report for which we had enough actionable information to identify the issue. We don't want to encourage people spamming us with vague issues in an attempt to be first.\nIf a single fix fixes multiple vulnerabilities, we treat this as a single vulnerability.  For example, if you find 3 vulnerabilities in a WordPress plugin we use, and our fix is to remove the plugin, this will receive a single bounty, determined, as always, by impact.\nThe payout ranges on this page are guidelines to express roughly how we think about the severity of classes of issues. They are not exact rules. There can be attributes of bugs that make them more or less severe, which will affect the payout. For example, if a vulnerability affects only a small population of users, it will likely receive a lower reward than a similar vulnerability that affects a larger population of users. To date, we have most commonly rewarded on the top end of our published payout ranges.\nAt the end of the day, all reward amounts are at our discretion, but we aim to be fair. Some researchers won't agree with some of our decisions, but we're paying out to the best of our ethical ability and trust that the majority of researchers will consider their rewards fair and in many cases generous. We will adapt as the program continues.\nThings you should expect to receive little to no bounty for\nMicrosites with little to no user data\nIssues requiring user-interaction\nOutdated wordpress instances\nMost brute forcing issues\nBounty Payout Range\nN.B: the amounts listed here are the maximum we can pay for these categories of issues. This is meant as rough guidance on how we think about rewarding issues, ultimately we will reward largely based on the impact of the issue but at our discretion. \nCritical issues ($10,000) - Remote code execution on a production server. Exposure of information that identifies individuals (social security numbers, credit card numbers, bank account numbers, driver license images) Full account takeover of rider/partner account without interaction. Payment or partner invoice information exposure at scale. Potential access to source code. XSS in Toolshed (our internal account management system), or server-side request forgery (SSRF). Vulnerabilities leading to the compromise of an employee account (with a way to bypass two-factor).\nSignificant Issues ($5,000) - Stored Cross-site Scripting which can cause significant brand damage (e.g. in a homepage), missing authorization checks leading to the exposure of email addresses, date of birth, names, phone numbers, etc.\nMedium Issues ($3,000) - Reflected Cross-site Scripting (XSS), most Cross-site Request Forgery (CSRF) issues, access control issues which do not exposed PII but affect other accounts, some account validation bypasses (being able to change driver picture, etc). Any vulnerability which allows the bulk lookup of user UUIDs (e.g. turn an auto-incrementing ID into a UUID, turn an email into a UUID).\nFraud Issues - Send these to ext-uber-fraud@uber.com. We currently do not reward for fraud issues. \nMiscellany\nReporting Guidelines\nWe need detailed written steps to reproduce. We do not accept reports that include only a video.\nPolicy Changes\nYou can view the changes to this policy over time at hackerone.com/uber/policy_versions (https://hackerone.com/uber/policy_versions).\nFraud issues\nIf you’d like to report an issue related to fraud, please contact ext-uber-fraud@uber.com. These type of issues are important but we unfortunately cannot reward issues if this type at this time. Specifically promo code fraud and give-get fraud is abuse of our promotional offers and referral codes in order to get free rides from Uber are a common submission. We do not consider these in scope for our bug bounty program at this time unless they show an explicit technical vulnerability in our software.  Lack of verification for things such as phone numbers, credit cards, etc are all fraud related issues and are not in scope for this bug bounty program.\nExamples of good bugs\nhttps://fin1te.net/articles/uber-turning-self-xss-into-good-xss/\nhttp://blog.portswigger.net/2016/04/adapting-angularjs-payloads-to-exploit.html\nhttp://blog.orange.tw/2016/04/bug-bounty-uber-ubercom-remote-code_7.html\nhttps://labs.integrity.pt/articles/uber-hacking-how-we-found-out-who-you-are-where-you-are-and-where-you-went/\nFrequently Asked Questions\nCan I blog about my bug?\nYes, but we ask that you wait until the issue is both fixed and paid out before you publish the blog post. We also prefer that you request disclosure through HackerOne so that readers of your blog post can get the full background on the issue.\nWhat is your policy on chaining bugs and privilege escalation?\nChaining of bugs is not frowned upon in any way, we love to see clever exploit chains! However, if you have managed to compromise an Uber-owned server we do not allow for escalations such as port scanning internal networks, privilege escalation attempts, attempting to pivot to other systems, etc. If you get access to an Uber server please report it us and we will reward you with an appropriate bounty taking into full consideration the severity of what could be done. Chaining a CSRF vulnerability with a self XSS? Nice! Using AWS access key to dump user info? Not cool.\nDo you provide test accounts?\nAs of this time we do not have a good system for creating test accounts for our bug bounty submitters. Please create an account as you would normally and perform testing with that account or accounts.  Whenever possible only test against yourself, never other users. If there is ever a situation where you cannot test a bug while adhering to this please let us know and we will help figure out an appropriate solution.\nWhat is a user UUID and when do you reward for enumeration of it?\nWe reward for issues which allow you to enumerate bulk user UUID's via a phone number or email address. For example, if there's an endpoint that allows you to submit an email and the response contains that user's UUID - this is a vulnerability we would reward for. To verify this you should compare the UUID you're seeing with your own email. To get your personal account UUID visit help.uber.com after authenticating and copy and paste the following JavaScript in your browser's developer console:\njs\nalert(JSON.parse($(\"#web-support-data-script\").text).user.uuid);\n\n(We reward for this bug because we want to make it harder to perform bulk insecure direct object reference attacks against our users).\nWhat is a vehicle UUID and when do you reward for enumeration of it?\nA vehicle UUID uniquely identifies a vehicle within our systems. Any instance where you could collect a lot of vehicle uuids is probably interesting to us, depending on the circumstances.\nTo get a list of your vehicle UUIDs, navigate to https://partners.uber.com/vehicles/ and paste the following into your browser’s development console:\njs\nvuids = document.querySelectorAll( \"#vehicle-uuid\" );for( var i = 0;i",
		"handle": "uber",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/314/936c685d4ed292323463de715a0215eb19c5ee0b_large.jpg?1456253342",
		"internet_bug_bounty": false
	},
	{
		"id": 2739,
		"url": "/newrelic",
		"name": "New Relic",
		"meta": {
			"bug_count": 68,
			"accepting_submissions": true
		},
		"about": "Your customers and business depend on increasingly complex applications and infrastructure. New Relic uses real-time data to bring it all together.",
		"stripped_policy": "New Relic is committed to the security of our customers and their data. We believe that coordinated disclosure by security researchers and engaging with the security community is a important means of achieving our security goals.\n \nIf you believe you have found a security vulnerability in one of our products or websites, we welcome and greatly appreciate you reporting it to New Relic, as long as it falls in scope and is not one of the types of vulnerability listed as ‘out-of-scope’ below.\n \nIf you are a customer and have a password or account issue, please contact New Relic support via https://support.newrelic.com\nPlease do NOT mass create accounts to perform testing against New Relic applications and services. Please do not perform \"brute force\" testing to determine whether rate limiting is in place for particular APIs or pieces of functionality. \nAlso please note that the following domains are OUT OF SCOPE for the New Relic coordinated disclosure policy and SHOULD NOT be tested against : \ndiscuss.newrelic.com\ndocs.newrelic.com\nblog.newrelic.com\nsupport.newrelic.com\ntry.newrelic.com\nir.newrelic.com\n \nCoordinated Disclosure Policy\nTo encourage coordinated disclosure, New Relic does not intend to initiate any legal action or law enforcement investigation against security researchers as long as they adhere to the following guidelines:\n* Researchers will report details of a discovered security issue to New Relic without making any information or details of the vulnerability public \n \n* Researchers will allow New Relic reasonable time to resolve the issue before publishing any information or details about the vulnerability or other making such information generally known. New Relic will follow the HackerOne disclosure guidelines (https://hackerone.com/disclosure-guidelines), which commit to open communication, providing a initial response to the researcher within 30 days and providing a disclosure timeline to the researcher to be mutually agreed upon.\n \n* Researchers will provide as much detail as possible to New Relic via a secure means in order to help New Relic’s security team and engineers reproduce the issue\n \n* Researchers will make all reasonable attempts in good faith to avoid destroying, stealing, modifying, damaging, violating or otherwise jeopardizing the privacy of any New Relic customer or New Relic data. This includes disrupting or degrading New Relic’s products and service to its customers.\n \nThe following are expressly prohibited and are not covered under the above Coordinated Disclosure Policy:\nPhysical attacks against New Relic employees, offices, and data centers\u2028\nSocial engineering of New Relic employees, contractors, vendors, or service providers, including phishing\nPursuing vulnerabilities which send unsolicited bulk messages (spam) \nPursuing vulnerabilities through the compromise of a New Relic customer or employee account – (ex. do not attempt to gain access to another user’s account or data)\nKnowingly posting, transmitting, uploading, linking to, or sending any malware to New Relic or its employees\nExamples of vulnerabilities New Relic is interested in hearing about are:\nAuthentication flaws\nCross-site scripting (XSS)\nSQL Injection\nCross-site request forgery (CSRF/XSRF)\nMixed content scripts (scripts loaded over HTTP on an HTTPS page)\nServer side code execution\nPrivilege Escalation\nAuthorization flaws/Access Control Bypasses (e.g. being able to perform security-sensitive actions as a Restricted User) \nClickjacking on authenticated pages with sensitive state changes\nAnything particularly novel and interesting! \nOut-of-scope issues that should not be reported:\nLack of rate limiting on a particular API or other 'load testing' types of issues \nNon sensitive (ie. non-session) cookies missing the Secure or HttpOnly flags\nDenial-of-service vulnerabilities \nStack traces\nApplication or server error messages\nUse of out-of-date 3rd party libraries without proof of exploitability\nVulnerabilities in 3rd party scripts used on New Relic websites\nLogout cross-site request forgery (CSRF/XSRF) \nLeaking information via the Referer header \nMissing X-Frame-Options, Content-Security-Policy, Strict-Transport-Security, X-Content-Type-Options, or X-XSS-Protection HTTP headers \nSPF, DMARC or other email configuration related issues\nPassword or account recovery policies, such as reset link expiration or password complexity\nReports from automated web security scanners \nHTTP 404 codes/pages or other HTTP non-200 codes/pages\nVersion number/banner disclosure on public facing websites\nDisclosure of known public files or directories, (e.g. robots.txt)\nLack of DNSSEC \nSSL configuration issues (cipher suites, SHA-1 certificates, BEAST/CRIME, lack of PFS)\nHTTP TRACE or OPTIONS methods enabled\nClickjacking on pages without authentication and/or sensitive state changes\nVulnerabilities only affecting end of life browsers or platforms\nSelf-XSS and issues exploitable only through Self-XSS\nPresence of application or web browser ‘autocomplete’ or ‘save password’ functionality\nContent spoofing / text injection\nInformation disclosure via /status URLs (this is a known issue) \nBugs requiring exceedingly unlikely user interaction\nExploits that require physical access to a user's machine\nReporting issues\nPlease submit your security issue to New Relic via HackerOne (https://hackerone.com/newrelic). Please provide as much detail as you can (URLs, etc.) and the steps to reproduce the issue. We commit to responding to your report as soon as possible ! \nAt this time, we are not awarding bounties or cash rewards for reported vulnerabilities. However, researchers will earn HackerOne reputation based on the merit of reported vulnerabilities, which may help qualify them for private bug bounty programs in the future. \n",
		"handle": "newrelic",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/002/739/ed98b2dcb26195cb7d0ee6fb4be105fb3fda63ff_large.png?1436295669",
		"internet_bug_bounty": false
	},
	{
		"id": 1366,
		"url": "/mapbox",
		"name": "Mapbox",
		"meta": {
			"bug_count": 94,
			"accepting_submissions": true,
			"minimum_bounty": 200,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Mapbox is an open source mapping platform for developers. We make it easy to integrate location into any mobile or online application.",
		"stripped_policy": "Mapbox appreciates the effort of software security researchers who work to make the Internet more secure. Our security vulnerability bounty system exists to reward the work of security researchers who find issues with our software and web services.\nRules\nDo not publicly disclose the bug until Mapbox has confirmed the bug is fixed.\nDo not subject our website or web services to DoS, DDoS, scraping, brute force, or other type of automated attack.\nDo not use security scanners or tools which may cause DoS, DDoS or scraping-like behavior against our web services or website.\nDon't try to gain access to another user's account or data - please use test accounts.\nEligibility for a bounty\nTo qualify for a bounty:\nYou must be the first reporter of the vulnerability and it must not be a duplicate or known issue\nYour report must be within scope and not on our list of ineligible reports and known issues\nYou must not be a minor\nYou must not be a resident of or be located in a country on any U.S. sanctions lists\nPublic disclosure of the issue before its resolution will result in disqualification from the Mapbox HackerOne program. Evidence of abuse or accessing another user's data or account without their permission will also result in disqualification from the program.\nReporting\nAll bug reports should include the following information to be considered for a bounty. Reports missing the information below will be marked as \"Needs More Information,\" resulting in a minor loss of reputation points.\nVulnerable URL(s) and any affected parameters\nYour browser and operating system\nDetailed, step-by-step explanation of how to replicate the issue\nScreenshots or videos of the vulnerability are highly encouraged and will result in quicker triaging of the issue and possibly a higher bounty at Mapbox's discretion.\nScope\nwww.mapbox.com\nMapbox Studio (https://www.mapbox.com/studio/)\nMapbox Studio classic online map editor (https://www.mapbox.com/editor/)\nOpen Source SDKs\nMapbox.js (https://www.mapbox.com/mapbox.js/)\nMapbox GL JS (https://www.mapbox.com/mapbox-gl-js/)\nMapbox iOS SDK (https://www.mapbox.com/mobile/)\nMapbox Android SDK (https://www.mapbox.com/mobile/)\nMapbox APIs and web services\nMaps API (https://www.mapbox.com/api-documentation/#maps)\nStyles API (https://www.mapbox.com/api-documentation/#styles)\nGeocoding API (https://www.mapbox.com/api-documentation/#geocoding)\nUploads API (https://www.mapbox.com/api-documentation/#uploads)\nSurface API (https://www.mapbox.com/api-documentation/surface.html)\nDistance API (https://www.mapbox.com/api-documentation/#introduction)\nStatic API (https://www.mapbox.com/api-documentation/#static)\nStatic Classic API (https://www.mapbox.com/api-documentation/#static-classic)\nMap Matching API (https://www.mapbox.com/api-documentation/#map-matching)\nDirections API (https://www.mapbox.com/api-documentation/#directions) (developer preview)\nDatasets API (https://www.mapbox.com/api-documentation/#datasets) (developer preview)\nWe also have over 500+ public Github repositories (https://www.mapbox.com/about/open/) that are within scope, though only reports that can be actively exploited on Mapbox infrastructure will be eligible for a monetary bounty. Some repositories in the Mapbox GitHub organization may contain experimental code and are not eligible for a bounty. Please send any questions about the eligibility of an open source repository to security@mapbox.com. Please submit any open source security issues directly to HackerOne, do not open security-related issues on public Github repositories.\nHere are some popular open-source repositories for you to get started with:\nnode-sqlite3 (https://github.com/mapbox/node-sqlite3)\nnode-pre-gyp (https://github.com/mapbox/node-pre-gyp)\ncarmen (https://github.com/mapbox/carmen)\ntilelive (https://github.com/mapbox/tilelive)\nEligible reports\nHere is an incomplete list of reports we are interested in:\nCross-site scripting (XSS)\nDirectory traversal\nPrivilege escalation\nServer-side remote code execution or command injection\nSQL or NoSQL injection\nAccess control bypass\nPresence or disclosure of secret access tokens (sk.*) other than when they are immediately generated on mapbox.com. Note that reports about the disclosure of public access tokens (pk.*) are ineligible.\nOut of scope\nThe following domains or software programs are out of scope. Any submitted reports related to them will be closed as N/A.\nstatus.mapbox.com - please instead report to the StatusPage.io bug bounty program (https://bugcrowd.com/statuspage)\nemail.mapbox.com\nMapbox Studio Classic (https://www.mapbox.com/mapbox-studio-classic/)\nTilemill (https://www.mapbox.com/tilemill/)\nLegacy iOS SDK (https://github.com/mapbox/mapbox-ios-sdk-legacy)\nLegacy Android SDK (https://github.com/mapbox/mapbox-android-sdk-legacy)\nIneligible reports or known issues\nThe following reports are ineligible to receive bounties or reputation points. Any submitted reports related to them will be closed as N/A.\nSocial engineering of Mapbox staff, contractors, or customers\nReports from automated tools or scans\nIssues related to software or protocols not under Mapbox's control\nDenial of Service attacks, including mass requests against password reset, login, account creation, or other endpoints. We have monitoring and mitigations against brute force attacks which we believe are adequate. Please do not conduct brute force attacks.\nHTML or CSS injection in map markers or map features - this is by design so that our users can have rich, styled maps. We sanitize JavaScript and arbitrary code using sanitize-caja (https://github.com/mapbox/sanitize-caja). We are interested in reports about the execution of JavaScript though!\nPresence of autocomplete on form fields, including username and password fields\nSPF, DKIM, or DMARC settings\nPassword and account recovery policies, including password reset emails and password reset links\nReports noting the lack of or suggesting the institution of a password policy, including account lockout settings\nEmail spoofing\nDNSSEC settings \nPresence of public (pk.*) access tokens in web pages or URLs - due to their use in client-side JavaScript these are public by design.\nUsername enumeration, including an oracle that discloses whether a given username or email address is associated an account\nReports of CSRF or reports of a lack of CSRF tokens on wwww.mapbox.com, unless accompanied by a detailed proof of concept exploit. We have alternative CSRF mitigations in place.\nMissing HTTP security headers, unless accompanied by a detailed proof of concept exploit that leverages their absence\nExistence of access-controlled administrative pages\nReports related to the SSL/TLS certificate for www.mapbox.com. Please report instead to the Fastly security team (https://www.fastly.com/security/report-security-issue).\nOpen redirects\nUse of a known-vulnerable library (without evidence of exploitability)\nVulnerabilities only affecting older browsers. Please see our documentation on browser support (https://www.mapbox.com/help/mapbox-browser-support/). Any reports related to IE7 will be marked as ineligible.\nHSTS or CSP headers\nClickjacking or UI redressing on maps or features intended to be embedded in other pages such as those from the api.tiles.mapbox.com or api.mapbox.com domains. Mapbox customers often embed their maps on their pages using the iframe element.\nContent spoofing or HTML injection, unless accompanied by a proof of concept that demonstrates a security risk beyond injecting plain text\nReports of insecure SSL/TLS ciphers or weak signature algorithms, unless accompanied by a working proof of concept of an exploit\nIneligible for monetary bounty, but appreciated\nThe following reports are ineligible for a monetary bounty due to their low severity though they may be available for reputation points. If accompanied by a detailed proof of concept of an exploit leveraging their existence they may be eligible for a cash bounty at Mapbox's discretion.\nMixed content\nSelf-XSS\n",
		"handle": "mapbox",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/366/53bba84e722a418e5da07c3702d6dd834cae304e_large.jpg?1458164756",
		"internet_bug_bounty": false
	},
	{
		"id": 1926,
		"url": "/badoo",
		"name": "Badoo",
		"meta": {
			"bug_count": 85,
			"accepting_submissions": true,
			"minimum_bounty": 140,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Meet new people",
		"stripped_policy": "Badoo vulnerability disclosure program\nWe pay for all newfound vulnerabilities.\nVulnerabilities will be ranked from category 5 (£1000) to category 1 (£100), depending on their severity. The Badoo jury determines the severity of the vulnerability.\nWhere to look for vulnerabilities:\nbadoo.com,\neu1.badoo.com,\nus1.badoo.com,\ncorp.badoo.com,\nm.badoo.com,\nmeu1.badoo.com,\nmus1.badoo.com,\nhotornot.com\nbma.badoo.com\nbadoocdn.com\ntranslate.badoo.com\nccardseu1.badoo.com \nccardsus1.badoo.com\nBadoo Mobile Applications (App Store, Google Play, Windows Phone Store, BlackBerry World).\nAward categories\nCategory 5 - £ 1000\nCategory 4 - £ 600\nCategory 3 - £ 300\nCategory 2 - £ 200\nCategory 1 - £ 100\nWe don’t want to tie our categories to traditional systems of vulnerability assessment. The more damage a found vulnerability can cause, the more valuable it is to us and the higher the category we assign to it.\nNon-qualifying vulnerabilities\n“Theoretical” vulnerabilities without any proof or demonstration of the real presence of the vulnerability\nVulnerabilities requiring physical access to a user’s browser, or a smartphone, or email account, as well as issues on rooted or jailbroken smartphones; \nReports from security scanners and other testing tools\nReports about non-implemented security “best practices” (like a lack of HSTS mechanism on client or server side, or soft token invalidation rules);\nReports about missed headers or cookie flags;\nReports about configuration of our mail infrastructure (incorrect SPF records, DMARK policies, and other)\nData enumeration via registration or account recovery forms;\nOne-click authorization from emails and login CSRF via these links; \nIssues that require another vulnerability to exploit, without providing that vulnerability;\nOpen redirects (except cases with additional impact, e.g. token hijacking);\nFraming, clickjacking, tapjacking (unless you demonstrate real impact on our users);\nLogout CSRF;\nSelf-XSS;\nCaptcha bypass using OCR;\nContent injection issues;\nAttacks based on social engineering or phishing.\nAnd another one important note: we'll respect your karma 'til you respect our time and work: do not send reports without precise and clear PoC; do not create several reports about one vulnerability on a different domains or different mobile platform (if it's not domain-dependant vulnerability or platform-dependent bug of course); do not send generic reports that were copied from other disclosed reports  without any check that these reports at least suitable for our services and apps. In other words: be kind!  \nTo make it easier, we’ll give you a number of examples and tell you which category they would be assigned to:\nIn our experience, most vulnerabilities are classified as HTML-injection or XSS. If the found vulnerability can generally not cause any damage (for example, you can only change the output of the page), then it will get the lowest category (1).\nMore dangerous: SQL-injection. Let's say you've found a vulnerability that \"breaks\" an SQL-query, but the only result is an incorrect display of content on the site. Such vulnerability will receive a rewardin the 2nd category. However, if using SQL-vulnerability an attacker can gain access to the data of one or more users, this vulnerability would rise up to the 5th category.\nIf a vulnerability can update data in the user profile, depending on how critical the data, we may assign a higher category, up to the 5th.\nCSRF-vulnerabilities can be very dangerous - the higher the possible damage, the higher the category.\nBadoo can also award a super-reward above £1000, if you find something very serious.\nPublic disclosure\nWe're more than happy to publicly disclose your interesting issue once it has been fixed and agreed with us to do so. Public disclosure without our permission can lead to immediate forfeiture of any reward.\nSource: http://corp.badoo.com/security\n",
		"handle": "badoo",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/926/e4c4ecee56b31de897f47073b941db3df4ba033d_large.?1432930428",
		"internet_bug_bounty": false
	},
	{
		"id": 7954,
		"url": "/cakebet",
		"name": "Cakebet",
		"meta": {
			"bug_count": 15,
			"accepting_submissions": true
		},
		"about": "CakeBet is a Bitcoin Casino that makes betting with bitcoin a piece of cake.",
		"stripped_policy": "No technology is perfect, and CakeBet Bitcoin Casino (https://cakebet.com) believes that working with skilled security researchers across the globe is crucial in identifying weaknesses in any technology. If you believe you've found a security issue in our product or service, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nScope\nWe are only looking for vulnerabilities on our live site under this program. Specifically:\ncakebet.com\nWe are not interested in bugs found at blog.cakebet.com\nDisclosure Policy\nIf you find an issue relating to game play, please include the shared_secret in your report to help us track it down.\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nExclusions\nWhile researching, we'd like to ask you to refrain from:\n* Denial of service\n* Spamming\n* Social engineering (including phishing) of CakeBet staff or contractors\n* Any physical attempts against CakeBet property or data centers\nThanks\nWe believe in giving credit where credit is due. If your work helps us improve the security of our service, we'll gladly recognize your discovery in our Hall of Fame.\nWe are currently not paying a monetary reward for bugs.\nThank you for helping keep CakeBet and our users safe!\n",
		"handle": "cakebet",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/007/954/70d3bd43d38649305a2eb56e5686de2c983f445a_large.?1451295350",
		"internet_bug_bounty": false
	},
	{
		"id": 6699,
		"url": "/cylance",
		"name": "Cylance",
		"meta": {
			"bug_count": 25,
			"accepting_submissions": true
		},
		"about": "Protect your endpoints against advanced malware with the world's first antivirus built on artificial intelligence and machine learning.",
		"stripped_policy": "Cylance encourages researchers to follow responsible disclosure procedures when reporting security issues in our products, services, websites, or infrastructure. Cylance is committed to engaging with the research community in a positive, professional, mutually beneficial manner that protects our customers. Submissions will be reviewed within 30 days.\nAccess to Systems and Products\n*Please do not contact any Cylance support portal (support.cylance.com) for test accounts or any other matter.  We do not issue test accounts.  Please use HackerOne platform as your primary communication channel with Cylance. \n*Cylance will not issue you copies of products or software for the purposes of testing.\nScope:\nCylance’s participation in the HackerOne program is limited:\n* CylancePROTECT\n* CylanceV\n* Cylance INFINITYENGINE\n* Cylance Web Presence (Cylance.com)\nAwards\nCylance will reward reports according to their severity on a case-by-case basis as determined by our security team. We may pay more for unique, hard-to-find bugs; we may also pay less for bugs with complex prerequisites that lower risk of exploitation. \nDuplicate Reports\nCylance reserves the right to select which report is a duplicate. This is not based strictly on time of submission but also completeness of report, diligence in steps to verify, and proposed mitigation.  Our belief is the researcher who dedicates the most effort toward reporting should be rewarded; not just the first one to report.   Any report may be closed as duplicate if a better submission is received.\nEligibility\nTo qualify for a reward under this program, you must:\n* Be the first to discover a specific vulnerability.\n* The vulnerability exists in current supported versions of our products.\n* Provide verifiable proof the vulnerability exists. Send screen shot and a clear text description of the report along with steps to reproduce the vulnerability. Include attachments such as proof of concept code as necessary.\n* Disclose the vulnerability report responsibly to us. Public disclosure or disclosure to other third parties - including vulnerability brokers - before we addressed your report forfeit the reward.\n* Demonstrate care in reproducing the vulnerability. In particular, test only on accounts you own and do not impact the Cylance supporting services and infrastructure.\n* Cylance employees are ineligible from participating in external program. \nNote: posting details or communications about this report before it has been approved for disclosure or posting details that reflect badly on this program and the Cylance brand will result in forfeiture of any award and/or immediate removal from the program.\nNon-qualifying Vulnerabilities and Exclusions\nVulnerabilities released published that are less than 72 hours old\nSocial engineering attempts on Cylance personnel or our customers including phishing emails\nVulnerabilities based upon social engineering or misleading customers including phishing\nPhysical security attempts against Cylance property or Data Centers\nDenial of Service attacks\nAttempts to access our offices or data centers\nVulnerabilities in a vendor we integrate with or 3rd party software used in our products.\nUse of automated tools that could generate significant traffic and possibly impair the functioning of our products\nAcquisitions within 6 months of public notice\nVulnerabilities in obsolete (EOLed) versions of our products\nMissing additional security controls, such as HSTS or CSP headers.\nLogin/Logout CSRF.\nReports of insecure SSL/TLS ciphers (unless you have a working proof of concept)\nCookie flags (for non-sensitive cookies).\nBrute-force / Rate-limiting / Velocity throttling.\nVulnerabilities only affecting users of outdated or un-patched browsers and platforms.\nDenial-of-service attacks.\nContent spoofing / text injection.\nPresence of autocomplete attribute on web forms.\nClickJacking / TabNabbing attacks\nE-Mail spoofing\nXSS Errors\nWeb content in our robots.txt file.\nFindings within /_hcms/protected/auth\nLegal\nCylance reserves the right to cancel or modify this program at any time.  All engagements will be honored to the conditions in existence at the time of  verification of the issue.\nIf you’re a minor, on a sanctions list, or live in a country that’s on a sanctions list, we cannot give you a reward. \nKeep in mind that your citizenship and residency may affect whether you owe taxes on any reward you receive, and you alone are responsible for paying those taxes.\nRewards may be reduced or declined if there is evidence of abuse, such as data exfiltration or withholding reports in order to chain multiple issues together.\nAnd the ultimate decision over an award --whether to give one and in what amount-- is a decision that lies entirely within Cylance discretion.\nLast Updated: February 4, 2016\n",
		"handle": "cylance",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/006/699/a6999ba1eb85aeee3df306bb482d60ebc6d9b5bb_large.jpg?1446573114",
		"internet_bug_bounty": false
	},
	{
		"id": 8539,
		"url": "/paragonie",
		"name": "Paragon Initiative Enterprises",
		"meta": {
			"bug_count": 10,
			"accepting_submissions": true,
			"minimum_bounty": 0,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Cryptography and Application Security Consultants - We Produce Various Open Source Libraries",
		"stripped_policy": "An Invitation to Security Researchers\nEvery company says they take security \"very seriously.\" Rather than bore anyone with banal boilerplate, here are some quick answers followed by detailed elaboration. If you have any questions about our policies, please email them to scott@paragonie.com.\nWe Practice Full Disclosure\nAny reports (valid or invalid) will be disclosed fully as soon as possible. This is a good security practice that we encourage more programs to adopt.\nQuick Answers\nThere is no compulsion to disclose vulnerabilities privately, but we appreciate a head's up.\nsecurity@paragonie.com will get your reports to the right person. Our GPG  fingerprint, should you decide to encrypt your report, is 7F52 D5C6 1D12 55C7 3136  2E82 6B97 A1C2 8264 04DA.\nYES, we will reward security researchers who disclose vulnerabilities in our software.\nIn most cases, No Proof-of-Concept Required.\nPlease focus on the source repositories in our Github organization, not our website or any forks of other peoples' projects.\nUnless it results in code execution, we're not interested in bugs with our website.\nHow to Report a Security Bug to Paragon Initiative Enterprises\nThere is no compulsion to disclose privately.\nWe believe vulnerability disclosure style is a personal choice and enjoy working with a diverse community. We understand and appreciate the importance of Full Disclosure in the history and practice of security research.\nWe would like to know about high-severity bugs before they become public knowledge, so we can fix them in a timely manner, but we do not believe in threatening researchers or trying to enforce vulnerability embargoes.\nUltimately, if you discover a security-affecting vulnerability, what you do with it is your choice. We would like to work with people, and to celebrate and reward their skill, experience, and dedication. We appreciate being informed of our mistakes so we can learn from them and build a better product. Our goal is to empower the community.\nWhere to Send Security Vulnerabilities\nFeel free to submit them via HackerOne, or email them to our security team directly (security@paragonie.com). Also feel free to open a new issue on Github if you want to disclose publicly.\n```\n-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG\nmQENBFUgwRUBCADcIpqNwyYc5UmY/tpx1sF/rQ3knR1YNXYZThzFV+Gmqhp1fDH5\nqBs9foh1xwI6O7knWmQngnf/nBumI3x6xj7PuOdEZUh2FwCG/VWnglW8rKmoHzHA\nivjiu9SLnPIPAgHSHeh2XD7q3Ndm3nenbjAiRFNl2iXcwA2cTQp9Mmfw9vVcw0G0\nz1o0G3s8cC8ZS6flFySIervvfSRWj7A1acI5eE3+AH/qXJRdEJ+9J8OB65p1JMfk\n6+fWgOB1XZxMpz70S0rW6IX38WDSRhEK2fXyZJAJjyt+YGuzjZySNSoQR/V6vNYn\nsyrNPCJ2i5CgZQxAkyBBcr7koV9RIhPRzct/ABEBAAG0IVNlY3VyaXR5IDxzZWN1\ncml0eUBwYXJhZ29uaWUuY29tPokBOQQTAQIAIwUCVSDBFQIbAwcLCQgHAwIBBhUI\nAgkKCwQWAgMBAh4BAheAAAoJEGuXocKCZATat2YIAIoejNFEQ2c1iaOEtSuB7Pn/\nWLbsDsHNLDKOV+UnfaCjv/vL7D+5NMChFCi2frde/NQb2TsjqmIH+V+XbnJtlrXD\nVj7yvMVal+Jqjwj7v4eOEWcKVcFZk+9cfUgh7t92T2BMX58RpgZF0IQZ6Z1R3FfC\n9Ub4X6ykW+te1q0/4CoRycniwmlQi6iGSr99LQ5pfJq2Qlmz/luTZ0UX0h575T7d\ncp2T1sX/zFRk/fHeANWSksipdDBjAXR7NMnYZgw2HghEdFk/xRDY7K1NRWNZBf05\nWrMHmh6AIVJiWZvI175URxEe268hh+wThBhXQHMhFNJM1qPIuzb4WogxM3UUD7m5\nAQ0EVSDBFQEIALNkpzSuJsHAHh79sc0AYWztdUe2MzyofQbbOnOCpWZebYsC3EXU\n335fIg59k0m6f+O7GmEZzzIv5v0i99GS1R8CJm6FvhGqtH8ZqmOGbc71WdJSiNVE\n0kpQoJlVzRbig6ZyyjzrggbM1eh5OXOk5pw4+23FFEdw7JWU0HJS2o71r1hwp05Z\nvy21kcUEobz/WWQQyGS0Neo7PJn+9KS6wOxXul/UE0jct/5f7KLMdWMJ1VgniQmm\nhjvkHLPSICteqCI04RfcmMseW9gueHQXeUu1SNIvsWa2MhxjeBej3pDnrZWszKwy\ngF45GO9/v4tkIXNMy5J1AtOyRgQ3IUMqp8EAEQEAAYkBHwQYAQIACQUCVSDBFQIb\nDAAKCRBrl6HCgmQE2jnIB/4/xFz8InpM7eybnBOAir3uGcYfs3DOmaKn7qWVtGzv\nrKpQPYnVtlU2i6Z5UO4c4jDLT/8Xm1UDz3Lxvqt4xCaDwJvBZexU5BMK8l5DvOzH\n6o6P2L1UDu6BvmPXpVZz7/qUhOnyf8VQg/dAtYF4/ax19giNUpI5j5o5mX5w80Rx\nqSXV9NdSL4fdjeG1g/xXv2luhoV53T1bsycI3wjk/x5tV+M2KVhZBvvuOm/zhJje\noLWp0saaESkGXIXqurj6gZoujJvSvzl0n9F9VwqMEizDUfrXgtD1siQGhP0sVC6q\nha+F/SAEJ0jEquM4TfKWWU2S5V5vgPPpIQSYRnhQW4b1\n=xJPW\n-----END PGP PUBLIC KEY BLOCK-----\n```\nWe Will Reward Security Researchers\nIf you report a valid security-affecting bug, we will compensate you for the time spent finding the vulnerability and reward you for being a good neighbor.\nCompensation will typically fall under these two categories:\nCritical (Remote Code Execution, Catastrophic Cryptography Failure): $200+\nAnything else: $1 to $199\nInvalid bugs reports: Nothing\nNote that we reserve the right to be overwhelmingly generous on a case-by-case basis. ;)\nWhat does a \"valid\" bug mean?\nThere are two sides to this:\nSome have spammed projects with invalid bug reports hoping to collect bounties for pressing a button and running an automated analysis tool. This is not cool.\nThere is a potential for the developers of a project to declare all security bug reports as invalid to save money.\nOur team members have an established history of reporting vulnerabilities to large open source projects. We aren't in the business of ripping people off. When in doubt, our policy is to err on the side of generosity.\nScope\nWe're only interested in the source repositories in the ParagonIE (https://github.com/paragonie) organization on Github that have at least seen a version 1.0.0 stable release, not any repositories we forked (which we usually only do when fixing a security vulnerability in the upstream repository). We're not interest in third-party integration settings (i.e. Dockerfiles or .travis.yml).\nWe're not interested in trivial problems with our website (e.g. \"missing SPF headers\").\nBugs that require a specific user agent (i.e. they only affect Internet Explorer), browser extension, ActiveX plugin, etc. will be promptly fixed, should a mitigation exist, but we are not going to pay a bounty for a bug introduced by software we don't control.\nPlease do not submit any of the following:\nAny non-critical security concerns with our domain name and/or website\nVery minor security concerns with alpha software (anything for which the latest release is not at least 1.0.0)\nNo Proof-of-Concept Required\nWe might ask for one if we feel we do not understand some of the details pertaining to a specific vulnerability. We certainly appreciate them if you include them in your report, but we believe the burden lies with the developer to prove their software is secure rather than with the researcher to prove that it isn't.\nIn our experience, most bugs are simpler to fix than they are to exploit.\n",
		"handle": "paragonie",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/008/539/4ec2c6d752e1004e4fe60684360f471e769e7905_large.?1453010804",
		"internet_bug_bounty": false
	},
	{
		"id": 264,
		"url": "/gitlab",
		"name": "GitLab",
		"meta": {
			"bug_count": 50,
			"accepting_submissions": true
		},
		"about": "Open source software to collaborate on code",
		"stripped_policy": "GitLab is committed to working with security experts across the globe to stay up to date with the latest security techniques. Feel free to inspect our source code (https://gitlab.com/gitlab-org/gitlab-ce/tree/master). If you have discovered a security issue that you believe we should know about, we'd welcome working with you. Please let us know about it and we'll make every effort to quickly correct the issue. If you'd like to get additional attention to a report or feel we can improve with report handling please let us know at security@gitlab.com.\nIn scope\nYour own GitLab installation (https://about.gitlab.com/installation/)\nSQL injection\nRemote code execution\nCross-site scripting\nCross-site request forgery\nDirectory Traversal\nInformation Disclosure\nPrivilege escalation\nOther things that would obviously leave customer data vulnerable\nOut of scope\nAutomated scanning of any kind\nGitLab.com production services (https://*.gitlab.com)\nStatic website (https://about.gitlab.com)\nGitLab sites of third parties (marketing services, third-party mail services, etc.)\nPhysical attacks\nSocial engineering\nEmployee computer compromise\nMissing Security Headers (eg. HSTS, CSP)\nMissing Secure Flags on Cookies\nSSL issues (weak ciphers/key-size/BEAST/CRIME)\nCSRF without any security impact\nUser Enumeration\nRate Limiting (unless it constitutes a significant risk)\nEmail sending checks\nTesting and Proof-of-Concept\nPlease do not conduct testing against GitLab production services and do not use these services\nto develop Proof-of-Concept code for submitting reports. Screen captures, logs, and videos \nshowing vulnerabilities against your own GitLab installation are encouraged.\nTHANKS\nWe believe in recognizing the work of others. If your work helps us improve the security of our service, we'd be happy to acknowledge your contribution in our Hall of Fame (https://hackerone.com/gitlab/thanks).\n",
		"handle": "gitlab",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/264/233333576b8d0d63bb5bcde0d1caa228970da8db_large.png?1454722206",
		"internet_bug_bounty": false
	},
	{
		"id": 2943,
		"url": "/zomato",
		"name": "Zomato",
		"meta": {
			"bug_count": 136,
			"accepting_submissions": true
		},
		"about": "The fastest way to search for great places to eat at and order from around you. Serving 23 countries worldwide.",
		"stripped_policy": "We take security seriously at Zomato, and we’re committed to protecting our community. If you are a security researcher or expert, and believe you’ve identified security-related issues with Zomato’s website or apps, we would appreciate you disclosing it to us responsibly. \nOur team is committed to addressing all security issues in a responsible and timely manner, and we ask the security community to give us the opportunity to do so before disclosing them publicly. Please submit a detailed description of the issue to us, along with the steps to reproduce it. We trust the security community to make every effort to protect our users’ data and privacy. \nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nScope\nThe scope of issues is limited to technical vulnerabilities in the Zomato website or mobile apps. Please do not attempt to compromise the safety or privacy of our users (so please use test accounts), or the availability of Zomato through DoS attacks or spam. We also request you not to use vulnerability testing tools that generate a significant volume of traffic. \nBounty Program\nWe do not currently have a monetary bug bounty programme, but any report that results in a change will at minimum receive Hall of Fame recognition. We would also be more than happy to provide a certificate of acknowledgement. \nNon-qualifying vulnerabilities\nAlthough we review every reported issue on a case-by-case basis, some of them may not qualify depending on their impact. Here are some common low-risk issues that typically do not qualify:\nAttacks requiring physical access to a user's device\nForms missing CSRF tokens (we require evidence of actual CSRF vulnerability)\nLogin/logout CSRF\nPassword and account recovery policies, such as reset link expiration or password complexity\nInvalid or missing SPF (Sender Policy Framework) records\nContent spoofing / text injection\nIssues related to software or protocols not under Zomato's control\nReports of spam\nBypass of URL malware detection\nVulnerabilities only affecting users of outdated or unpatched browsers and platforms\nAny physical attempts against Zomato property or data centers\nIssues without clearly identified security impact, such as clickjacking on a static website, missing security headers, or descriptive error messages\nThank you for helping keep Zomato safe for the community!\n",
		"handle": "zomato",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/002/943/0700125dd0d48082e6a7f8c542852c4e70f3aea7_large.png?1464410189",
		"internet_bug_bounty": false
	},
	{
		"id": 2874,
		"url": "/vulnerscom",
		"name": "vulners.com",
		"meta": {
			"bug_count": 12,
			"accepting_submissions": true
		},
		"about": "Constantly updatable vulnerability database",
		"stripped_policy": "Hello, researchers!\nNow you are reading vulners.com bug bounty program description...it's quite good!\nMost of us don't like to do that :)\nSo, what we have in the scope:\nhttps://vulners.com website\nhttps://telegram.me/vulnersBot Telegram Bot \nWhat to search? Anything you can.\nAny money for bugs? Sorry, no. vulners.com is freeware project, so we don't have any funds :) \nPublic disclosure? Sure!\nOur technology stack is:\nPython 3.5\nDjango latest version\nElasticsearch 2.*\nMongoDB 3.*\nUWSGI\nNginx\nMemcached\nSo please, forget about sqlmap and other sql-injection oriented stuff. It's useless.\nActually, that's all.\nLet's make this world little bit more secure together :)\n",
		"handle": "vulnerscom",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/002/874/c57d0baf105af476a80f52e196a7222f0063451d_large.png?1437330331",
		"internet_bug_bounty": false
	},
	{
		"id": 7205,
		"url": "/gm",
		"name": "General Motors",
		"meta": {
			"bug_count": 415,
			"accepting_submissions": true
		},
		"about": "",
		"stripped_policy": "Committed to Coordination\nIf you have information related to security vulnerabilities of General Motors products and services, we want to hear from you. Please submit a report in accordance with the guidelines below. \nWe value the positive impact of your work and thank you in advance for your contribution.\nGuidelines\nGM agrees to not pursue claims against researchers related to the disclosures submitted through this website who:\n+ do not cause harm to GM, our customers, or others;\n+ provide a detailed summary of the vulnerability, including the target, steps, tools, and artifacts used during discovery (the detailed summary will allow us to reproduce the vulnerability);\n+ do not compromise the privacy or safety of our customers and the operation of our services;\n+ do not violate any criminal law;\n+ do not violate any other law (other than those that would result only in claims by GM), or disrupt or compromise any data or vehicle that is not their own;\n+ publicly disclose vulnerability details only after GM confirms completed remediation of the vulnerability and not publicly disclose vulnerability details if there is no completion date or completion cannot be ascertained;\n+ confirm that they are not currently located in or otherwise ordinarily resident in Cuba, Iran, North Korea, Sudan, Syria or Crimea; and\n+ confirm that they are not on the U.S. Department of the Treasury’s Specially Designated Nationals List.\nOut of Scope\n Reports from automated tools or scans\n Issues without clearly identified security impact (such as clickjacking on a static website), missing security headers, or descriptive error messages\n Missing best practices, information disclosures, use of a known-vulnerable libraries or descriptive / verbose / unique error pages (without substantive information indicating exploitability)\n Speculative reports about theoretical damage without concrete evidence or some substantive information indicating exploitability\n Forms missing CSRF tokens without evidence of the actual CSRF vulnerability\n Self-exploitation (e.g., cookie reuse)\n Reports of insecure SSL / TLS ciphers (unless you have a working proof of concept, and not just a report from a scanner such as SSL Labs)\n Our policies on presence/absence of SPF / DMARC records\n Password complexity requirements, account/e-mail enumeration, or any report that discusses how you can learn whether a given username or email address has a GM-related account\nMissing security-related HTTP headers which do not lead directly to a vulnerability\nSelf Cross-site Scripting vulnerabilities without evidence on how the vulnerability can be used to attack another user\nSocial engineering of GM employees or contractors\nAny physical attempt against GM property or data centers\nPresence of autocomplete attribute on web forms\nMissing secure cookie flags on non-sensitive cookies\nDenial of Service Attacks\nBanner identification issues (e.g., identifying what web server version is used)\nOpen ports which do not lead directly to a vulnerability\nOpen redirect vulnerabilities\nPublicly accessible login panels\nClickjacking\nContent spoofing / text injection\nBy clicking Submit Report, you consent to Your Information being transferred to and stored in the United States and acknowledge that you have read and accepted the Terms, Privacy Policy and Disclosure Guidelines presented to you when you created your account.\n",
		"handle": "gm",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/007/205/7c17456f3cc63dde849130260c8cb6a3b2534d69_large.jpg?1452001008",
		"internet_bug_bounty": false
	},
	{
		"id": 7135,
		"url": "/toytalk",
		"name": "ToyTalk",
		"meta": {
			"bug_count": 43,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "ToyTalk is an award-winning entertainment and technology company that combines art and science to create conversation with characters.",
		"stripped_policy": "While no technology is perfect, ToyTalk believes that working with skilled security researchers across the globe is crucial to identifying and addressing weaknesses. ToyTalk practices a Responsible Disclosure policy. If you believe you have found a security issue in our products or service, we encourage you to notify us. We will work closely with you to resolve the issue promptly.\nResponsible Disclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue.\nPlease include as many technical details as possible so that our security team can reproduce and confirm the issue in question.\nBug reports will be acknowledged within 7 days.\nOnce a security issue has been confirmed, our goal is to issue an update for the affected product(s) within 60 days.  However, please provide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party. \nPosting details or conversations about a report before it has been approved for disclosure, especially for high-severity bugs, will result in immediate disqualification from the program.\nBounty Program\nTo show our appreciation of responsible security researchers, ToyTalk offers a monetary bounty for reports of qualifying security vulnerabilities. Reward amounts will vary based upon the severity of the reported vulnerability, and eligibility is at our sole discretion.\nEligibility Requirements\nOpen to anyone in the security community \nEmployees and contractors of ToyTalk, Marvell, and Mattel are currently ineligible to claim bounties but may submit bug reports\nRewards\nQualifying bugs will be rewarded based on severity.  Our minimum reward is $100 USD, and our maximum reward is $10,000 USD.  Rewards are only granted for new and previously unidentified vulnerabilities and are granted entirely at the discretion of ToyTalk.\nScope and Qualifying Vulnerabilities\nAny ToyTalk service or product that handles sensitive user data is intended to be in scope.  However, we cannot grant authorization to test services managed by third-party providers and, as such, they are specifically excluded from this program.  Examples include: blog.toytalk.com and support.toytalk.com.\nMattel websites and services are owned and operated by Mattel and are explicitly outside the scope of this bug bounty program.\nAny design or implementation issue that substantially affects the confidentiality or integrity of user data is likely to be in scope for the program. Common examples include:\n* Cross-site scripting\n* SQL injection\n* Authentication or authorization flaws\n* Server-side code execution bugs\n* Privilege escalation\nExclusions\nThe following conditions are out of scope for purposes of the bug bounty program:\n* User enumeration or brute forcing account passwords\n* Cross-site Request Forgery\n* Reports mentioning SSL/TLS or HTTPS best practices\n* Reports mentioning weaknesses in SSL/TLS ciphersuites\n* Reports mentioning SPF, DKIM, or DMARC policies\n* Missing cookie flags on non-sensitive cookies\n* Missing HTTP security headers\n* Distributed Denial of Service (DDoS) or other high-volume network attacks\n* Spamming\n* Manipulating or replacing components of any hardware based products\n* Any vulnerability obtained through the compromise of a ToyTalk employee or contractor account.  This type of activity will result in immediate and permanent disqualification from the program.\n* Any vulnerability found through automated tools, port scans, or other means of large automated exploitation.\n* Social engineering (including phishing) of ToyTalk staff or contractors\n* Any physical attacks against ToyTalk property or data centers\n* Any infringement of a third party’s intellectual property\n* Services that are not managed by ToyTalk\n* Mattel websites and services\nLegal Considerations\nDo not break the law\nWe cannot reward individuals on sanction lists or who are residing in countries on sanction lists\nAvoid privacy violations, destruction of data, and interruption or degradation of our service\nDo not do not access, use or disclose child personal information and do not violate applicable child privacy laws such as the Children’s Online Privacy Protection Act (COPPA)\nOnly interact with accounts and hardware products you own or with explicit permission of the account holder\nYou may not access, or download, personally identifiable information relating to any third party.\nThank you for helping keep ToyTalk and our users safe!\n",
		"handle": "toytalk",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/007/135/bffe02e7ce2143f9e56d950f97ab616f04090160_large.png?1445896416",
		"internet_bug_bounty": false
	},
	{
		"id": 443,
		"url": "/algolia",
		"name": "Algolia",
		"meta": {
			"bug_count": 109,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Hosted search API that delivers instant and relevant results from the first keystroke",
		"stripped_policy": "Algolia is committed to working with security experts across the globe to stay up to date with the latest security techniques. If you have discovered a security issue that you believe we should know about, we'd welcome working with you. Please let us know about it and we'll make every effort to quickly correct the issue.\nDO NOT use automated scanning tools\nScope\nWebsite related endpoints on www.algolia.com\nAPI related endpoints on *.algolia.net or *.algolianet.com\nBounty\nMinimum reward is $100 for security vulnerabilities. The reward depends on the vulnerability severity and will be paid via HackerOne only. Every researcher with accepted vulnerability will be mentioned on http://hackerone.com/algolia/thanks\nIssues without security impact are not eligible for a bounty, yet still welcomed and will be treated like any other report.\nEligibility\nYou must be the first reporter of the vulnerability.\nYou follow https://hackerone.com/disclosure-guidelines\nYou do not access data of other users and solely use your created accounts.\nYou may not publicly disclose the vulnerability prior to our resolution.\nYou are not an individual on, or residing in any country on, any U.S. sanctions lists.\nYou provide a working proof of concept that exploits the security issue\nExclusion\nLogin/Logout CSRF\nDDoS\nSocial engineering on customers or employees of Algolia\nSelf-XSS (we require evidence on how the XSS can be used to attack another Algolia user)\nMiss of rate limits\nReport from automated tools and scans\nVulnerabilities sending spam or unauthorised messages\nBugs in 3rd party software\nX-Frame-Options related\nCustomer's sites\nRelating to HSTS\nDNSSEC\nMissing security headers which do not lead directly to a vulnerability\nPhysical attack on the infrastructure\nTheoretical attacks\nBreaking of SSL/TLS trust\nCompromising of browser/device (ex. computer sharing, physical access to a user's device, ...)\nVulnerabilities only affecting users of outdated or unpatched browsers and platforms\nPassword and account recovery policies, such as reset link expiration or password complexity\nVulnerabilities without solution on our side (HEIST, ...)\n",
		"handle": "algolia",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/443/798394910cd2d0a8894d19cb4965eb7a7b932820_large.jpg?1438702691",
		"internet_bug_bounty": false
	},
	{
		"id": 2706,
		"url": "/binary",
		"name": "Binary.com",
		"meta": {
			"bug_count": 66,
			"accepting_submissions": true,
			"minimum_bounty": 25,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Binary.com is the leading binary options website, founded in 1999.",
		"stripped_policy": "PLEASE STICK TO THE DOMAINS AND SUB-DOMAINS THAT ARE LISTED IN THE SCOPE TO AVOID NEGATIVE POINTS\nNo technology is perfect, and Binary.com believes that working with skilled security researchers across the globe is crucial in identifying weaknesses in any technology. If you believe you've found a security issue in our product or service, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nIf you inadvertently cause a privacy violation or disruption (such as accessing account data, service configurations, or other confidential information) while investigating an issue, be sure to disclose this in your report.\nDO NOT try to over exploit the bug and access internal data for further vulnerabilities. We will determine the severity and reward accordingly.\nBounty Program\nTo show our appreciation of responsible security researchers, Binary.com offers a monetary bounty for reports of qualifying security vulnerabilities. Reward amounts will vary based upon the severity of the reported vulnerability, and eligibility is at our sole discretion. As a general ball-park:\nVery low risk - (These are non-security issues which we would still like to fix) - $10-$25 \nThis may include UI bugs, functional bugs etc. \nLow risk –(These include low/negligible security impact bugs ) $25-100\nThis may include Self XSS , Security policies ,  Best practices etc. \nMedium risk - e.g. Reflected or Persistent Cross Site Scripting / Cross-Site Request Forgery: $100-200\nHigh risk - e.g. Authentication Bypass / SQL Injection / XXE / Remote Code Execution: $200-1,000\nBounties will only be paid if we make a code/system change in response to the report and to the very first reporter. Sometime if the report quality is of high standard and the security issue is impressive we may even give out bounties for duplicate reports.\nExclusions\nWhile researching, we'd like to ask you to refrain from:\n* Denial of service\n* Spamming\n* Social engineering (including phishing) of Binary.com staff or contractors\n* Any physical attempts against Binary.com property or data centers\nNOTE:-\nIt is strictly forbidden to use fully automated scanners on our live environments. You are allowed to use reverse proxy tools like burp suit/zap proxy etc. but just for manual testing. DO NOT automate the tools on our servers. We can clearly make out if the reports are copy pasted from automated scanners . This would certainly result into direct  BAN.  \nScope\nThe following issues are also out-of-scope:\n• Any reports related to HTTP headers (including clickjacking , HSTS etc) in these domains:\n-developers.binary.com, \n-static.binary.com, \n-blog.binary.com, \n-banners.binary.com,\n-tradingview.binary.com, \n-highcharts.binary.com \nAlso on any subdomain with static pages where these issues are not exploitable.\n• Presence/absence of SPF/DMARC records\n• CSRF on forms that are available to anonymous users (e.g. the contact form)\n• Login and logout CSRF issues\n• Use of a known-vulnerable library (without evidence of exploitability)\n• Vulnerabilities affecting users of outdated browsers and platforms\n• Attacks requiring physical access to a user's device\n• Reports from automated tools or scanners (please refrain from doing this,  You will be banned  for this)\n• Presence of autocomplete attribute on web forms\n• Missing cookie flags on non-sensitive cookies\n• Disclosure of known public files or directories, (e.g. robots.txt)\n• Reports of insecure SSL/TLS ciphers (unless you have a working proof of concept, and not just a report from a scanner)\n• Social engineering of Binary employees or contractors\n• Any physical attempts against Binary property or data centers\nHOWEVER, though listed in the out-of-scope list, if you really feel that a bug will leave an impact on our platform, please come up with a convincing and working POC. If that convinces us to change our code (EVEN IF IT’S A MINOR BUG) we will reward you with a bounty. Even if we do not change our code, we will mark it as INFORMATIVE rather than NOT APPLICABLE  to avoid discouragement with negative hackerone points :)\nOpen-Source code\nPlease note that \nBinary.com's front-end code is open-sourced at \nhttps://github.com/binary-com/binary-static/, \ndevelopers.binary.com is open-sourced at\n https://github.com/binary-com/websockets, \nand other Binary.com-related code is open-sourced at\n https://github.com/binary-com/ \n- Please feel free to report any vulnerabilities found in these codes by submitting a pull-request in github. HIGHER bounties will be awarded to reports that include a pull-request with a suggested fix.\nThank you for helping keep Binary.com and our users safe!\n",
		"handle": "binary",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/002/706/40c8339aa57e9c988e624296bfc642df35036381_large.jpeg?1444051411",
		"internet_bug_bounty": false
	},
	{
		"id": 1660,
		"url": "/globaleaks",
		"name": "GlobaLeaks",
		"meta": {
			"bug_count": 8,
			"accepting_submissions": true
		},
		"about": "The first Open Source Whistleblowing Software Framework. Made by @HermesCenter",
		"stripped_policy": "Anonymous whistleblowing can be easy and secure. Unfortunately, no technology is perfect and GlobaLeaks believes that working with skilled security researchers across the globe is crucial in identifying software weaknesses. \nWhile we do our best to provide a secure software by default, security vulnerabilities and new attack techniques must be taken into account. If you believe you've found a security issue in the Globaleaks framework (https://github.com/globaleaks/GlobaLeaks) codebase, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nScope\nPlease read it carefully!\n* We're looking for bugs affecting the confidentiality, integrity and availability of our users within the boundaries of the threat model (https://github.com/globaleaks/globaleaks/wiki#security). Examples of software vulnerabilities include, but are not limited to, XSS, CSRF, anonymity or privacy weaknesses, code execution, etc.\n* We're ONLY interested in software vulnerabilities affecting our open source codebase (https://github.com/globaleaks/GlobaLeaks)\n* While we do provide a demo site https://demo.globaleaks.org, we would recommend to perform your testing on a private computer. For more details on how to deploy your own globaleaks node, please refer to the Globaleaks Installation Guide (https://github.com/globaleaks/GlobaLeaks/wiki/Installation-guide)\nExclusions\nWhile researching, we'd like to ask you to refrain from:\n* Testing any public installations of GlobaLeaks. Security testing should be performed on your local deployment or our demo site only\n* Testing https://www.globaleaks.org, http://logioshermes.org/ or other assets related to Globaleaks. We're not looking for software vulnerabilities or misconfiguration in our institutional sites\n* Denial of service against the demo site\n* Spamming\n* Social engineering and phishing of GlobaLeaks staff\n* Any physical attempts against GlobaLeaks property\nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party\nAvoid public disclosure of previously unknown vulnerabilities. Many organizations rely on GlobaLeaks software, thus we don't want to put any running whistleblowing platform in jeopardy\nBounty Program\nWe're an open source project, backed by a non-profit association (http://logioshermes.org/about-mission/about-us/). As a result, we're not in the position to offer a monetary bounty for reports of qualifying security vulnerabilities. To show our appreciation, we will be happy to reward qualifying reports by sending an Hermes Center branded USB key with Tails (https://tails.boum.org/) pre-loaded. In special cases, your submission may qualify for our traditional Italian wine and grappa. Eligibility is at our sole discretion.\nThank you for helping keep GlobaLeaks safe!\n",
		"handle": "globaleaks",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/660/c3ce94264b34325dd5974b5affb3e1e6c3359cd6_large.jpg?1434407981",
		"internet_bug_bounty": false
	},
	{
		"id": 5013,
		"url": "/codeigniter",
		"name": "CodeIgniter",
		"meta": {
			"bug_count": 14,
			"accepting_submissions": true
		},
		"about": "CodeIgniter is a powerful PHP framework, built for developers who need a simple and elegant toolkit to create full-featured web applications.",
		"stripped_policy": "CodeIgniter security research\nCodeIgniter is a powerful open-source PHP framework with a very small footprint, built for developers who need a simple and elegant toolkit to create full-featured web applications.\nCodeIgniter recognizes the important contributions that the security community currently makes and can make in the future. We want to make sure that we find any security issues in our open-source project, so we can fix them as soon as possible! If you find vulnerabilities in our framework, we’ll be glad to hear about it here on HackerOne or in our security mailbox at security@codeigniter.com.\nIn scope\nWe are interested in all (security-related) bugs in our framework. The source code of CodeIgniter can be found on GitHub at https://github.com/bcit-ci/CodeIgniter.\nSecurity-related bugs about our website at codeigniter.com are also welcome, but our main priority is our framework since it’s used by thousands of developers around the world who depend on it. If you decide to research our website, please do not use automated scanners and read the \"out of scope\" section carefully!\nOut of scope\nThe CodeIgniter 2.x version tree is discontinued since October 31st, 2015.\nOur sub-domain forum.codeigniter.com is out of scope due to many reports. If you did find vulnerabilities in the forum software anyway, we recommend to contact MyBB at https://www.mybb.com/get-involved/security/. \nFurthermore, we are aware of certain missing HTTP headers regarding security and caching. As well as missing features or settings regarding mail like SPF, DMARC and DKIM. Reports about this (even on in-scope domains) will be closed.\nReporting\nA good report consists of:\na detailed explanation of the bug or vulnerability and the security risk and impact;\nall relevant information about the used components e.g. classes, functions, parameters; \nin case of cross-site scripting, the used browser version;\n(optionally) a working proof-of-concept;\nRewards\nUnfortunately, we cannot offer any financial rewards, as CodeIgniter is a community-maintained project with practically no funding. But, we hope that public credit and the feeling of having done well may be gratifying. \nHelp our framework and score a “thanks” and new reputation points on HackerOne. If you find impressive vulnerabilities, we’d be happy to credit you in our changelog.\nRegards,\nThe CodeIgniter team\n",
		"handle": "codeigniter",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/005/013/bfb3feef5a8a80b668bbc06d963ebc7f69867f6a_large.jpg?1444329080",
		"internet_bug_bounty": false
	},
	{
		"id": 2450,
		"url": "/maximum",
		"name": "Maximum",
		"meta": {
			"bug_count": 98,
			"accepting_submissions": true
		},
		"about": "Maximum is a full-service agency specialised in employer branding and recruitment advertising.",
		"stripped_policy": "Optimizing safety when it comes to the ICT systems is a top priority for Maximum. However, as such systems remain vulnerable, possible loopholes and weaknesses cannot be eliminated. \nHence, we would love to hear from you if you have found a weakness in one of our ICT systems. We will handle the safety issues accordingly, and therefore we make use of the following policy: \nWhat we ask of you:\nTo provide enough information to reproduce the safety issue, ensuring that Maximum can solve the problem quickly. More often than not, the IP-address or the URL of the ICT system and a description of the shortcoming(s) will be enough. However, when it is a more complex problem, an elaborate description could be necessary. \nTo not share the information regarding the safety issue until it has been solved.\nTo act responsibly and accordingly by not executing more than necessary actions required for the identification of the safety issue. \nPlease do report:\nPersistent Cross-Site Scripting (XSS)\nCross-Site Request Forgery (CSRF/XSRF)\nBroken Authentication\nCircumvention of our framework's privacy and permission models\nRemote Code Execution\nPlease do not report:\nUsername dictionairy attack\nSelf-XSS\nMissing / loosely configured DNS SPF records\nSocial hacking\nPublicly accessible login pages for cms/admin area\nSecurity vulnerabilities in third-party applications (like Kerio) that are not patched in the latest version\nDenial of Service Vulnerabilities\nMissing HSTS header / Secure cookie flag (https on this site is not enabled in every part of the world)\nMissing DNSSEC (we're working it)\nPassword reset email capture\nAttacks requiring DNS takeover\nWebmail accessible over non-secure connection\nMissing CSP headers (we're working on it)\nSubresource Integrity (SRI) not implemented\nMissing Public Key Pinning headers\nMail relay server configuration issues\nWhatever you do, please avoid the following actions:\nSpreading or distributing malware. \nCopying, changing or deleting data in the system (an alternative would be making a directory listing of the system).\nChanging the system.\nRepeatedly acquiring access to the system or sharing the access with others. \nMaking use of “bruteforcing” the access to the system.\nMaking use of a denial-of-service or social engineering.\nWhat you can expect:\nWhen a shortcoming in maximum.nl is reported accordingly to the above stated terms and conditions, Maximum will not articulate any legal consequences to the notification. \nMaximum will process the report confidentially and no personal details without permission will be shared with third parties, unless this is a legal requirement. \nAfter consultation, Maximum can acknowledge you by publishing your name as the one who identified this particular safety issue.  \nWithin one working day, the system operator of maximum.nl will send you a confirmation of receipt.\nWithin three working days, the system operator of maximum.nl will send you an evaluation of the safety issue. This will include an estimation of the time that it will take to solve the problem. \nThe system operator of maximum.nl will keep you updated on the progress of solving the safety issue. \nThe system operator of maximum.nl will try to resolve the safety issue as soon as possible, within a maximum time period of 60 days. After consultation with Maximum, it can be decided if and how the resolved safety issue will be published. \nTo thank you, a reward will be offered by Maximum. This reward will vary depending on the seriousness of the issue and the quality of the report. \n",
		"handle": "maximum",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/002/450/d80520df11012e7f3030163c4e7fe01f04b675e3_large.png?1434704794",
		"internet_bug_bounty": false
	},
	{
		"id": 2367,
		"url": "/revive_adserver",
		"name": "Revive Adserver",
		"meta": {
			"bug_count": 26,
			"accepting_submissions": true
		},
		"about": "Revive Adserver is a free open source ad serving system",
		"stripped_policy": "Introduction to Revive Adserver\nRevive Adserver is a free open source ad serving system formerly known as OpenX Source. Revive Adserver and all of its predecessors have been around since 1998, and many developers have worked on the code since the start of the project. Unsafe code may have slipped in as a result.\nThere are thousands of known installations of Revive Adserver worldwide. Since ad servers typically interact with many internet users, they are an interesting target for people with bad intentions, for example to spread malicious code that is added to advertisements.\nBeing hacked is not the same as having found a vulnerability!\nVery often, what people believe to be security vulnerabilities, turn out to be cases of (unauthorized) access to an installation through password guessing, social engineering or (sadly) simply using extremely weak passwords, or other methods not related to the code at all.\nIf your own ad server installation has been compromised, do not report it here! This program is only for reporting security vulnerabilities you have discovered in our code.\nRead these important rules\nIMPORTANT: DO NOT TEST revive-adserver.com. Do not test an instance of Revive Adserver that you do not own. This includes any existing instance you might find anywhere on the web. If you report an issue against an instance you do not own, it will not be accepted. Instead, install your own instance of Revive Adserver. This will let you test the Revive Adserver software without disrupting others.\nIMPORTANT: SERVER CONFIGURATION ISSUES DO NOT QUALIFY. Do not report configuration issues with revive-adserver.com etc. For example: software versions, SPF headers, etc. These are outside of program scope. The goal of this program is to find vulnerabilities in the Revive Adserver software itself. For instructions on installing your own instance of Revive Adserver, see the Installation Guide (http://www.revive-adserver.com/support/installation/). Please make sure you study the Technical Requirements (http://www.revive-adserver.com/support/requirements/) first.\nReport issue only in relation to copies of the software you've downloaded from the Revive Adserver website (http://www.revive-adserver.com/download/). Please do not test a git clone or github tarball as it will contain files and tools used for testing and packaging that are not expected to be deployed on a production server.\nReport issues only in relation to the most recently released version of our software. If you've found an issue in an older version, it is possible that it has already been reported and fixed. Carefully study our Security Advisories (http://www.revive-adserver.com/security/) before reporting any issues. If you're using an older version of the software, please upgrade first (http://www.revive-adserver.com/support/upgrading/), then test again.\nWe receive many reports from researchers who do not read these rules. To prove that you've read and understood these rules, please include the word \"Cricetinae\" somewhere in the first paragraph of your report. If you do not, your report will be closed as invalid automatically, which may reflect on your reputation.\nRequirements\nTest on your own installation. We're open source, so grab a copy from our site (http://www.revive-adserver.com/download/) and install (http://www.revive-adserver.com/support/installation/) it on your own server.\nBe clear. We totally get that you're not paid to do this. Here's a coincidence, neither are we! There's no huge corporate benefactor behind Revive Adserver, so we're not in a position to spend our precious time on this planet to decipher your report. You spent the time finding the issue, so please spend an extra 2 minutes to spell out what you're able to do with it so we can easily understand the severity of the issue. Please provide specific and exact examples and steps to reproduce. Please consider if you can give us access to your installation if you think it might help us to study your report.\nBe responsible. We're here because we want to know vulnerabilities before the world does, so we have a chance to provide a solution in a reasonable time frame. We assume you're here for the same. Report issues directly to us here. Do not publicly disclose anything before we've been in touch with you.\nVulnerabilities in third-party plugins for Revive Adserver should not be reported here, you should contact the author of the code or product.\nLevels of Severity\nCritical: someone with no access is able to inject code/malware to be distributed by the delivery engine of a Revive Adserver instance. This includes getting unauthorized user interface access to the instance. This is a huge deal and we will be all over it.\nImportant: someone with no access can do something that might impact someone who does have access, but cannot distribute malware via the delivery engine.\nModerate: someone who already has a restricted UI access (i.e. not admin) can do something they shouldn't. Typically it's SQL injection or cross site scripting vulnerabilities but they require you already to have access to the ad management user interface. Being able to get a level of access greater than what you are supposed to have would likely graduate a vulnerability into a critical issue.\nMinor: something that's less than ideal, but can't be used to do anything nefarious today. Things that only impact the browsing experience of the attacker or that are unlikely/hard to be exploited very likely fall into this category.\nIf you've found any issue with our code that you consider to be a bug, but which has no security impact, please do not report it here! Instead, open an issue on our Github project (https://github.com/revive-adserver/revive-adserver/issues).\nBounty program\nThe Revive Adserver project is open source and, alas, has no budget for a proper bounty program.\nResponse\nWe will try to respond to your reports within 72 hours.\nWe will fix security issues within a reasonable timeline, based on the severity as determined after triage.\nWe've got lots of honor for those who submit issues related to our software, but no cash. And we truly believe in recognizing the work of others.\nFile your report\nNow that you've read the policy and instructions above, please go ahead and report the issue you discovered (https://hackerone.com/revive_adserver/reports/new).\nAcknowledgement\nLarge parts of the text above have been copied almost verbatim from Phabricator (https://hackerone.com/phabricator) and concrete5 (https://hackerone.com/concrete5), if you have extra time to give, those are great place to give it!\n",
		"handle": "revive_adserver",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/002/367/17123feca0c51da96ed1f2d254af08e699f2fc37_large.png?1434352688",
		"internet_bug_bounty": false
	},
	{
		"id": 638,
		"url": "/imgur",
		"name": "Imgur",
		"meta": {
			"bug_count": 107,
			"accepting_submissions": true
		},
		"about": "The most awesome images on the Internet.",
		"stripped_policy": "SIMPLE RULES\n  Do not make any information public until the issue has been resolved.\n  Make a good faith effort to avoid interruption or degradation of our services .\n  Do not access or modify data that does not belong to you - create a free account to test with.\n  Making many substantially similar reports will only be eligible for one bounty award and marked as duplicate. For example, the same vulnerability reported across multiple subdomains. Please consolidate these issues into a single report.\n  Please try to limit the number of times you follow up on a report. Making daily comments only adds to our workload and makes turnaround time longer for everyone.\n  This bounty program is only concerned with security-related bugs, please e-mail support@imgur.com for all other bugs.\nSCOPE\nWe are interested in hearing about any security flaw. This could include, but is not limited to:\n  Anything that leaks personal user data, e.g. emails, passwords,  content a user has set to private or deleted.\n  Accessing someone's account without their knowledge.\n  Bug exposing a way to preform an action on behalf of another user.\n  Changing a user's settings without their knowledge. \n  Changing values of any site wide data.\n  Programmatically deleting images that don't belong to you.\n  Cross-site scripting.\nREWARDS\nFor each resolved eligible vulnerability report, the first reporter will receive at Imgur’s discretion:\n*   Recognition on our Hall of Fame.\n*   Monetary compensation ranging from $50 to $5000, depending on severity and potential impact of the vulnerability.\nEXCLUSIONS\nThe following conditions are out of scope for the vulnerability disclosure program. Any of the activities below will result in disqualification from the program permanently.\n*   Public release of information before submission through Hackerone.\n*   Bugs coming from third party softwares in use by imgur. e.g. store.imgur.com and help.imgur.com\n*   Physical attacks against Imgur employees, offices, and data centers.\n*   Any vulnerability obtained through the compromise of a Imgur customer or employee accounts. If you need to test a vulnerability, please create a free account.\n*   Social engineering of Imgur employees, contractors, vendors, or service providers.\n*   Self-XSS without a vector for a third party attack.\n*   Knowingly posting, transmitting, uploading, linking to, or sending any malware.\n*   Pursuing vulnerabilities which send unsolicited bulk messages (spam) or unauthorized messages.\n*   Content injection vulnerabilities where the field injected always shows the result of a user's input.\n*   Attacks requiring physical access to a user's device.\n*   Tricking a user into manually performing a series of steps.\nPlease do not make reports for the following issues:\n*   Password policy.\n*   Brute force attacks on the /delete/ or /edit/ endpoints.\n*   Username enumeration and other similar enumeration reports.\n*   Sessions not being destroyed on password reset (a separate utility exists for this under the \"security\" tab)\n*   Imgur has global rate limiting that might not be apparent with low testing volume. Please refrain from reporting issues that require no rate limit to be in place.\n*   CSRF - we are aware of many parts of the site that are vulnerable to CSRF and are currently working on a site wide fix. After the fix goes out, we'll remove this exclusion.\n*   Open redirects. We currently are not addressing this issue, but hope to in the future. We will mark these as \"Informative\".\n*   SSL/TLS issues. We're planning an eventual large switchover but it's a ways off on the horizon.\n",
		"handle": "imgur",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/638/fee218463508b920adea1fde7ec1dc6178ee0b75_large.png?1416868794",
		"internet_bug_bounty": false
	},
	{
		"id": 3059,
		"url": "/owncloud",
		"name": "ownCloud",
		"meta": {
			"bug_count": 134,
			"accepting_submissions": true,
			"minimum_bounty": 50,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "ownCloud, Inc. is the company behind the ownCloud Project - the most downloaded open source project for data and file sync, share and view.",
		"stripped_policy": "We created the ownCloud Security Bug Bounty Program to reward security researchers for finding issues in the ownCloud Server, and in so doing help strengthen ownCloud Server for customers, users and the community.\nThis is not about our websites, owncloud.com or owncloud.org - security issues there do not earn bounties. Only bugs in the ownCloud product do. You can find a demo at demo.owncloud.org (https://demo.owncloud.org) or setup your own instance (preferred) as described below.\nRewards\nIf the bug is identified as meaningful and qualifies for the program, and the submitter has followed the Disclosure Policy, the bug bounty is paid out on the following schedule by bug severity:\n| Impact | Definition | Reward |\n|----------|--------------------------------------------------------------------------------------------------------------------------|-------------|\n| Critical | Giving the adversary complete control over the server. (RCE / SQL Injection / …) | $250-$500 |\n| Medium | Allowing the adversary to gain complete control over a single user session. (Stored XSS with CSP bypass / Critical CSRF / …) | $50 - $250 |\n| Low | Vulnerabilities that can only be exploited in very rare cases or have marginal impact. (High amount of unlikely user interaction / …) | $50 |\nThe determination of the severity of the bug is at the discretion of ownCloud and the ownCloud security team. All bounties will be paid using the HackerOne platform, a site that manages bug bounty payouts and security contacts for software vendors.\nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nOnly test for vulnerabilities on your own installation of ownCloud server, desktop or related mobile applications\nDo not publish information related to the vulnerability until ownCloud has made an announcement to the community\nIn case of duplicate reports we only reward the first reporter of the vulnerability. Public disclosure prior to resolution and without explicit confirmation by the ownCloud Security Team will result in disqualification for the bounty program.\nWe believe in transparency and will publicly disclose each applicable report.\nEligible ownCloud Components\nOnly ownCloud Server, the Enterprise Edition applications, the official ownCloud iOS and Android mobile apps and the Windows, Mac and Linux desktop clients are eligible for a bug bounty payout. ownCloud is not able to cover the entire server and mobile app spectrum in this security bug bounty program. We cannot offer a bounty for elements outside of those listed above. A more thorough list of the components eligible for the program is available below.\nownCloud Server\nThe latest 8.1, 8.2 and 9.0 release of ownCloud are eligible for bounties. Only covers components shipped with the ownCloud Server and the ownCloud Enterprise Edition. \nYou can download the source code of the free and open-source community version from https://owncloud.org/install/#instructions-server (do use the ZIP or tarballs!), everything except the following items is included within the scope:\nThe encryption app (while we are creating a threat model)\nProblems considering the SSL/TLS verification in the \"files_external\" application.\nNote that if you enable “apps” via the “apps” setting from another category than “Not enabled” they will be downloaded from the app store and are not shipped per default and thus do not qualify. However, any additional  code addition shipped within official Enterprise edition from ownCloud does qualify for this program.\nTo ensure that you are using the latest version use our daily builds:\nownCloud 8.1: https://download.owncloud.org/community/owncloud-daily-stable8.1.tar.bz2\nownCloud 8.2: https://download.owncloud.org/community/owncloud-daily-stable8.2.tar.bz2\nownCloud 9.0: https://download.owncloud.org/community/owncloud-daily-stable9.tar.bz2\nQualifying vulnerabilities\nBelow is a sample of vulnerabilities that generally qualify for the bug bounty program for the ownCloud Server and supported server applications. Each reported vulnerability is assessed on an individual basis, and this list may evolve over time as the project expands. The current list includes:\n- Cross-Site Scripting (XSS)\n- Cross-Site-Request-Forgery with valid security impact (CSRF)\n- Remote Code Execution (RCE)\n- SQL Injection\n- Unrestricted file access\n- Access to files of other users\n- XML External Entity Processing (XXE)\nNote that we consider any bug caused by already known and fixed PHP issues as a non-issue. This means that you should always test using the latest available PHP release (of the 5.5, 5.6 or 7.0 branch) running on mod_php.\nNon-Qualifying vulnerabilities\nBelow is a short list of vulnerabilities that generally do not qualify for the bug bounty program for the ownCloud Server and supported server applications. This is not a comprehensive list, merely a representative sample:\n- Vulnerabilities not exploitable within ownCloud Server or the Enterprise Edition of ownCloud without any third-party applications\n- Vulnerabilities relying on the existence of plugins such as Flash\n- Vulnerabilities that can only be triggered by administrators\n- Flaws affecting the users of out-of-date browsers and plugins\n- Self-XSS\n- Hosting malware/arbitrary content on an ownCloud instance\n- Source code disclosure\n- User enumeration\n- Sessions of user not expiring after password has changed\n- Bypass of malware detection\n- Brute forcing of login credentials or other sensitive information\n- Presence of autocomplete attribute on forms\n- Missing flags on non-sensitive cookies\n- Use of a known-vulnerable library without proof of exploitability\n- Issues caused by misconfiguration of the ownCloud instance (such as an exposed data directory)\n- Login and logout CSRF\n- Denial of Service / DoS\n- Open Redirectors\n- No password check after user changes email / display name / etc.\n- Server-Side Request Forgery (SSRF)\n- Browser may cache sensitive information\n- Issues that involve a malicious installed application on the device\n- Version enumeration\n- Weak password policy\n- Password reset token does not expire after password change\n- BREACH (we do recommend in our hardening guideline to disable HTTP compression)\n- CSRF token in GET parameter\n- CSRF without security impact (such as being able to force the victim to download a file)\n- Content Spoofing\n- Flooding users (such as with password reset mails)\n- Sensitive information in log or sessions\n- CSRF on publicly accessible functionalities\n- Bugs in the ownCloud appstore at apps.owncloud.com\nDesktop application\nThe release candidate of the latest ownCloud desktop application as available from https://owncloud.org/install/#install-clients is eligible for the ownCloud Security Bug Bounty Program.\nNote that the ownCloud server itself is considered a trusted endpoint in our threat model and an eligible vulnerability and needs to be triggered by an arbitrary attacker, rather than a malicious ownCloud instance.\nQualifying vulnerabilities\nInterception of HTTPS encrypted traffic without certificate warning\nArbitrary Code Execution\nSQL Injection\nNon-Qualifying vulnerabilities\nUse of a known-vulnerable library without proof of exploitability\nDenial of Service / DoS\nIssues that involve a malicious installed application on the device\niOS application\nThe latest ownCloud iOS application as available from the Apple AppStore (https://itunes.apple.com/en/app/owncloud/id543672169) is eligible for the ownCloud Security Bug Bounty Program.\nNote that the ownCloud server itself is considered a trusted endpoint in our threat model and an eligible vulnerability thus usually needs not to be triggered by a malicious ownCloud instance but by an arbitrary attacker.\nQualifying vulnerabilities\nInterception of HTTPS encrypted traffic without certificate warning\nArbitrary Code Execution\nSQL Injection\nOther applications can gain access to sensitive ownCloud data without user permission (i.e. credentials or files) \nNon-Qualifying vulnerabilities\nVulnerabilities requiring physical access to the device \nVulnerabilities requiring a jailbroken device\nDenial of Service / DoS\nUse of a known-vulnerable library without proof of exploitability\nAndroid application\nThe latest ownCloud Android application as available from the Play Store (https://play.google.com/store/apps/details?id=com.owncloud.android) is eligible for the ownCloud Security Bug Bounty Program.\nQualifying vulnerabilities\nInterception of HTTPS encrypted traffic without certificate warning\nArbitrary Code Execution\nSQL Injection\nOther applications can gain access to user credentials without user permissions\nNon-Qualifying vulnerabilities\nVulnerabilities requiring physical access to the device \nVulnerabilities requiring a jailbreak device\nTap-jacking and UI-redressing attacks that involve tricking the user into tapping a UI element\nIssues that require debugging access (ADB) to the device\nBugs that simply cause an app to crash\nUse of a known-vulnerable library without proof of exploitability\nOther Android application with access to external/internal storage gaining access to stored files/thumbnails/… (excluding credentials)\nInsecure storage of PIN\nFAQ\nQ: Why do you exclude the ownCloud websites and infrastructure?\nA: For the time being we want to focus our efforts on ownCloud Server instead of vulnerabilities within our website and infrastructure. However, if you find a security bug in our website or infrastructure we welcome any report, though we cannot offer a monetary incentive.\nQ: Why is this Security Bug Bounty Program excluding “Community Edition” apps?\nA: ownCloud Server is a platform at the core of all ownCloud installation, whether free or paid. This benefits everyone, including the ownCloud community, ownCloud customers and ownCloud. Inc. However, there are many apps that have been built for ownCloud that we do not know, have not inspected, do not maintain, and do not commercially support. For this reason, we cannot stand behind the quality of these apps or offer a bounty on these apps at this time. \nQ: Where can I get the Android or iOS app for free?\nA: You can compile it from the sources available from https://github.com/owncloud/android and https://github.com/owncloud/ios\nQ: How much time will it take you to fix a vulnerability?\nA: We have pledged to fix any vulnerability within 90 days after report. Usually we are able to have a patch within less than 30 days. We may however in case of more complicated vulnerabilities need some more time. \nQ: Do I qualify if I contributed the vulnerable code or am an employee of ownCloud?\nA: Neither contributions by employees of ownCloud nor contributions from persons that contributed the vulnerable code qualify for the bounty program.\nQ: Is there a limit to the number of bugs I can submit?\nA: There is no limitation. Please note that invalid submissions do decrease your overall rating on HackerOne. Additionally, if you report several issues with closely related root causes, we may choose to pay only one bounty.\nQ: Where should I report bugs without security implication or hardening / best practise guidance?\nA: Please report all non-security bugs as well as general hardening advice at https://github.com/owncloud/core. Rule of thumb: if it on it's own is not directly exploitable it is likely to be hardening.\n",
		"handle": "owncloud",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/003/059/7996780ae11a2390cbd369760e18f6a0f4884a02_large.png?1438786688",
		"internet_bug_bounty": false
	},
	{
		"id": 3067,
		"url": "/versioncake",
		"name": "Version Cake",
		"meta": {
			"bug_count": 0,
			"accepting_submissions": true
		},
		"about": "Version Cake is an open source project that allows you to easily version in Rails applications.",
		"stripped_policy": "Version Cake is a simple open source Ruby gem, but believes that working with skilled security researchers across the globe is crucial in identifying weaknesses in any technology. If you believe you've found a security issue, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nResponsible disclosure\nAn issue will be publicly disclosed in the changelog (https://github.com/bwillis/versioncake/blob/master/CHANGELOG.md) once a version is posted with the patch applied.\nBounties and rewards\nUnfortunately, we cannot offer any financial rewards right now, as this project is open-source without any revenue. We hope that public credit (https://hackerone.com/versioncake/thanks) and the feeling of having done good may be gratifying.\nThank you for helping keep Version Cake and our users safe!\n",
		"handle": "versioncake",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/003/067/ede11e9cf7db316a7a18b0cf0975cb62cbd40a5d_large.png?1438799629",
		"internet_bug_bounty": false
	},
	{
		"id": 1516,
		"url": "/coursera",
		"name": "Coursera",
		"meta": {
			"bug_count": 57,
			"accepting_submissions": true
		},
		"about": "We provide universal access to the world’s best education.",
		"stripped_policy": "Security and privacy are top priorities at Coursera. We believe that no technology is perfect and that working with skilled security researchers across the globe is crucial in identifying weaknesses in our technology. If you believe you've found a security bug in our service, we are happy to work with you to resolve the issue promptly and if your discovery leads to material improvements in our service, fairly reward you for your discovery.\nWe consider security issues to be issues when you can perform one or more of the following actions by exploiting a technical problem or misconfiguration on the Coursera platform:\n* Access data that you are otherwise not authorized to access normally as a learner (e.g. accessing other learners' grades or private forum posts).\n* Affects another learner outside of normal interactions on the Coursera platform (e.g. causing scripts to run on another user's browser, changing grades of another user, etc...)\n* Accessing Coursera's internal administrative control systems\nCoordinated Disclosure Rules\nPlease let us know as soon as possible upon discovery of a potential security issue, and we’ll make every effort to quickly correct the issue.\nProvide us a reasonable amount of time to fix the issue before publishing it elsewhere.\nRefrain from leaking, manipulating, or destroying any user data. Please only test against accounts you own yourself or with explicit permission of the account holder.\nPlease refrain from automated/scripted account creation.\nExclusions\nThe following activities are not part of the scope of this program:\nVulnerabilities on sites hosted by third-parties unless they lead to a vulnerability on the main website (defined as the domains www.coursera.org, class.coursera.org, accounts.coursera.org, and api.coursera.org) or our internal administrative tools.\nDenial of Service\nSpamming\nStandard user enumeration attacks\nSocial engineering our employees, contractors, or users\nAttempts to access our offices or data centers\nReports indicating a lack of rate-limiting on certain APIs\nReports solely indicating a lack of a possible security defense such as certificate pinning or two-factor authentication.\nReports indicating a lack of DMARC, DKIm or similar protection or identity verification for our email systems. Further posting of these reports will be closed as Spam.\nThanks\nWe believe in recognizing the work of others. If your work helps us improve the security of our service, we'd be happy to acknowledge your contribution (/coursera/thanks). Thank you for keeping Coursera safe!\n",
		"handle": "coursera",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/516/f32356897c5a1619e711cc41f5185d642ee63a68_large.png?1428959532",
		"internet_bug_bounty": false
	},
	{
		"id": 2738,
		"url": "/flox",
		"name": "Flox",
		"meta": {
			"bug_count": 16,
			"accepting_submissions": true,
			"minimum_bounty": 25,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "",
		"stripped_policy": "If you believe you have found a security vulnerability on Flox.io, we encourage you to let us know right away. We will investigate all legitimate reports and do our best to quickly fix the problem. Before reporting though, please review this page including our responsible disclosure policy, reward guidelines, and those things that should not be reported.\nCommunication\nFlox is a company primarily made up of software developers and engineers, many of whom have done penetration testing in a professional atmosphere previously. We understand the urgency, and desire for immediate response and resolution. We are a small team trying to do big things. We try our best to be communicative. Someone is reading through every issue, and will reply as soon as they are able.\nResponsible Disclosure Policy\nIf you give us reasonable time to respond to your report before making any information public, and make a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service during your research, we will not bring any lawsuit against you or ask law enforcement to investigate you.\nProgram Info\nTo show our appreciation for our security researchers, we offer a monetary bounty for certain qualifying security bugs. Here is how it works:\nEligibility\nTo qualify for a bounty, you must:\nAdhere to our Responsible Disclosure Policy (above)\nBe the first person to responsibly disclose the bug\nReport a bug that could compromise the integrity of user data, circumvent the privacy protections of user data, or enable access to a system within our infrastructure, such as:\nCross-Site Scripting (XSS)\nCross-Site Request Forgery (CSRF/XSRF)\nBroken Authentication\nCircumvention of our Platform/Privacy permission models\nRemote Code Execution\nPrivilege Escalation\nProvisioning Errors\nReport a bug in flox.io or one of the following qualifying projects \u0026amp; products:\nSwifter\nBuddiOS\nMake every effort to use a test account instead of a real account when investigating bugs (if you are unable to reproduce a bug with a test account, it is acceptable to use a real account, except for automated testing\nNot interact with other accounts without the consent of their owners\nNot reside in a country under any current U.S. Sanctions (e.g., North Korea, Libya, Cuba, etc.)\nBounties\nBounties are awarded at the discretion of our bug bounty team\nOur minimum reward is $25 USD\nThere is no maximum reward: each bug is awarded a bounty based on its severity and creativity\nOnly one bounty per security bug will be awarded\nWe only pay individuals\nAttributes of a Good Report\nDetailed steps in your message explaining how to reproduce the bug. This should include any links you clicked on, pages you visited, URLs, user IDs, etc. Images and video can be helpful if you also include written explanations.\nClear descriptions of any accounts used in your report and the relationships between them. Please do not use the same name on multiple accounts to avoid confusion.\nQuality before quantity. Many of our highest-paid reports had just a few lines of precise, clear explanations.\nIf you send a video, consider these tips:\nKeep it short by showing only the parts necessary to demonstrate the bug once. (Remove or redo mistakes that might happen while recording.)\nRecord at a resolution where text or URLs are readable (at least 480p; 1080p is usually not necessary.)\nProvide commentary or instructions in your messages or video description instead of typing on-screen during the video.\nSetting Flox.io to English while recording steps helps us quickly identify what features you use.\nIf a large amount of text appears in your video, please include a copy in your messages as well.\nKeep the video private either by uploading it as an attachment or posting it privately online (such as with a hidden link or password that you send to us.)\nIneligible Reports and False Positives\nUser enumeration. Many of the platforms we use (WordPress, Piwik, Gitlab) provide their own bounties, and while we will happily contribute upstream patches, that is unlikely to result in a bounty for you.\nDenial-of-service attacks. No, seriously; stop trying to take us out, please.\nSecurity issues in third-party apps or websites that integrate with Flox.io. These are not managed by Flox and do not qualify under our guidelines for security testing.\nOpen redirects. Any open redirects are likely intentional at this time.\nNote that public information also includes your username, vanity URLs, ID, name, current cover photo, gender, and anything you've shared publicly.\nProfile pictures available publicly. Your current profile picture is always considered public (regardless of size or resolution.)\nSpam or social engineering techniques.\nContent injection. Posting content on Flox.io is a core feature, and content injection (also \"content spoofing\" or \"HTML injection\") is ineligible unless you can clearly demonstrate a significant risk.\nSending messages to anyone on Flox.io.\nAccessing photos via raw image URLs from our CDN.\nExecuting scripts on sandboxed domains.\n",
		"handle": "flox",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/002/738/6ebc239771e6df1fff9b273023362e1ae10f9aec_large.png?1436286692",
		"internet_bug_bounty": false
	},
	{
		"id": 1782,
		"url": "/ok",
		"name": "ok.ru",
		"meta": {
			"bug_count": 127,
			"accepting_submissions": true,
			"minimum_bounty": 50,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Официальный аккаунт социальной сети OK.RU.",
		"stripped_policy": "Правила программы\nНа данный момент мы выплачиваем вознаграждения за сообщения об уязвимостях веб-приложений Одноклассников:\n  * основной версии портала (ok.ru);\n  * мобильной версии портала (m.ok.ru);\n  * внешних виджетов (connect.ok.ru);\n  * API (api.ok.ru).\nЕсли вы нашли уязвимость в других наших сервисах, мы также будем рады получить ваше сообщение и поблагодарить вас за это. Но решение о выплате денежного вознаграждения в таком случае будет приниматься в индивидуальном порядке и только для критичных проблем.\nИсключения из программы\nНа данный момент мы не рассматриваем баги про SSL и сообщения об открытых редиректах, если в последних нет дополнительных факторов риска для пользователей.\nПожелания к отчетам\nВ сообщение об уязвимости, пожалуйста, включайте сценарий воспроизведения или proof of concept. Автоматически сгенерированные отчеты без деталей воспроизведения мы рассматривать не будем.\nВыплата вознаграждений\nВознаграждение выплачивается первому исследователю, сообщившему о неизвестной ранее проблеме. \nВ выплате вознаграждения будет отказано в случае эксплуатации уязвимости на реальных пользователях или разглашении любых деталей без предварительного согласования с нами.\nProgram Rules\nWe are currently offering rewards for vulnerability reports regarding Odnoklassniki web applications:\n  * main portal (ok.ru);\n  * mobile portal (m.ok.ru);\n  * external widgets (connect.ok.ru);\n  * API (api.ok.ru).\nIf you have discovered a vulnerability in any other of our services, we would also appreciate your report, but the matter of a cash reward for such reports is reviewed individually and applies to critical vulnerabilities only.\nExceptions to the Program\nAt the moment we are not reviewing SSL and open redirect bugs unless they pose additional risks for our users.\nReport Requirements\nPlease include a problem reproduction scenario or a proof of concept into your report. Automatically generated reports with no reproduction details will not be reviewed.\nPayment of Rewards\nIf the reporter has exploited the vulnerability by targeting real users, or if any details about the vulnerability were disclosed by the reporter, they may be denied the reward.\n",
		"handle": "ok",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/782/9eb8a18530180f973199e8dd4a283ece4ac6c0f3_large.jpg?1432346547",
		"internet_bug_bounty": false
	},
	{
		"id": 2809,
		"url": "/keybase",
		"name": "Keybase",
		"meta": {
			"bug_count": 61,
			"accepting_submissions": true,
			"minimum_bounty": 50,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "",
		"stripped_policy": "No technology is perfect, and Keybase believes that working with skilled security researchers across the globe is crucial in identifying weaknesses in any technology. If you believe you've found a security issue in our product or service, we encourage you to notify us. We welcome working with you to resolve the issue promptly.\nDisclosure Policy\nLet us know as soon as possible upon discovery of a potential security issue, and we'll make every effort to quickly resolve the issue.\nProvide us a reasonable amount of time to resolve the issue before any disclosure to the public or a third-party.\nMake a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our service. Only interact with accounts you own or with explicit permission of the account holder.\nBounty Program\nTo show our appreciation of responsible security researchers, Keybase offers a monetary bounty for reports of qualifying security vulnerabilities. Reward amounts will vary based upon the severity of the reported vulnerability, and eligibility is at our sole discretion.\nThe Keybase API is documented at keybase.io/docs/api/1.0 (https://keybase.io/docs/api/1.0).\nKeybase code is located at github.com/keybase (https://github.com/keybase/).\nNon-Qualifying Vulnerabilities\nDepending on their impact, not all reported issues may qualify for a monetary reward. \nPlease refrain from accessing private information (so use test accounts), performing actions that may negatively affect Keybase users (spam, denial of service), or sending reports from automated tools without verifying them.\nThe following issues are outside the scope of our vulnerability rewards program (either ineligible or false positives):\nReports from automated tools or scans\nAttacks requiring physical access to a user's device\nPassword and account recovery policies, such as reset link expiration or password complexity\nMissing security headers which do not lead directly to a vulnerability\nClickjacking on static websites\nContent spoofing / text injection\nDenial of service attacks caused only by a large volume of requests\nUse of a known-vulnerable library (without evidence of exploitability)\nIssues related to software or protocols not under Keybase control\nReports of spam\nVulnerabilities affecting users of outdated or unpatched browsers and platforms\nSocial engineering of staff or contractors\nAny physical attempts against Keybase property or data centers\nThank you for helping keep Keybase and our users safe!\n",
		"handle": "keybase",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/002/809/c2f4a544856c0f7712d3d3d3200226c8bdcefd13_large.png?1436919073",
		"internet_bug_bounty": false
	},
	{
		"id": 1868,
		"url": "/gratipay",
		"name": "Gratipay",
		"meta": {
			"bug_count": 39,
			"accepting_submissions": true,
			"minimum_bounty": 1,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Gratitude? Gratipay! We help companies and others pay for open source.",
		"stripped_policy": "Guidelines\nWe ask that all researchers:\n  Make every effort to avoid privacy violations, degradation of user experience, disruption to production systems, and destruction of data during security testing;\n  Perform research only within the scope set out below;\n  Review our No Risk disclosures (http://inside.gratipay.com/appendices/disclosures) to avoid filing unwanted reports;\n  Use the identified communication channels to report vulnerability information to us;\n  Report vulnerabilities as soon as you discover them; and\n  Keep information about any vulnerabilities you’ve discovered confidential between yourself and Gratipay until we’ve had 90 days to resolve the issue.\nIf you follow these guidelines when reporting an issue to us, we commit to:\n  Not pursue or support any legal action related to your research;\n  Work with you to understand and resolve the issue quickly (including an initial confirmation of your report within 72 hours of submission).\nAdditionally, if you are the first to report the issue, and we make a code or configuration change based on the issue, we commit to:\n  Recognize your contribution on HackerOne;\n  Reward you with a bounty:\n$100 if you identified a severe risk.\n$40 if you identified a moderate risk.\n$10 if you identified a mild risk.\n$1 if you identified a theoretical risk.\nPlease note that, as an open organization (http://inside.gratipay.com/big-picture/welcome), our policy is to fully disclose (http://inside.gratipay.com/appendices/disclosures) all resolved, informative, and not applicable issues, in the interest of openness and transparency for our customers.\nWe take security seriously, and we're proud to be able to offer bounties through HackerOne. That said, we recognize that the amounts are low. The reason is that we are a small company with only a little revenue (https://gratipay.com/Gratipay/). We look forward to offering larger bounties as we grow. Thank you for your understanding, and please tell us in your report if you would prefer not to receive a bounty.\nScope\nhttps://gratipay.com (https://gratipay.com)\nhttps://grtp.co (https://grtp.co) (not in scope for clickjacking)\nany other software we publish (https://github.com/gratipay)\nWe target an \"A\" grade on SSLLabs for both grtp.co (https://www.ssllabs.com/ssltest/analyze.html?d=grtp.co) and gratipay.com (https://www.ssllabs.com/ssltest/analyze.html?d=gratipay.com), and consider it a theoretical risk if we drop below that.\nOut of Scope\nAny services hosted by 3rd party providers and services are excluded from scope.\nIn the interest of the safety of our users, staff, the Internet at large and you as a security researcher, the following test types are excluded from scope:\n  Findings from physical testing such as office access (e.g. open doors, tailgating)\n  Findings derived primarily from social engineering (e.g. phishing, vishing)\n  Findings from applications or systems not listed in the ‘Scope’ section\n  UI and UX bugs and spelling mistakes\n  Network level Denial of Service (DoS/DDoS) vulnerabilities\nThings we do not want to receive:\n  Personally identifiable information (PII)\n  Credit card holder data\n  Duplicates of reports we've already identified as No Risk (http://inside.gratipay.com/appendices/disclosures)\nHow to Report a Security Vulnerability\nIf you believe you’ve found a security vulnerability in one of our products or platforms, please send it to us on HackerOne (https://hackerone.com/gratipay/reports/new).\nPlease provide detailed reports with reproducible steps. If a report is not detailed enough to reproduce the issue, it will not be eligible for a bounty. We also ask you to cite references and not to copy/paste entire reports. Reports copied entirely or mostly from elsewhere will not be eligible for a bounty.\nWe especially appreciate reports containing the affected code from our GitHub repository (https://github.com/gratipay), and possibly even patches, and we encourage you to test our platform by setting up Gratipay locally (https://github.com/gratipay/gratipay.com#quick-start). That way you can test all sorts of payloads to your heart's content.\nEmail\nWe prefer that you file reports on HackerOne, but we also accept reports via email to security@gratipay.com. Please include the following details with your report:\n  Description of the location and potential impact of the vulnerability;\n  A detailed description of the steps required to reproduce the vulnerability (POC scripts, screenshots, and compressed screen captures are all helpful to us); and\n  Your name/handle and a link for recognition in our legacy Hall of Fame (https://gratipay.com/about/security/hall-of-fame) (if reporting via email and not willing to join HackerOne).\nTo encrypt your message, you may use our PGP key (https://gratipay.com/about/security/pgp.asc):\nsh\n$ curl https://gratipay.com/about/security/pgp.asc | gpg --import\ngpg: key 7A5F6B30: \"Gratipay Security \" imported\ngpg: Total number processed: 1\ngpg:               imported: 1\n$\n\nWe only use PGP to decrypt messages, never to encrypt messages or authenticate our identity. Instead, we'll create a ticket on HackerOne to track your report, which we'll invite you to join (see our internal policy document (http://inside.gratipay.com/howto/handle-security-issues) for more details). If you do not wish to join HackerOne, we can acknowledge you instead on our legacy Hall of Fame (https://gratipay.com/about/security/hall-of-fame).\nHistory\nHere is this program description's version history (https://github.com/gratipay/inside.gratipay.com/commits/master/www/appendices/security-program.md).\n",
		"handle": "gratipay",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/868/3912e0a4ceab8e6dd10a39495c9b94102e316838_large.jpg?1458214340",
		"internet_bug_bounty": false
	},
	{
		"id": 1575,
		"url": "/zopim",
		"name": "Zopim",
		"meta": {
			"bug_count": 83,
			"accepting_submissions": true,
			"minimum_bounty": 50,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Enabling real-time customer service for businesses around the world, a @Zendesk company. For server status, see http://status.zopim.com.",
		"stripped_policy": "BUG BOUNTY POLICY\nCapitalized terms used in this Bug Bounty Policy and not otherwise defined have the meaning ascribed to such terms in our Terms of Service (https://www.zopim.com/termsofservice).\nZopim aims to keep its Service safe for everyone, and data security is of utmost priority. If you are a security researcher and have discovered a security vulnerability in the Service, we appreciate your help in disclosing it to us privately and giving us an opportunity to fix it before publishing technical details.\nZopim will engage with security researchers when vulnerabilities are reported to us as described here. We will validate, respond, and fix vulnerabilities in support of our commitment to security and privacy. We won’t take legal action against, suspend, or terminate access to the Service of those who discover and report security vulnerabilities responsibly. Zopim reserves all of its legal rights in the event of any noncompliance.\nReporting\nShare the details of any suspected vulnerabilities with the Zendesk Security Team by filing a report (https://hackerone.com/zopim/reports/new). Please do not publicly disclose these details outside of this process without explicit permission. In reporting any suspected vulnerabilities, please include the following information:\nVulnerable URL - the endpoint where the vulnerability occurs;\nVulnerable Parameter - if applicable, the parameter where the vulnerability occurs;\nVulnerability Type - the type of the vulnerability;\nSteps to Reproduce - step-by-step information on how to reproduce the issue\nScreenshots or Video - a demonstration of the attack; and\nAttack Scenario - an example attack scenario may help demonstrate the risk and get your issue resolved faster.\nReports that carry an acceptable risk but demonstrate a valid security-related behavior will be closed as informative. Submissions that don’t present a security risk, are false positives, or are out of scope will be closed as N/A. (Please note that the scope is outlined below.) \nIdentical reports will be marked as “Duplicate[s]” of the original submission; the original report can be marked as (but not limited) to “Triaged”, “N/A”, or “Informative.”\nMore information on a proper submission (https://support.hackerone.com/hc/en-us/articles/205072249-What-does-a-good-report-look-like-), report states (https://support.hackerone.com/hc/en-us/articles/205624695), and acceptable reporting behavior (https://support.hackerone.com/hc/en-us/articles/208475476-What-are-examples-of-bad-behavior-), can be found on linked Hackerone’s articles.\nTesting Exclusion\nIn no event are you permitted to access, download or modify data residing in any other Account, or one that is not registered to you.\nYou are also prohibited from:\nExecuting or attempting to execute any Denial of Service attack.\nKnowingly posting, transmitting, uploading, linking to, sending or storing any Malicious Software.\nAttempting to social engineer support staff.\nTesting in a manner that would result in the sending of unsolicited or unauthorized junk mail, spam, pyramid schemes or other forms of duplicative or unsolicited messages.\nTesting in a manner that would degrade the operation of the Service.\nTesting or otherwise accessing or using the Service from any jurisdiction that is a Prohibited Jurisdiction.\nTesting third party applications or websites or services that integrate with or link to the Service.\nBounty Ineligible Issues\nThe following items are known issues or accepted risks where we will not reward you:\nBrute-force, / Rate-limiting, / Velocity throttling, and other denial of service based issues.\nClickjacking.\nContent spoofing issues without branding CSS.\nCookie flags.\nIssue where the fix only requires a text change.\nLogin/Logout CSRF\nMalicious attachments on file uploads or attachments.\nMissing additional security controls, such as HSTS or CSP headers\nMobile issues that require a Rooted or Jailbroken device.\nPassword recovery policies, such as reset link expiration or password complexity\nReflected File Download (this may be rewarded in the future, but is currently out of scope)\nSPF, DKIM, DMARC issues.\nXSS (or a behavior) where you can only attack yourself\nXSS on pages where admins are intentionally given full HTML editing capabilities, such as custom theme editing\nBounties\nWe are pleased to offer a bounty for vulnerability information that helps us protect our customers as a thanks to the security researchers who choose to participate in our bug bounty program. Zopim will decide the bounty amounts at our sole discretion, and all decisions are final.\nWe will only reward the first reporter of a valid vulnerability. Any duplicate reports will not be rewarded. \nYou are responsible for paying any taxes associated with the reward. Submissions from countries where we are prohibited by law from making payments, such as the US Sanction Lists (http://www.treasury.gov/resource-center/sanctions/Programs/Pages/Programs.aspx), are ineligible for rewards.\nAny submissions received prior to the launch of this bug bounty (April 27th, 2015) are also ineligible for rewards.\nOur Commitment\nIf you identify a verified security vulnerability in compliance with this Bug Bounty Policy, Zopim commits to:\nAcknowledge receipt of your vulnerability report in a timely manner;\nNotify you when the vulnerability is fixed; and\nPublicly thank you for your responsible disclosure and helping us keep our customers safe.\nScope\nYou may test only against a Zopim Account for which you are the Account Owner or an Agent authorized by the Account Owner to conduct such testing. The following Zopim applications are in-scope:\n*.zopim.com (https://www.zopim.com)\nZopim mobile applications on Android (https://www.zopim.com/android) and iOS (https://www.zopim.com/iphone)\nWe will reward you for the following types of vulnerabilities (except where noted otherwise in our Testing Exclusions and bounty ineligible section):\nRemote Command Execution (RCE)\nSQL Injection\nBroken Authentication\nBroken Session Management\nAccess Control Bypass\nCross-Site Scripting (XSS)\nCross-Site Request Forgery (CSRF)\nOpen URL Redirection\nDirectory Traversal\n",
		"handle": "zopim",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/575/6fa521704dddccd19a22832906ad86e3572377d0_large.png?1429834475",
		"internet_bug_bounty": false
	},
	{
		"id": 205,
		"url": "/zendesk",
		"name": "Zendesk",
		"meta": {
			"bug_count": 134,
			"accepting_submissions": true,
			"minimum_bounty": 50,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Zendesk is a leading cloud-based customer service software solution. Over 50,000 customer accounts use Zendesk to increase customer satisfaction.",
		"stripped_policy": "BUG BOUNTY POLICY\nCapitalized terms used in this Bug Bounty Policy and not otherwise defined have the meaning ascribed to such terms in our Terms of Service (https://www.zendesk.com/company/terms/).\nZendesk aims to keep its Service safe for everyone, and data security is of utmost priority. If you are a security researcher and have discovered a security vulnerability in the Service, we appreciate your help in disclosing it to us privately and giving us an opportunity to fix it before publishing technical details.\nZendesk will engage with security researchers when vulnerabilities are reported to us as described here. We will validate, respond, and fix vulnerabilities in support of our commitment to security and privacy. We won’t take legal action against, suspend, or terminate access to the Service of those who discover and report security vulnerabilities responsibly. Zendesk reserves all of its legal rights in the event of any noncompliance.\nReporting\nShare the details of any suspected vulnerabilities with the Zendesk Security Team by filing a report (https://hackerone.com/zendesk/reports/new). Please do not publicly disclose these details outside of this process without explicit permission. In reporting any suspected vulnerabilities, please include the following information:\nVulnerable URL - the endpoint where the vulnerability occurs;\nVulnerable Parameter - if applicable, the parameter where the vulnerability occurs;\nVulnerability Type - the type of the vulnerability;\nSteps to Reproduce - step-by-step information on how to reproduce the issue\nScreenshots or Video - a demonstration of the attack; and\nAttack Scenario - an example attack scenario may help demonstrate the risk and get your issue resolved faster.\nReports that carry an acceptable risk but demonstrate a valid security-related behavior will be closed as informative. Submissions that don’t present a security risk, are false positives, or are out of scope will be closed as N/A. (Please note that the scope is outlined below.) \nIdentical reports will be marked as “Duplicate[s]” of the original submission; the original report can be marked as (but not limited) to “Triaged”, “N/A”, or “Informative.”\nMore information on a proper submission (https://support.hackerone.com/hc/en-us/articles/205072249-What-does-a-good-report-look-like-), report states (https://support.hackerone.com/hc/en-us/articles/205624695), and acceptable reporting behavior (https://support.hackerone.com/hc/en-us/articles/208475476-What-are-examples-of-bad-behavior-), can be found on linked Hackerone’s articles.\nTesting Exclusion\nIn no event are you permitted to access, download or modify data residing in any other Account, or one that is not registered to you.\nYou are also prohibited from:\nExecuting or attempting to execute any Denial of Service attack.\nKnowingly posting, transmitting, uploading, linking to, sending or storing any Malicious Software.\nAttempting to social engineer support staff.\nTesting in a manner that would result in the sending of unsolicited or unauthorized junk mail, spam, pyramid schemes or other forms of duplicative or unsolicited messages.\nTesting in a manner that would degrade the operation of the Service.\nTesting or otherwise accessing or using the Service from any jurisdiction that is a Prohibited Jurisdiction.\nTesting third party applications or websites or services that integrate with or link to the Service.\nBounty Ineligible Issues\nThe following items are known issues or accepted risks where we will not reward you:\nBrute-force, / Rate-limiting, / Velocity throttling, and other denial of service based issues.\nClickjacking.\nContent spoofing issues without branding CSS.\nCookie flags.\nIssue where the fix only requires a text change.\nLogin/Logout CSRF\nMalicious attachments on file uploads or attachments.\nMissing additional security controls, such as HSTS or CSP headers\nMobile issues that require a Rooted or Jailbroken device.\nPassword recovery policies, such as reset link expiration or password complexity\nReflected File Download (this may be rewarded in the future, but is currently out of scope)\nSPF, DKIM, DMARC issues.\nXSS (or a behavior) where you can only attack yourself\nXSS on pages where admins are intentionally given full HTML editing capabilities, such as custom theme editing\nBounties\nWe are pleased to offer a bounty for vulnerability information that helps us protect our customers as a thanks to the security researchers who choose to participate in our bug bounty program. Zendesk will decide the bounty amounts at our sole discretion, and all decisions are final.\nWe will only reward the first reporter of a valid vulnerability. Any duplicate reports will not be rewarded. \nYou are responsible for paying any taxes associated with the reward. Submissions from countries where we are prohibited by law from making payments, such as the US Sanction Lists (http://www.treasury.gov/resource-center/sanctions/Programs/Pages/Programs.aspx), are ineligible for rewards.\nAny submissions received prior to the launch of this bug bounty (April 27th, 2015) are also ineligible for rewards.\nOur Commitment\nIf you identify a verified security vulnerability in compliance with this Bug Bounty Policy, Zendesk commits to:\nAcknowledge receipt of your vulnerability report in a timely manner;\nNotify you when the vulnerability is fixed; and\nPublicly thank you for your responsible disclosure and helping us keep our customers safe.\nScope\nYou may test only against a Zendesk Account for which you are the Account Owner or an Agent authorized by the Account Owner to conduct such testing. For example:\nh1-[your-zendesk-subdomain].zendesk.com\nAdditionally, the following Zendesk applications are in-scope:\nwww.zendesk.com (https://www.zendesk.com)\ndeveloper.zendesk.com (https://developer.zendesk.com)\napps.zendesk.com (https://apps.zendesk.com)\nZendesk mobile applications (https://www.zendesk.com/product/mobile/)\nZendesk Mobile SDK on iOS (https://developer.zendesk.com/embeddables/docs/ios/overview) and Android (https://developer.zendesk.com/embeddables/docs/android/overview)\nWe will reward you for the following types of vulnerabilities (except where noted otherwise in our Testing Exclusions and bounty ineligible section):\nRemote Command Execution (RCE)\nSQL Injection\nBroken Authentication\nBroken Session Management\nAccess Control Bypass\nCross-Site Scripting (XSS)\nCross-Site Request Forgery (CSRF)\nOpen URL Redirection\nDirectory Traversal\n",
		"handle": "zendesk",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/205/36a009409f3ae41049cd388fc151eb6d0e216d65_large.png?1400190746",
		"internet_bug_bounty": false
	},
	{
		"id": 2250,
		"url": "/libsass",
		"name": "LibSass",
		"meta": {
			"bug_count": 2,
			"accepting_submissions": true
		},
		"about": "LibSass is a C/C++ port of the Sass engine. The point is to be simple, fast, and easy to integrate.",
		"stripped_policy": "Sass (http://sass-lang.com/) was originally written in Ruby. Ruby's great, but people started having a couple of issues. First, we want everyone to enjoy Sass, no matter what language they use. Why restrict everyone to using Ruby? In addition, Ruby can be kind of slow. Lowering compile time for users is important. Enter LibSass.\nLibSass is a C/C++ port of the Sass engine. The point is to be simple, fast, and easy to integrate. Find out more about the project over at GitHub (https://github.com/sass/libsass).\nScope\nLibSass or any of its official language bindings. All these repositories are available on GitHub.\nLibSass (https://github.com/sass/libsass)\nSassC (https://github.com/sass/sassc)\nnode-sass (https://github.com/sass/node-sass)\nperl-libsass (https://github.com/sass/perl-libsass)\nResponsible disclosure\nAn issue will be publicly disclosed via each projects respective changelog once all the affected aforementioned libraries have new releases addressing said issue.\nBounties and rewards\nUnfortunately, we cannot offer any financial rewards right now, as this project is open-source without any revenue. We hope that public credit (/libsass/thanks) and the feeling of having done good may be gratifying.\n",
		"handle": "libsass",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/002/250/9b4c78926303a2e7a3df18a97ec8f9ff85bb9e4c_large.jpg?1433812399",
		"internet_bug_bounty": false
	},
	{
		"id": 1554,
		"url": "/marktplaats",
		"name": "Marktplaats",
		"meta": {
			"bug_count": 101,
			"accepting_submissions": true
		},
		"about": "Marktplaats is the most popular e-commerce site in the Netherlands. ",
		"stripped_policy": "Responsible Disclosure Program\nAt Marktplaats we take user safety serious and strive to ensure a safe experience when people are using our websites. When properly reported, we will quickly investigate all legitimate reports of security vulnerabilities and address identified problems. We have adopted a responsible disclosure policy to encourage reporting of security vulnerabilities.\nWe recognize the important role that security researchers and our community play in keeping Marktplaats secure and our customers safe. In the event you discover a security vulnerability in a Marktplaats site, mobile app or product, please notify us according to our responsible disclosure guidelines below.\nThe guidelines for responsible disclosure:\n* Share the security issue with us without making it public on social media, message boards, mailing lists and other forums.\n* Allow us a reasonable amount of time (at least 30 days from where we receive your disclosure under this process) to respond to the issue before disclosing it to others.\n* Provide full details of the security issue, including Proof-of-Concept URL, the details of the system where the tests were conducted and detailed reproduction steps.\nDo not engage in security research that involves:\n* Potential or actual damage to users, systems, data or applications.\n* Use of an exploit\n   * To view other users’ data;\n   * That involves the corruption of data; and/or\n   * That conducts any activities that may disrupt our services.\n* The use of port scans on our network blocks or executing DDoS attacks.\nIf you give us reasonable time to respond to your report before making any information public and make a good faith effort to avoid privacy violations, destruction of data and interruption or degradation of our service during your research, we will not bring any lawsuit against you or ask law enforcement to investigate you, unless we have reason to believe that you do not act in good faith.\nBounty security vulnerability\nTo show our appreciation for our security researchers and community, we offer a monetary bounty for certain qualifying security vulnerabilities. Here's how it works:\nEligibility for the Bounty\nTo qualify for a bounty, you must:\n* Adhere to our responsible disclosure terms \u0026amp; conditions. \n* Give us a reasonable amount of time (at least 30 days from when we receive your disclosure under this process) to respond to your report before making any information public and make a good faith effort to avoid privacy violations, destruction of data and interruption or degradation of our service during your research.\n* Report a vulnerability that could compromise the integrity and/or confidentiality of Marktplaats user data. Reports related to the availability aspects, such as DDoS attacks or Spam e-mail productions, are not awarded with a bounty.\n* Be the first person to report the vulnerability. \n* Include the following sections in your report:\n  * Description of how to exploit the vulnerability; \n  * Steps to reproduce the vulnerability; and\n  * Description of the security risk of exploiting the vulnerability and the impact to user data. \n* Act in Good faith.\nOur security team will assess each vulnerability report to determine if it qualifies for a bounty.\nBounty\n* A typical bounty will vary from SWAG (goodies, gifts, presents) up to a bug-bounty of €350,-. (based on the probability and the damage impact of exploitation). \n* We may increase the bounty for specific security vulnerabilities reported, but the final amount is determined at Marktplaats' discretion.\n* Only one bounty per security vulnerability report will be awarded.\nExclusions\nThe following security vulnerabilities are NOT eligible for a bounty:\n* Security vulnerabilities in third-party applications, such as bugs or other security vulnerabilities in the WordPress Software used in our Website.\n* Security vulnerabilities in third-party websites that integrate with a Marktplaats website.\n* Vulnerabilities that can be exploited by an attacker to hack him/herself only, such as injecting malicious codes in the authentication cookies. \n* Security vulnerabilities requiring physical access to a user's device. \n* Denial of Service Vulnerabilities.\n* Spam or Social Engineering techniques.\n* Brute force password cracking.\n* Information leakage on the server.\n* Security improvement and best practice issues.\n* Issues related to the update of software patches, where the duration between the report and the released patch is less than three months. \n* Abuse of website functionalities.\nPlease note that even if a security vulnerability is not eligible for a bounty, we might decide to resolve it and in this case we may – at our sole discretion – send an appreciation token to the reporter. \nWhat can you expect from us?\n* You can expect us to respond to your message within 1 week.\n* We will keep you informed of the progress while resolving the issue.\n* We will handle your report with strict confidentiality and in accordance with these responsible disclosure terms \u0026amp; conditions.\nReport security vulnerability\nIf you believe you have discovered a security vulnerability in a Marktplaats site, mobile app or product, please report it with a thorough explanation of the vulnerability and comply with the format stated in the Eligibility for Bounty section. Please select the security issue of the report from one of the following topics:\n* Stored Cross-Site Scripting\n* Reflected Cross-site Scripting\n* XML Injection\n* SQL Injection\n* Bypassing Authorization Mechanisms \n* Cross-Site Request Forgery\n* Open redirect vulnerability\n* Clickjacking\n* Information leakages on server type\n* HTTPS weakness\n* Authentication Strengthening (Password and token)\n* Other\nIf users/individuals do not adhere to the above mentioned policies, we reserve the right to take appropriate (legal) measures and/or get law enforcement involved.\nThese Marktplaats Security Vulnerability Policies are governed by Dutch law.\nCreative Commons License\nThis work is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License (http://creativecommons.org/licenses/by-sa/3.0/deed.en_US). \nIf you are attempting to report spam or abuse please send an e-mail to:\nSpam - spam@marktplaats.nl\nAbuse - abuse@marktplaats.nl\nFor other notifications or questions please use our contact form (http://help.marktplaats.nl/).\n",
		"handle": "marktplaats",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/554/1c3cb32a7d5dcdc48db9f403a8e3ef8cdffc54af_large.png?1461137643",
		"internet_bug_bounty": false
	},
	{
		"id": 1737,
		"url": "/maplogin",
		"name": "MapLogin",
		"meta": {
			"bug_count": 22,
			"accepting_submissions": true
		},
		"about": "A novel map-based user authentication method",
		"stripped_policy": "Guidelines\nThe MapLogin Bug Bounty Program applies to security vulnerabilities found within the MapLogin public-facing online environment at https:///\nBugs which directly or indirectly affect the confidentiality or integrity of user data are prime candidates for reward. Some characteristics that are considered in \n\"qualifying\" bugs include those that:\n- Directly affect the confidentiality or integrity of user data\n- Compromise the integrity of the system\n- Enable unauthorized access to significant data or resources\n- Interfere with or bypass security controls or mechanisms\n- Are exploitable (i.e. not purely theoretical)\n- Can be launched remotely\nExclusions\nThere are categories of bugs which are definitively excluded from reward in the \nMapLogin Bug Bounty Program:\n- Social engineering and physical attacks\n- Denial of service attacks \n- Violation of licenses or other restrictions applicable to any vendor's product\n- Security bugs in third-party applications (e.g. java, plugins). Notice such bugs may be valid for reward by their respective origin.\nThanks \nWe believe in recognizing the work of others. \nIf your work helps us improve the security of our service, we'd be happy to acknowledge your contribution (/maplogin/thanks).\n",
		"handle": "maplogin",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/737/ba38ab1d9445ec31077db1ba74c6240326fbcab4_large.png?1431986710",
		"internet_bug_bounty": false
	},
	{
		"id": 1254,
		"url": "/vkcom",
		"name": "VK.com",
		"meta": {
			"bug_count": 351,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "VK is the largest European social network with more than a 100 million active users.",
		"stripped_policy": "For English description, see below.\nВ связи с большим количеством репортов, мы долго их рассматриваем.\nПрограмма поиска уязвимостей VK.com\nПрограмма ограничена поиском технических уязвимостей в сервисах компании VK.com и в ее официальных мобильных приложениях (Android, iPhone/iPad, WinPhone). По вопросам, не относящимся к данной программе, большая просьба писать в нашу службу поддержки: https://vk.com/support\nСервисы VK, участвующие в проекте:\n*.vk.com\nlogin.vk.com\n*.vk.me\n*.vk-cdn.net\n*.vkmessenger.com\n*.vkontakte.ru\n*.vk.cc\nОфициальные мобильные приложения VK\nНе принимаем в качестве уязвимостей:\nСообщения от сканеров безопасности и других автоматических систем.\nСообщения об уязвимости, основанные на версиях ПО/протокола, без указания реального применения.\nСообщения об отсутствии механизма защиты или несоответствия рекомендациям (например отсутствие CSRF токена) без указания на реально существующие негативные последствия;\nframing, clickjacking;\nLogout CSRF.\nСоциальная инженерия.\nСообщения об Open Redirect (/away.php)\nselfxss\nПолучение физического доступа к серверам/инфраструктуре, угрозы/причинение вреда сотрудникам компании. Более того, подобные действия будут преследоваться по закону.\nПожелания к отчету:\nСледование этому пожеланию увеличит вероятность получения награды.\n+ Сервис, в котором найдена уязвимость.\n+ Тип уязвимости.\n+ Как можно проэксплуатировать.\n+ Как повторить.\n+ Как исправить, с вашей точки зрения.\nО награде:\nМинимальная награда: $100\nНаграда зависит от серьезности уязвимости прямо пропорционально.\nВыплаты производятся только через сервис HackerOne.\nВыплата награды за уязвимость производится только первому исследователю, приславшему уязвимость.\nМы крайне негативно относимся к эксплуатации найденных уязвимостей против наших пользователей, что означает полный отказ в выплате награды за нее.\nVK Vulnerability Reward Program\nThe scope of the program is limited to technical vulnerabilities in VK services and its official mobile apps (Android, iPhone/iPad, WinPhone). For questions not related to the program, please contact our support team: https://vk.com/support\nVK services in scope:\n*.vk.com \nlogin.vk.com \n*.vk.me\n*.vk-cdn.net\n*.vkmessenger.com\n*.vkontakte.ru\n*.vk.cc\nVK official mobile apps\nNon-qualifying vulnerabilities:\nReports from security scanners and other automatic systems.\nVulnerability reports based solely on the software version / protocol without a valid proof of concept.\nReports about missing protection mechanisms or mismatching recommendations (absence of CSRF token) without a reference to negative effects.\nFraming, clickjacking.\nLogout CSRF.\nSocial engineering.\nOpen Redirect (/away.php)\nselfxss\nGaining physical access to servers / infrastructure or threats / harm to employees. Any such actions will be prosecuted to the fullest extent of the law.\nReport recommendations:\nTo increase your chances of succeeding, provide:\n+ Specific details about the service / site that contains the vulnerability.\n+ Vulnerability type.\n+ How to exploit it.\n+ How to reproduce.\n+ Recommendations on fixing this vulnerability.\nReward info:\nThe minimum reward is $100.\nThe reward depends directly on vulnerability severity.\nPayments are made via HackerOne only.\nThe reward will be granted only to the first researcher to report a vulnerability.\nDo not attempt to exploit any discovered vulnerabilities against our users. If you do, we will not pay any rewards.\n",
		"handle": "vkcom",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/254/669cb1b6377e7a185c25d48f4763a5460316b029_large.png?1431037642",
		"internet_bug_bounty": false
	},
	{
		"id": 1644,
		"url": "/square-open-source",
		"name": "Square Open Source",
		"meta": {
			"bug_count": 9,
			"accepting_submissions": true,
			"minimum_bounty": 500,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "",
		"stripped_policy": "Rewarding security bugs in our open source projects\nSquare recognizes the important contributions the security research community can make.  Part of keeping Square's customers safe is making sure that we find and fix any security issues in our open source projects.  If you find any vulnerabilities in any of our participating open source projects, send us a report.  Even better, send us a fix!\nNote: this program is to report issues in our open source projects. If you believe you have discovered a security vulnerability in one of Square's domains (squareup.com (https://squareup.com), square.com (https://square.com), or cash.me (https://cash.me)), please report them at https://hackerone.com/square (https://hackerone.com/square).\nAttributes of a good report\nDetailed explanation of the bug.\nInclude specific source code references when possible. You should at least list which project you are referring to.\nPlease include a proof-of-concept of the issue you're reporting.\nDescribe the versions of all relevant components of the issue (e.g. browser, operating system, mobile app version, etc.).\nHow to send a fix\nPlease do not open a pull request to fix an issue you're reporting.  This would unnecessarily reveal any potential vulnerabilities.  Instead, if you'd like to send us a fix, attach a patch file to the issue you open.  You'll need to sign our Individual Contributor License Agreement (https://spreadsheets.google.com/spreadsheet/viewform?formkey=dDViT2xzUHAwRkI3X3k5Z0lQM091OGc6MQ\u0026amp;ndplr=1) before any patches can be accepted.\nScope\nProjects which are hosted at https://github.com/square/ and which contain a BUG-BOUNTY.md file in the root directory.  Currently, the projects in scope are:\n- git-fastclone (https://github.com/square/git-fastclone)\n- Go-JOSE (https://github.com/square/go-jose)\n- js-JOSE (https://github.com/square/js-jose)\n- Keywhiz (https://github.com/square/keywhiz)\n- KeywhizFs (https://github.com/square/keywhiz-fs)\n- OkHttp (https://github.com/square/okhttp)\n- Okio (https://github.com/square/okio)\n- pamkrbcache (https://github.com/square/pam_krb5_ccache)\n- ghostunnel (https://github.com/square/ghostunnel)\n- rails-auth (https://github.com/square/rails-auth)\n- Retrofit (https://github.com/square/retrofit)\n- Squalor (https://github.com/square/squalor)\n- Valet (https://github.com/square/Valet)\n- Wire (https://github.com/square/wire)\nIneligible reports\nIssues related to software not under our control. Issues in underlying libraries used by our open source projects are not eligible for a reward. You are more than welcome to report them and we will follow up to try to get things fixed.\nMost of our open source development is publicly visible. Reports related to an issue being fixed in a branch or being tracked in a public way will therefore not be eligible for a bounty.\nReports of issues without a proof-of-concept or clear path to exploitation.\nIssues which can only be reproduced on specific combinations of hardware or software not used by Square.\n",
		"handle": "square-open-source",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/644/be0a13608c5430d26f15d04bd44a173d9083e83d_large.png?1430785430",
		"internet_bug_bounty": false
	},
	{
		"id": 679,
		"url": "/certly",
		"name": "Certly",
		"meta": {
			"bug_count": 27,
			"accepting_submissions": true
		},
		"about": "Certly provides trust and safety solutions for the modern web.",
		"stripped_policy": "Certly is committed to working with security experts across the world to stay up to date with the latest security techniques. If you have discovered a security issue that you believe we should know about, we'd welcome working with you. Please let us know about it and we'll make every effort to quickly correct the issue. We accept reports about our beta software and GitHub repositories (@certly).\nDon't report or attempt\n- Physical attacks on us or our infrastructure\n- Attacks on third parties\n- Mail server misconfiguration\n- DNS server/record misconfiguration\n- SPF/DKIM misconfiguration\n- Version disclosures \n- TLS misconfiguration\nAutomation\nDo not run automated scanners. Your IP will be blocked and you may be barred from participating in this program. If you use or copy and paste a report from an automated scanner, you will be blocked from reporting future bugs.\nThanks \nWe believe in recognizing the work of others. If your work helps us improve the security of our service. we'd be happy to acknowledge your contribution (/certly/thanks). Monetary rewards are not yet given.\n",
		"handle": "certly",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/679/86be616dcaca6647202fb965bc1a5a4e6687963f_large.jpg?1470242952",
		"internet_bug_bounty": false
	},
	{
		"id": 1566,
		"url": "/udemy",
		"name": "Udemy",
		"meta": {
			"bug_count": 150,
			"accepting_submissions": true,
			"minimum_bounty": 50,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "We’re the world’s online learning marketplace, with courses in everything from programming to yoga to photography.",
		"stripped_policy": "If you believe you have found a security vulnerability on the Udemy site, we encourage you to provide additional details right away. We will investigate all legitimate reports and do our best to fix these problems as quickly as possible, given the level of threat involved.\nUdemy’s bounty program is designed to reward those who help us maintain a safe Udemy site for all of our users.\nHere’s more information on our bounty program:\n* You must provide all the details of the vulnerability up front before we consider possible rewards\n* The security bug must be original and previously unreported. Known vulnerabilities will not qualify for a reward \n* Udemy reserves the right to not give a bounty payment if we believe the actions of the reporter have endangered the security of Udemy’s end users.\n* The issue must be resolved by our engineers before the reward is provided\n* \nOut of scope reports include the following:\n* No XSS reports temporarily - we are behind on fixing and analysing them\n* Self-XSS, attacks that do not have the possibility of targeting other users\n* Exploits that require significant social engineering\n* Please do not submit any reports mentioning password reset links or cookie reuse. This is in progress.\n* SMTP, DMARC, etc. email records settings\n* Video streaming or downloading videos\n* All of the following subdomains are NOT in scope:\n  - about,, blog, business, press, teach, learning,  support, mi\n",
		"handle": "udemy",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/566/fc29448e8d2659d12dd6fd760fec6a3f66fccd5a_large.jpg?1429565555",
		"internet_bug_bounty": false
	},
	{
		"id": 1382,
		"url": "/shopify",
		"name": "Shopify",
		"meta": {
			"bug_count": 337,
			"accepting_submissions": true,
			"minimum_bounty": 500,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Shopify is a multi-channel commerce platform that helps people sell online, in-store, and everywhere in between.",
		"stripped_policy": "Introduction\nShopify's Whitehat program is our way to reward security researchers for finding serious security vulnerabilities in our core application, Shopify.\nParticipation\nWe encourage security researchers to sign up for a whitehat partner account, which you can use to create shops and private Shopify apps to use for testing within the testing guidelines. https://app.shopify.com/services/partners/signup/whitehat\nPlease use your Whitehat partner account to create shops for testing or add +hackerone to your email address, (e.g. john.doe+hackerone@shopify.com) so we can properly identify your shop. Researchers using accounts that do not follow this rule will not be eligible for rewards under this program.\nEligibility\nThe scope of the whitehat program is limited to:\n* Shopify shops, their admin and their API - This means your whitehat development shop hosted at [your-shop].myshopify.com\nAll software components that are used within the Shopify application can be exploited in your attack, including bugs in the Liquid templating engine, its C performance extension, the Ruby interpreter (MRI), the Ruby on Rails framework, as well as third-party libraries that we use (such as Ruby gems). Please note that bugs in third-party components only qualify if you can prove that they can be used to successfully attack Shopify.\n* Shopify Mobile (iOS) - Available in the iTunes store (https://itunes.apple.com/ca/app/shopify-mobile/id371294472?mt=8)\n* Shopify Mobile (Android) - Available in the Play store (https://play.google.com/store/apps/details?id=com.shopify.mobile)\n* Shopify POS (iOS) - Available in the iTunes store (https://itunes.apple.com/ca/app/shopify-pos-point-sale-for/id686830644?mt=8)\n* Shopify POS (Android) - Available in the Play store (https://play.google.com/store/apps/details?id=com.shopify.pos)\n* Shopify App Store - https://apps.shopify.com\n* Shopify Theme Store - https://themes.shopify.com\n* Shopify Experts - https://experts.shopify.com\n* Kit - https://www.kitcrm.com/\nNot in scope: shopify.asia, go.shopify.com and investors.shopify.com are operated by third parties, and are not in scope. Any domain not explicitly listed above is also not in scope.\nReports on the following classes of vulnerability are eligible for reward, unless they are excluded (see the next section). In most cases, we will only reward the type of vulnerabilities that are listed below.\nArbitrary code execution\nSQL injection\nPrivilege escalation to shop owner (from unauthenticated user, customer, or installed app)\nAuthentication bypass for login to [yourshop].myshopify.com/admin\nAuthentication bypass for app installation\nCircumvention of permission model for apps or admin users\nCross-site request forgery\nCross-site scripting - See the next section for limitations.\nKnown issues or previously reported vulnerabilities\nThe following vulnerability types have already been reported and triaged, and won't be fixed. Please do not report any of the following issues. In most cases these issues will be closed as Not Applicable.\nAny issue where a store administrator is able to insert javascript in the storefront area of their own store, including the checkout pages.\nAny issue related to the storefront area being displayed in a  element in the admin area, for example in the Theme Editor.\nAny issue related to execution of javascript in the Rich Text Editor (for example, when editing the description of a product, blog or collection, etc).\nArbitrary file upload to the Shopify CDN.\nExecution of arbitrary scripts on the Shopify CDN - The Shopify content distribution network (static.shopify.com and cdn.shopify.com) is available for merchants to use, and we encourage our merchants to host anything they want. We will reject any submission to the whitehat program where the issue being reported is that a user or store administrator is able to upload arbitrary files to our CDN or execute javascript in the context of a CDN domain.\nCSRF access to modify cart\nInsecure cookie handling for non-sensitive cookies\nCSRF for Login or Logout\nPassword reset tokens don’t expire when changing email address\nEmail address change doesn’t require verification\nTab nabbing\nIssues with the SPF, DKIM or DMARC records on shopify.com or other Shopify domains (sometimes reported as email spoofing)\nInsecure “Opening Soon” password\nReflected XSS that requires full control of a http header, such as Referer, Host, etc.\nUser enumeration\nCSV / formula injection\nHyperlink injection\nIneligible vulnerability types\nShopify does not consider the following to be eligible vulnerabilities under this program:\n* Denial of Service\n* Social Engineering, including phishing\n* Content spoofing\n* Vulnerabilities in other Shopify Inc. web sites or applications\n* Failure to implement security best practices such as rate limiting, minimum password strength, and mobile binary protection\n* Some server configuration issues\n* Any issue in a mobile application that can only be exploited on a rooted or jailbroken device, that depends on physical access to the device or debug access being enabled, or that depends on a vulnerability in the operating system.\n* Architectural decisions knowingly made by Shopify are not considered as valid submissions to the whitehat program even if there may be a more secure alternative configuration. For example, reporting that www.shopify.com is not using the https protocol will fall in this category. In general, issues that fall in this category will be rejected if we do not plan to implement a fix for them.\nRules for participation\nThe following rules must be followed in order for any rewards to be paid:\n* You may only test against shops you have created\n* You must not attempt to gain access to, or interact with, any shops other than those created by you\n* Rules for reporting must be followed\n* This program is not open to minors, individuals on sanctions lists or individuals in countries on sanctions lists\n* Allow a reasonable amount of time for Shopify to respond to your vulnerability report before publishing details of your exploit\n* Shopify reserves the right to modify the rules for this program or deem any submissions invalid at any time. Shopify may cancel the Whitehat program without notice at any time.\nReward Level\nThe rewards for the Shopify whitehat program start at $500 and will escalate based on severity.  \nIndemnification\nShopify will not pursue legal action against security researchers who follow the guidelines outlined in this document and responsibly disclose vulnerabilities to us.\n",
		"handle": "shopify",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/382/b53d763002f537cad48124638ab935820d2357ba_large.jpg?1433953347",
		"internet_bug_bounty": false
	},
	{
		"id": 513,
		"url": "/snapchat",
		"name": "Snapchat",
		"meta": {
			"bug_count": 137,
			"accepting_submissions": true,
			"minimum_bounty": 250,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "",
		"stripped_policy": "At Snapchat, we are looking forward to fostering new relationships with the security community. Our security team reviews all vulnerability reports and acts upon them in accordance with responsible disclosure. As a general rule, we will acknowledge your submission within 30 days - usually in a lot less time - and address findings within 90 days.\nScope\nThis program is limited to Snapchat’s applications and websites listed below:\nCore applications and websites:\nSnapchat’s current mobile application for IOS (here (https://itunes.apple.com/us/app/snapchat/id447188370?mt=8)) and Android (here (https://play.google.com/store/apps/details?id=com.snapchat.android)).\nSnapchat’s main server-side application hosted on Google App Engine under the hostname feelinsonice-hrd.appspot.com and app.snapchat.com.\nSnapchat’s new (limited) account management website hosted on https://accounts.snapchat.com. \nSnapchat’s  on-demand Geofilters purchase website hosted on https://geofilters.snapchat.com. (Added Aug 16, 2016)\nThe mostly static support website hosted on https://support.snapchat.com/ is not in scope.\nNon-core website(s):\nwww.scan.me\nhttps://www.bitmoji.com (Added Aug 16, 2016)\nhttps://www.bitstrips.com (Added Aug 16, 2016)\nBitstrips current mobile application for IOS (here (https://itunes.apple.com/us/app/bitmoji-keyboard-your-avatar/id868077558)) and Android (here (https://play.google.com/store/apps/details?id=com.bitstrips.imoji)). (Added Aug 16, 2016)\nWe expect to expand the scope of the program in the following weeks and months to cover additional components of our production systems.\nEligibility\nTo qualify for a reward under this program, you must:\n- Be the first to report a specific vulnerability.\n- Send a clear textual description of the report along with steps to reproduce the vulnerability. Include attachments such as screenshots or proof of concept code as necessary.\n- Disclose the vulnerability report responsibly to us. Public disclosure or disclosure to other third parties - including vulnerability brokers - before we addressed your report forfeit the reward.\n- Demonstrate care in reproducing the vulnerability. In particular, test only on accounts you own and do not attempt to view or tamper with data belonging to others.\nRewards\nWe will reward reports according to their severity on a case-by-case basis as determined by our security team. We may pay more for unique, hard-to-find bugs; we may also pay less for bugs with complex prerequisites that lower risk of exploitation. Our minimum reward is $250 USD.\nWe are particularly interested in the following categories of security bugs. Here are the current minimum payments for each:\n| Vulnerability        | Minimum[1]           |\n| ------------- |:-------------:|\n| Server-Side Remote Code Execution (e.g. command injection)      | $15,000 |\n| Significant Authentication Bypass / Logic Flaw      | $7,500      |\n| Unrestricted File System Access | $5,000      |\n| XSS or XSRF With Significant Security Impact | $2,000      |\n[1] Note that these minimums are for Snapchat’s core applications and websites as listed in the “Scope” section above. Bounties for non-core websites may vary and be lower than the minimums listed in this table. This depends on the nature of the non-core website and is subject to the discretion of the reward panel. For example, if a non-core website is going to be deprecated, a bug in this non-core website may be considered to be lower priority than a bug in our core applications or websites as listed above. This will be reflected in the bounty amount.\nNon-qualifying vulnerabilities and exclusions\nSocial engineering attempts on our staff including phishing emails\nAttempts to access our offices or data centers\nVulnerabilities in a vendor we integrate with\nUse of automated tools that could generate significant traffic and possibly impair the functioning of our application\nReports solely indicating a lack of a possible security defense such as certificate pinning. We constantly make security improvements to our product offering.\nScreenshot detection avoidance. This exclusion may be lifted under reasonable constraints in the future.\nTwo-factor authentication bypass that requires physical access to a logged-in device.\nScan's mobile and desktop applications are not currently in scope.\nAdditionally, the following reports do not qualify for a reward:\n- Lack of email address verification during account registration. We are currently making improvements to our registration flow.\n- Local access to user data when operating a rooted mobile device.\n- Tampering with the host header in the request and receiving a redirect to a safe domain. This is handled by Google AppEngine itself; it is not specific to Snapchat and we do not find issues with it.\n- Support for RC4 in SSL/TLS negotiation. For our domains scoped in this rewards program, SSL/TLS is handled by Google AppEngine itself and Google routinely reviews its cipher suite support.\nLegal\nIf you’re on a sanctions list, or live in a country that’s on a sanctions list, we cannot give you a reward. Keep in mind that your citizenship and residency may affect whether you owe taxes on any reward you receive, and you alone are responsible for paying those taxes. \nWe, of course, reserve the right to cancel or modify this program at any time. And the ultimate decision over an award --whether to give one and in what amount-- is a decision that lies entirely within our discretion.\nFinally, and needless to say, please do not violate any laws when conducting your tests.\n",
		"handle": "snapchat",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/513/95aac43cd7643658e81daa57fb36d31288fe75af_large.png?1432078031",
		"internet_bug_bounty": false
	},
	{
		"id": 1385,
		"url": "/leetfiles",
		"name": "leetfiles",
		"meta": {
			"bug_count": 72,
			"accepting_submissions": true
		},
		"about": "Simple file, image, video, and paste sharing website. For people that want 1 account on 1 website, instead of 4 accounts on 4 websites.",
		"stripped_policy": "PLEASE DO NOT USE AUTOMATED TOOLS!\nيرجى عدم استخدام ادوات فحص آلية\nकृपया स्वचालित उपकरण का उपयोग नहीं करते!\n请不要使用自动化的工具 !\n自動化ツールを使用しないでください !\nReports about spf, dmarc, and open ports will be closed as spam..\nWe've used all scanners that exist already, you won't find anything that way.\nPeople using automated tools will be blocked from accessing the servers completely.\nI know the first thing most of you are going to think is vulnerable is the paste portion of the website, but there is no way to xss it, any attempt is a waste of your time and a bunch of cleanup work for us. If you still insist on trying, please first sign up for an account, create a paste, and use the edit feature instead of making 1000 pastes.\nBy testing leetfil.es for security issues, you agree to not disclose any bugs or security issues anywhere besides this program on hackerone.\n",
		"handle": "leetfiles",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/385/f9762b4b174576b2be6b36268b9d35d01548bc1a_large.png?1464488273",
		"internet_bug_bounty": false
	},
	{
		"id": 800,
		"url": "/ubnt",
		"name": "Ubiquiti Networks",
		"meta": {
			"bug_count": 331,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "",
		"stripped_policy": "Introduction\nAt Ubiquiti we take security very seriously, and embrace the security research community. We provide products and services that millions around the world use every day, and understand privacy and security is very important to our customers.\nReward Program\nTo honor the Ubiquiti advocates that provide research and contributions to help improve security for our products, we provide a Security Reward Program. This program allows Ubiquiti to continuously improve the security of our products, while publicly recognizing the security enthusiasts submitting valid issues.\nIf you believe you have found a vulnerability in any of Ubiquiti's products or services, let us know as soon as possible, and we'll do our best to get the issues addressed as quickly as possible.\nProgram Scope\nThe Security Reward Program encompasses all of Ubiquiti's products. Including, but not limited to:\nWeb Products\n*.ubnt.com -- any web applications under ubnt.com domain (WWW, SSO Account, etc), except: Store, Community and Forums.\nCloud applications (excluding aircrm.ubnt.com)\nNOTE: Sites on a *.ubnt.com domain but hosted with another provider may not be in scope (e.g. ir.ubnt.com)\nPlatform Products\nairMAX, UniFi, UniFi-Video, EdgeMAX, and airFiber embedded devices \nDistributed Software Platforms -- Any controller software: UniFi, UniFi-Video, airControl\n-- Note that mFi is Out of Scope!\nWe consider a Vulnerability to be an error, flaw, mistake, failure or fault in a computer program or system that impacts the security of a device, system, network or data. In general, any Vulnerability may be considered for this Program. Please see exceptions below.\nAny products or areas of our site that are based on other software platforms are not eligible for bounties for bugs fixed in the platform's latest releases until at least one month after the platform's release. \nRewards\nRewards typically range anywhere from US$100 - $25,000 depending on the application and the risk, complexity, impact and overall severity of the Vulnerability. Some examples include:\nRemote code execution\nAuthentication bypass, unauthorized data access\nSQL injection\nXSS, XSRF, CSRF\nAt this time we are not offering rewards for clickjacking!\nOur reward panel will review each Vulnerability submission for eligibility and final reward consideration. Final reward amounts are at the sole and final discretion of Ubiquiti's reward panel. In some instances, our reward panel may choose higher rewards for unusually major, clever or complex Vulnerability submissions.\nAll reward payments are subject to compliance with local laws, rules and regulations. Before you receive your reward, we may require that you sign an affidavit of eligibility, a questionnaire, and a release of liability. You will be solely responsible for all applicable taxes relating to any reward under this Program.\nRecognition\nUbiquiti may publish a leaderboard of Vulnerability reporters based on previous security vulnerability and bug reports. These previous reporters may receive special access to Ubiquiti engineers. If you wish to remain anonymous to the public, we will honor your request.\nExceptions \u0026amp; Rules\nThis Program is limited strictly to technical vulnerabilities of Ubiquiti products and services.\nYou may only exploit, investigate or target vulnerabilities in your own account and the Ubiquiti products you own.\nAny activity that would disrupt, damage or adversely affect any third party data, account or equipment is not allowed.\nThe following are strictly prohibited:\nAttacks on Ubiquiti infrastructure or facilities\nDOS attacks are not allowed\nSocial Engineering attacks or phishing.\nEligible Vulnerabilities must be a new, previously unreported, vulnerability or bug in order to be eligible for reward or recognition.\nPublic disclosure or limited private release of any Vulnerability prior to its submission to Ubiquiti will disqualify such Vulnerability from consideration.\nYou must be the first to report a certain issue. In the event of duplicate Vulnerability submissions, only the earliest receipt submission will be considered.\nYou must not be the author of the code with the vulnerability or bug.\nAny Vulnerability disclosed to any other party, including vulnerability brokers, will disqualify such Vulnerability from this Program.\n*Alpha/Beta/Demo software is Out of scope.\n# Responsible Disclosure Period\nPlease provide us reasonable time to research the submitted issues and during that time do not make information about the vulnerability public or further known in order to protect the security and privacy of our users, and to preserve your eligibility.\n",
		"handle": "ubnt",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/800/7529e3f52207b4c9bbe63426bd00f3795e32833e_large.png?1419364363",
		"internet_bug_bounty": false
	},
	{
		"id": 569,
		"url": "/whisper",
		"name": "Whisper",
		"meta": {
			"bug_count": 50,
			"accepting_submissions": true,
			"minimum_bounty": 30,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Whisper is an anonymous social network that lets people share confessions, express themselves, and meet new people.",
		"stripped_policy": "Whisper is committed to working with security experts across the globe to stay up to date with the latest security techniques. If you have discovered a security issue that you believe we should know about, we'd welcome working with you. Please let us know about it and we'll make every effort to quickly correct the issue.\nTHANKS\nWe believe in recognizing the work of others. If your work helps us improve the security of our service, we'd be happy to acknowledge your contribution in our Hall of Fame (https://hackerone.com/whisper/thanks). \n",
		"handle": "whisper",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/569/8814f8a843acfb9bbfa452221009b9a7f19bf424_large.jpg?1414767226",
		"internet_bug_bounty": false
	},
	{
		"id": 347,
		"url": "/adobe",
		"name": "Adobe",
		"meta": {
			"bug_count": 683,
			"accepting_submissions": true
		},
		"about": "Adobe web services vulnerability disclosure program",
		"stripped_policy": "Guidelines\nThis disclosure program is limited to security vulnerabilities in web applications owned by Adobe.  All vulnerabilities affecting Adobe desktop products (ex. Flash Player and Adobe Reader), or enterprise on-premise solutions should be reported via email to the Product Security Incident Response Team PSIRT@adobe.com (PGP key available [here](http://blogs.adobe.com/psirt/?page_id=146/)).   \nEligible Vulnerabilities\nWe encourage the coordinated disclosure of the following eligible web application vulnerabilities:  \nCross-site scripting \nCross-site request forgery in a privileged context\nServer-side code execution\nAuthentication or authorization flaws\nInjection Vulnerabilities\nDirectory Traversal\nInformation Disclosure\nSignificant Security Misconfiguration\nTo receive credit, you must be the first reporter of a vulnerability and provide us a reasonable amount of time to remediate before publicly disclosing.  When submitting a vulnerability, please provide concise steps to reproduce that are easily understood.   \nProgram Exclusions\nWhile we encourage any submission affecting the security of an Adobe web property, unless evidence is provided demonstrating exploitability, the following examples are excluded from this program: \nContent spoofing / text injection\nSelf-XSS [to be valid, cross-site scripting issues must be exploitable in reflected, stored or DOM-based types]\nLogout and other instances of low-severity Cross-Site Request Forgery \nMissing http security headers \nMissing cookie flags on non-sensitive cookies \nPassword and account recovery policies, such as reset link expiration or password complexity\nInvalid or missing SPF (Sender Policy Framework) records (Incomplete or missing SPF/DKIM)\nVulnerabilities only affecting users of outdated or unpatched browsers and platforms\nSSL/TLS best practices\nClickjacking/UI redressing with no practical security impact\nSoftware version disclosure\nUsername / email enumeration via Login Page or Forgot Password Page error messages\nWe are aware that the public code repo available at [https://repo.adobe.com/nexus/content/*] is exposed.  This is expected behavior, and we do not consider it a security vulnerability. \nProcess\nYour submission will be reviewed and validated by a member of the Product Security Incident Response Team.  Providing clear and concise steps to reproduce the issue will help to expedite the response.   \nTerms and Conditions\nPlease use your own account for testing or research purposes.  Do not attempt to gain access to another user’s account or confidential information.  \nPlease do not test for spam, social engineering or denial of service issues. \nYour testing must not violate any law, or disrupt or compromise any data that is not your own. \nPlease contact PSIRT@adobe.com to report security incidents such as customer data leakage or breach of infrastructure.  \n",
		"handle": "adobe",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/347/11f3703e934fb7876233c19c3e73bb815e8e563f_large.jpg?1421442199",
		"internet_bug_bounty": false
	},
	{
		"id": 1080,
		"url": "/airbnb",
		"name": "Airbnb",
		"meta": {
			"bug_count": 82,
			"accepting_submissions": true
		},
		"about": "",
		"stripped_policy": "We're committed to protecting our community.  If you're a security expert or researcher and you believe you've discovered a security-related issue with Airbnb's online systems, we appreciate your help in disclosing the issue to us responsibly. We ask the security research community to give us an opportunity to correct a vulnerability before publicly disclosing it. Please submit a detailed description of the issue and the steps you believe may be required to reproduce what you have observed. Please make a good faith effort to protect our users' privacy and data. We are committed to addressing security issues responsibly and in a timely manner.\nThis program is dedicated to perceived online security issues that may affect many people on Airbnb. If you're having issues related to your individual account, then please visit our Help Center (https://www.airbnb.com/help).\nScope\nOur program is limited to technical vulnerabilities in Airbnb mobile and web applications; please do not attempt phishing attacks against our users.  Out of concern for the availability of our services to all users, please do not attempt to carry out DoS attacks, spam people, or do other similarly questionable things. We also discourage the use of any vulnerability testing tools that automatically generate very significant volumes of traffic.\nWe welcome you to report problems under www.airbnb.com, and any of the localized versions of our website, but there are some exceptions to the disclosure program, including \n* blog.airbnb.com\n* nerds.airbnb.com\n* publicpolicy.airbnb.com\n* replay.vidyo.airbnb.com\nNon-qualifying vulnerabilities\nDepending on their impact, some reported issues may not qualify. Although we review them on a case-by-case basis, here are some of the common low-risk issues that typically do not qualify\n* Software version disclosure\n* Issues requiring direct physical access to mobile device\n* Bugs requiring exceedingly unlikely user interaction.\n* Flaws affecting the users of out-of-date browsers and plugins. \n* Logout CSRF\n* Abuse scenarios against our infrastructure \n* Email enumeration \nView past researchers (https://hackerone.com/airbnb/thanks) who have made responsible disclosures to us.\n",
		"handle": "airbnb",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/001/080/ae03067b03035078cd067777d5c2e320c9fc92bc_large.jpg?1423778005",
		"internet_bug_bounty": false
	},
	{
		"id": 607,
		"url": "/mobilevikings",
		"name": "Mobile Vikings",
		"meta": {
			"bug_count": 59,
			"accepting_submissions": true
		},
		"about": "Mobile Vikings is a prepaid provider that lets you connect to your Viking friends for free!",
		"stripped_policy": "True Vikings never entered the battlefield without their helmets. And we believe a secure environment, just like free access to open communication, is a worldwide human right. But even the best Viking Drakkars may sometimes encounter vulnerabilities. Brave sailors who discover leaks should be honored - not executed.\nTogether with you and our broad community, we want to create a secure and safe environment for everyone. Give us reasonable time to respond, before you make any information public. Also avoid privacy violations, destruction of data and interruption or degradation of our service during your research. \nGrab your battle axes and conquer those bugs!\n** Latest news **\n[22/04/15 ] - Scope updated, new website .vikingco.com added\n** PLEASE READ - Important notes**\nPlease do NOT use automatic scanners - be creative and do it yourself! \nWe can not accept any submissions found by using automatic scanners. Scanners also won't improve your skills, and can cause a high server load (we'd like to put our time in thanking researchers rather than blocking their IP's :-))\nPlease do NOT discuss bugs before they are fixed. You can send us a video as proof of concept, but remember to change its privacy settings to private\nUpon registration, please use \"HackerOne\" as your last name - so our sales team knows not to flood you with SIM cards. ;-) \nYou can register an account here:  https://vikingco.com/en/my-viking/register/account/\nThe scope\nAt the moment, we are only accepting submissions for:\n*.mobilevikings.be\n*.vikingco.com\nAccepted bugs\nWe're interested in all kinds of bugs that could affect user data or Mobile Vikings' integrity. These include - but are not limited to - the following bugs:\n1. Remote Code Execution\n2. SQL Injection\n3. File Inclusion / Directory Traversal\n4. Cross Site Scripting\n5. Cross Site Request Forgery with a realistic attack scenario\n6. Privillege escalation\n7. Significant enumeration attacks\n8. Open redirects\nNon-qualifying bugs\nSocial engineering attacks\nClickjacking\nLow-level HTTPS/SSL best practices\nBest practices in general\nDenial of Service attacks\nBugs found using automated scanning tools\nPublicly published bugs\nBanner/version disclosure\nMissing headers (except if this implies a significant risk)\nBrute force attacks\nLogin/logout CSRF\nPassword complexity reports\nDuplicates\nLow risk reports without a realistic or exploitable attack scenario (e.g. a login/logout CSRF)\nAttributes to a good report\nProvide detailed but to-the point reproduction steps\nInclude a clear attack scenario. How will this affect our Viking user base?\nRemember: quality over quantity!\nResponse timeframe\nWe will respond to report in ultimately two weeks, probably faster (average would be a couple of hours, also in the weekend ;-))\nReward?\nWe will honor every viking that sends in a valid report in our HackerOne Viking Hall of Fame!\nWe don't do bounties just yet - but we may decide to offer some swag as a token of our appreciation for some higher impact issues\n",
		"handle": "mobilevikings",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/607/10646c400b8cb3dca5763eaf90bef890305a7552_large.png?1429726565",
		"internet_bug_bounty": false
	},
	{
		"id": 563,
		"url": "/enter",
		"name": "Enter",
		"meta": {
			"bug_count": 74,
			"accepting_submissions": true,
			"minimum_bounty": 250,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Money Unrestricted",
		"stripped_policy": "Go to https://wallet.romit.io/signup to register!\nGo to https://wallet.sandbox.romit.io/signup to register on the sandbox!\nRomit recognizes the importance of security researchers in helping keep our community safe. We encourage responsible disclosure of security vulnerabilities via our bug bounty program described on this page.\nWe suggest using the sandbox to test functionality as it uses fake credit cards and fully approved user accounts.\nResponsible disclosure includes:\n* Providing us a reasonable amount of time to fix the issue before publishing it elsewhere.\n* Making a good faith effort to not leak or destroy any user data.\n* Not defrauding Romit users or Romit itself in the process of discovery.\nIn order to encourage responsible disclosure, we promise not to bring legal action against researchers who point out a problem provided they do their best to follow the above guidelines.\nEligibility\nRomit reserves the right to decide if the minimum severity threshold is met and whether it was previously reported.\nPlease report anything which has the potential for financial loss or data breach is of sufficient severity on:\n* https://wallet.romit.io\n* https://wallet.sandbox.romit.io\n* https://api.romit.io (Documentation at http://docs.romit.io)\n* https://api.sandbox.romit.io (Documentation at http://docs.romit.io)\n* https://auth.romit.io\n* https://auth.sandbox.romit.io\n* https://checkout.romit.io\n* https://checkout.sandbox.romit.io\n* https://login.romit.io\n* https://login.sandbox.romit.io\nIn general, the following would not meet the threshold for severity: \n* Absolutely no automated test results should be submitted.\n* Vulnerabilities on sites hosted by third parties (blog.romit.io, docs.romit.io, analytics, etc) unless they lead to a vulnerability on the main website\n* The marketing webpage (romit.io)\n* Denial of service\n* SPF records\n* Vulnerabilities in third party applications which make use of the Romit API\n* Issues, particularly man-in-the-middle attacks, surrounding one time use csrf tokens and regeneration of session ids.\n* Attacks on our proxy at http://wallet.romit.io:80 or http://wallet.sandbox.romit.io:80\n* Password complexity\n* Secure cookie flag\n* Attacks requiring physical access to the victim's machine\n* Clickjacking attacks likely won't meet the threshold for severity since we require framing of certain sections of our site\nRewards\nThe minimum payout is $250 for reporting a previously unknown security vulnerability of sufficient severity with possibility for direct exploitation. There is no maximum reward, and we may award higher amounts based on severity or creativity of the vulnerability found. We may reward $25 - $50 in cases where our security is adjusted for better defense in depth, but no direct exploitation is possible.\nThank you for helping keep our community safe!\n",
		"handle": "enter",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/563/2647c10d2ddef60899ffccffe8b0b299d8a16e1d_large.png?1429307033",
		"internet_bug_bounty": false
	},
	{
		"id": 942,
		"url": "/trello",
		"name": "Trello",
		"meta": {
			"bug_count": 81,
			"accepting_submissions": true,
			"minimum_bounty": 128,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Trello lets you see everything about your project in a single glance",
		"stripped_policy": "Responsible Disclosure Policy\nWhile working to identify security vulnerabilities, we ask that you:\nShare any issues that you discover with us via HackerOne, as soon as is practical\nGive us a reasonable amount of time to address reported issues before making them public\nDo not attempt to access or modify any user data that is not your own  (You can set up a dummy Trello account; they're free!)\nAct in good faith not to degrade the performance of our services (e.g. via automated scanning, brute forcing, or denial of service attacks)\nOnly report issues that are in scope (below)\nCheck our list of non-qualifying vulnerabilities (below) to make sure that you aren't spending time chasing down a vulnerability that isn't going to qualify for a bounty.\nWe will not bring a lawsuit against you or ask law enforcement to investigate you if you comply with these guidelines.\nBug Bounties\nTo show our appreciation for the work it can take to find and report a vulnerability, we're happy to offer researchers a monetary reward.  Our minimum reward is currently $128 USD, and we expect to pay $1024+ for major vulnerabilities.\nTo qualify for a bounty you must:\nReport a qualifying vulnerability (see below) that is in the scope of our program (also below)\nBe the first person to report the vulnerability\nAdhere to our disclosure guidelines (see above)\nOnly test against your own accounts and data\nRefrain from disclosing the vulnerability until we've addressed it\nBe in a country where we can legally pay you (e.g. we can't if you're a resident of North Korea)\nCommunicate with our security team exclusively via HackerOne (the security team will be way more impressed by your exploits than our support or social media teams)\nWe may sometimes choose to award bounties that are less than our stated minimum; these are generally given to researchers who file informative reports that don't warrant a change.\nScope\nVulnerabilities affecting the following domains are in scope and may qualify for a bounty:\ntrello.com\napi.trello.com\n*.trello.services\nVulnerabilities affecting blog.trello.com will only qualify for a bounty if they include a working proof of concept showing how the issue can compromise user data on trello.com.\nOther domains (e.g. trello-attachments.s3.amazonaws.com) or subdomains not listed above (e.g. e.trello.com, help.trello.com) are not in scope and will not qualify for a bounty.\nReports must include the following:\nA Proof of Concept\nDetailed steps on how to reproduce the vulnerability\nExplanation of how the attack could be executed in a real world scenario to compromise user accounts or data\nQualifying Vulnerabilities\nExamples of qualifying vulnerabilities likely to be eligible for a bounty include:\nCross-Site Scripting (XSS) affecting a browser supported by Trello (https://trello.com/platforms)\nCross-Site Request Forgery (XSRF)\nMissing/Broken Authentication\nRemote Code Execution\nPrivilege Escalation\nSQL Injection ;)\nOur security team will assess all submissions and determine if they qualify for a bounty.\nNon-Qualifying Issues\nNot all issues are in the scope of our program, including some issues that may have been accepted by other programs.  We don't want you to waste time submitting a report that won't qualify, so please be aware of these non-qualifying issues before beginning your research and submitting any reports.\nExamples of non-qualifying vulnerabilities (not eligible for a bounty) include:\nReports from automated tools or scanners\nTheoretical attacks without actual proof of exploitability\nDenial of Service attacks\nBrute force attacks (e.g. on passwords or tokens)\nUsername or email address enumeration\nSpamming\nIssues with third-party applications (e.g. tools that interact with Trello or the Trello API, Chrome Extensions)\nIssues with domains not owned by Trello Inc (see the scope above)\nSocial engineering of Trello staff or users (e.g. phishing)\nVulnerabilities obtained through compromising Trello user or employee accounts\nAttacks involving any user accounts not created by you\nPhysical attacks against Trello Inc offices or data centers\nAttacks involving physical access to a user's device, or involving a device or network that is already seriously compromised (e.g. man-in-the-middle attacks)\nMissing security headers that do not lead directly to a vulnerability\nClickjacking and \"Tabnabbing\" (i.e. reports involving manipulation of window.opener)\nContent Spoofing and \"hyperlink injection\" (in emails)\nCookies missing secure/httponly\nBugs that rely on an unlikely user interaction (i.e. the user effectively attacking themselves)\nIssues related to password and account recovery policies (e.g. password complexity requirements)\nIssues related to board and organization invitation policies\nIssues related to having autocomplete enabled (i.e. not explicitly disabled) on password inputs\nDisclosure of tools, libraries used by Trello and/or their versions\nOpen redirects on domains other than trello.com\nIssues that are the result of a user doing something silly (like sharing their password or API tokens publicly)\nAttacks affecting browsers not explicitly supported by Trello (https://trello.com/platforms)\nIssues related to e-mail coming from @trello.com addresses (e.g. things related to DMARC and SPF)\nReports of third party services and libraries needing to be updated to address a potential vulnerability … unless the updated version has been available for more than 48 hours\nIf you discover an out-of-scope bug in Trello while looking for security issues, you can report it to us by emailing our support team at support@trello.com.  (If you do this, please be sure to mention that you're reporting an issue that's out of scope, so they don't refer you back to HackerOne!)\nThanks\nWe're happy to acknowledge security researchers that have helped us keep our users' data secure on our thanks page (/trello/thanks).\n'\u0026gt;",
		"handle": "trello",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/942/49c9855487758482a825e5a50501c442e98f9ad8_large.png?1421876138",
		"internet_bug_bounty": false
	},
	{
		"id": 581,
		"url": "/itbit",
		"name": "itBit Exchange",
		"meta": {
			"bug_count": 71,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "itBit is a global digital currency exchange that offers a powerful platform to buy and sell bitcoin. ",
		"stripped_policy": "Program Rules\nitBit is focused on providing a secure product to our customers. We encourage responsible disclosure of security vulnerabilities via our bug bounty program described on this page.  To recognize the efforts of researchers disclosing these issues responsibly, we offer a bounty for reporting certain qualifying security vulnerabilities. Please review the following program rules before you report a vulnerability. By participating in this program, you agree to be bound by these rules.\nPlease use https://beta.itbit.com/login if you need to test with a logged in account or create a new account for possible vulnerabilities. Bounties may not be awarded to users that create fake accounts on the primary site (https://exchange.itbit.com/login).  \nRewards\nitBit may provide rewards to eligible reporters of qualifying vulnerabilities.  Reward amounts may vary depending upon the severity of the vulnerability reported. itBit will determine in its discretion whether a reward should be granted and the amount of the reward. This is not a contest or competition. Rewards may be provided on an ongoing basis so long as this program is active.\nWe categorize bugs into the following categories, please include what you think the impact of your bug report is when you submit to us.\nCRITICAL (Awarded at or above $2,000)\nVulnerabilities that cause a privilege escalation on the platform from unprivileged to admin, allows remote code execution, financial theft, etc. \nExamples: \n- Remote Code Execution in the API, Exchange Web Services \n- SQL Injection \n- User authentication bypass\n- Unauthorized cross-account Access or Data\nHIGH (Awarded at $1,000 +/- depending on impact)\nVulnerabilities that affect the security of the platform including the processes it supports. Examples: \n- Lateral authentication bypass, \n- Stored XSS (Against another account)\n- Moderate Account/Authentication/Session issues (Such as 2FA Bypass)\n- Direct object reference (Allowing unauthorized access)\n- Bugs which are novel and have a tangible security impact\nMEDIUM/LOW (Awarded up to $500)\nVulnerabilities that affect small-medium numbers of users, \nExamples: \n- Reflective or Stored XSS\n- URL Redirect, some CSRF depending on impact\n- Authenticated CSRF, depending on impact. \n- SSL/Cipher Issues with tangible security impact.\nWon’t Fix\nNon-exploitable weaknesses and “won’t fix” vulnerabilities. Issues that affect singular users and require interaction or significant prerequisites (MitM) to trigger.\nScope\nThe itBit Exchange platform is in scope including exchange.itbit.com and api.itbit.com.  Applications or services hosted by third parties (itBit blog, itbit.desk.com, support.itbit.com, analytics, w3.itbit.com, etc) are out of scope and not eligible as part of this program.\nReporting Possible Vulnerabilities\nYou must report a qualifying vulnerability through the HackerOne reporting tool to be eligible for a monetary reward.\nIf you have an issue that affects only your own account please contact our customer support. \nIf any research could potentially affect other users, disrupt services, or impact account info or balances, please contact us first at security@itbit.com.\nEligibility and Responsible Disclosure\nWe are happy to thank everyone who submits valid reports which help us improve the security of itBit! However, only those that meet the following eligibility requirements may receive a monetary reward:\nYou must be the first reporter of a vulnerability.\nThe vulnerability must be a qualifying vulnerability (see below) associated with a site or application in scope (see above).\nWe can’t be legally prohibited from rewarding you (for example, you can’t be a resident of or located within Cuba, Sudan, North Korea, Iran or Syria a national of other certain countries, or on a denied parties or sanctions list).\nYou may not publicly disclose the vulnerability prior to our resolution.\nQualifying Vulnerabilities\nAny design or implementation issue that is reproducible and substantially affects the security of itBit users is likely to be in scope for the program. Common examples include:\nCross Site Scripting (XSS)\nCross Site Request Forgery (CSRF)\nRemote Code Execution (RCE)\nUnauthorized Access to Accounts\nUnauthorized Access to API endpoints\nIssues Affecting Account Funds\nNon-Qualifying Vulnerabilities\nDepending on their impact, not all reported issues may qualify for a monetary reward. However all reports are reviewed on a case-by-case basis and any report that results in a change being made will at a minimum receive recognition.\nPlease refrain from accessing private information, performing actions that may negatively affect itBit users (spam, denial of service), or sending reports from automated tools without verifying them.\nThe following issues are outside the scope of our vulnerability rewards program (either ineligible or false positives):\nEmail related attacks including spoofing or any issues related to SPF, DKIM or DMARC\nAttacks requiring physical access to a user's device\nForms missing CSRF tokens (we require evidence of actual CSRF vulnerability)\nLogin/logout CSRF\nPassword and account recovery policies, such as reset link expiration or password complexity\nMissing security headers including (content security policy) which do not lead directly to a vulnerability\nClickjacking on static websites\nContent spoofing / text injection\nUse of a known-vulnerable library (without evidence of exploitability)\nIssues related to software or protocols not under itBit control\nReports from automated tools or scans\nVulnerabilities affecting users of outdated browsers or platforms\nSocial engineering of itBit staff or contractors\nAny physical attempts against itBit property or data centers\nThe Fine Print\nYou must comply with all applicable laws in connection with your participation in this program. You are also responsible for any applicable taxes associated with any reward you receive.\nWe may modify the terms of this program or terminate this program at any time. We won’t apply any changes we make to these program terms retroactively.\nReports received prior to the paid bug bounty program launch (10:00 AM EST on January 21, 2015) are not eligible for monetary rewards.\n",
		"handle": "itbit",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/581/cce7ee898e04b39a8220e69105523bf7923724ef_large.png?1415138560",
		"internet_bug_bounty": false
	},
	{
		"id": 461,
		"url": "/dropbox",
		"name": "Dropbox",
		"meta": {
			"bug_count": 165,
			"accepting_submissions": true,
			"minimum_bounty": 216,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Your stuff, anywhere",
		"stripped_policy": "Keeping user information safe and secure is a top priority and a core company value for us at Dropbox. We welcome the contribution of external security researchers and look forward to awarding them for their invaluable contribution to the security of all Dropbox users. \nPlease be respectful of our existing applications. Spamming forms through automated vulnerability scanners will not result in any bounty or award since those are explicitly out of scope. Further, issues in chat forms, contact forms are not eligible for bounties.\nRewards\nDropbox, at its discretion, may provide rewards to vulnerability reporters. Our minimum reward is $216 USD. There is no maximum reward. Reward amounts may vary depending upon the severity of the vulnerability reported and quality of the report. Keep in mind that this is not a contest or competition. Here are usual minimum rewards for critical vulnerabilities affecting the core Dropbox application and Dropbox Paper web application and server.\n| Vulnerability|Reward|  \n|----------|-------------|\n|Remote Code Execution on servers | $10000 |\n|Cross site scripting on www.dropbox.com working on all browsers |  $5000 |\n| Significant Authentication Bypass |    $8000 |\n| Cross Site Request Forgery on critical actions| $5000|\n| Trivial Remote Code Execution in Dropbox app (Android, iOS, Client) | $5000|\nThese values are indicative and we reserve the right to determine amount or even whether a reward should be granted. We typically reward lower amounts for vulnerabilities that require significant user interaction. We also might pay higher rewards for clever or severe vulnerabilities. \nScope\nFor now, the Dropbox iOS and Android applications; the Dropbox web application; the Dropbox desktop client as well as the Dropbox Core SDK are eligible for the bounty program. Bugs in Dropbox Paper are also eligible. No other applications (including acquisitions) are in the scope of this program.\nEligibility and Responsible Disclosure\nYou are responsible for complying with any applicable laws, and you should only use your own accounts or test accounts for reporting vulnerabilities. \nTo promote the discovery and reporting of vulnerabilities and increase user safety, we ask that you:\n- Share the security issue with us in detail\n- Give us a reasonable time to respond to the issue before making any information about it public.\n- Not access or modify data without explicit permission of the owner.\n- Act in good faith not to degrade the performance of our services (including denial of service).\nWe only reward the first reporter of a vulnerability. Public disclosure of the vulnerability prior to resolution will result in disqualification from the program. You must report a qualifying vulnerability through the HackerOne reporting tool to be eligible for a monetary reward.  \nOut-of-scope Vulnerabilities\nAll acquisition reports are out of scope for this program.\nThe following issues are outside the scope of our rewards program:\n- Our policies on presence/absence of SPF/DMARC records\n- Password, email and account policies, such as email id verification, reset link expiration, password complexity\n- Lack of CSRF tokens (unless there is evidence of actual, sensitive user action not protected by a token)\n- Login/logout CSRF\n- Attacks requiring physical access to a user's device\n- Missing security headers which do not lead directly to a vulnerability\n- Missing best practices (we require evidence of a security vulnerability)\n- Hosting malware/arbitrary content on Dropbox and causing downloads\n- XSS on dropboxusercontent.com is out of scope\n- Self-XSS (we require evidence on how the XSS can be used to attack another Dropbox user)\n- XSS on any site other than www.dropbox.com. \n- We will accept reports of XSS on dropbox.com subdomains but will not reward for them. \n- dropboxforums.com XSS is also out of scope\n- Host header injections unless you can show how they can lead to stealing user data.\n- Use of a known-vulnerable library (without evidence of exploitability)\n- Issues related to software or protocols not under Dropbox control\n- Reports from automated tools or scans\n- Reports of spam (i.e., any report involving ability to send emails without rate limits)\n- Bypass of malware detection\n- Attacks that require attacker app to have the permission to overlay on top of our app (e.g., tapjacking)\n- Vulnerabilities affecting users of outdated browsers or platforms\n- Social engineering of Dropbox employees or contractors\n- Any physical attempts against Dropbox property or data centers\n- Presence of autocomplete attribute on web forms\n- Missing cookie flags on non-sensitive cookies\n- Reports of insecure SSL/TLS ciphers (unless you have a working proof of concept, and not just a report from a scanner)\n- Any report that discusses how you can learn whether a given username, email address has a Dropbox account.\n- Any access to data where the targeted user needs to be operating a rooted mobile device.\n- Any report on bypassing our storage limits etc is out of scope\n- Any report about DLL hijacking without demonstrating how it gains new privileges is also out of scope.\n- Any report about how Dropbox can be used to serve malware (we have separate rate limits and malware detection systems for those that prevent attacks at scale.)\n- We will only accept critical reports in blogs.dropbox.com (e.g., RCE). Minor issues that can't impact Dropbox users are out of scope. Please report them to the Automattic Program (https://hackerone.com/automattic).\n- Content spoofing vulnerabilities (where you can only inject text or an image into a page) are out of scope. We will accept and resolve  a spoofing vulnerability where attacker can inject image or rich text (HTML), but it is not eligible for a bounty. Pure text injection is out of scope.\n- Ability to share links without verifying email.\n- Absence of rate limiting, unless related to authentication\n- Reflected File Download vulnerabilities or any vulnerabilities that let you start a download to the user's computer are out of scope.\n- IP/Port Scanning via Dropbox services unless you are able to hit private IP or Dropbox servers.\n- Devices (ios, android, desktop apps) not getting unlinked on password change. \n- Hyperlink injection or any link injection in emails we send.\n- Creating multiple account using same email is also out of scope.\nHere's a note on best practices for submitting a report (https://blogs.dropbox.com/tech/2015/08/dropbox-bug-bounty-program-best-practices-2/)\nThe Fine Print\nYou are responsible for paying any taxes associated with rewards. We may modify the terms of this program or terminate this program at any time.  We won’t apply any changes we make to these program terms retroactively. Reports from individuals who we are prohibited by law from paying are ineligible for rewards.\n",
		"handle": "dropbox",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/461/009be1cf66f744974e28723d5fc35cd7d098e0f8_large.png?1411497756",
		"internet_bug_bounty": false
	},
	{
		"id": 56,
		"url": "/vimeo",
		"name": "Vimeo",
		"meta": {
			"bug_count": 377,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Make life worth watching",
		"stripped_policy": "Vimeo's Responsible Bug Disclosure Policy\nVimeo engineers work hard to ensure that our site and users are 100% safe and sound. But nobody's perfect. Should you encounter a security vulnerability in one of our products, we want to hear from you. \nBefore﻿ submitting a report, please review our guidelines below as to what constitutes a security vulnerability, and how we'd like you to go about finding them. Once you've filed a report, we promise to work expeditiously to evaluate and resolve any valid bugs. \nAt the moment we are awarding bounties on merit, at our discretion. Any patched vulnerabilities gets a mention on our Bug Hall of Fame (https://vimeo.com/about/security).\nScope\nThe Vimeo website at vimeo.com\nVimeo's official Mobile apps\nThe Vimeo embedded player hosted at player.vimeo.com\nThe Vimeo API (https://developer.vimeo.com/api) hosted at api.vimeo.com\nVimeo Pro portfolios hosted on vimeopro.com\nUpload endpoints such as *.cloud.vimeo.com\nVimeo On Demand (https://vimeo.com/ondemand) hosted sites \nLegacy API endpoints such as vimeo.com/api\nRules\nTo receive credit, you must be the first reporter of a vulnerability\nFollow the HackerOne Vulnerability Disclosure Guidelines (https://hackerone.com/disclosure-guidelines)\nDon't attempt to access other people's private data. Basic Vimeo accounts are free, as well as the privacy  features, so setting up example cases with throwaway accounts should be easy\nDon't use automated tools or scanners\nDon't DDoS us\nQualifying vulnerabilities\nPlease take the time to make a proof of concept that shows how a particular vulnerability is exploitable.   Please include a severity rating with your report this will help us price your bounty in a timely fashion.  Use the following guidelines to categorize security issues.\nCritical: most impactful, Remote code execution, SQLi, root access to any systems\nHigh: Insecure direct object references, stored xss that can be used against logged in users, account authentication issues (bypass etc)\nMedium: stored or reflected cross site scripting,  other novel bugs that have a security impact to many users\nLow: CSRF missing from non excluded functions, other security issues that impact only a small subset of users\nwont fix: information disclosure, see also other non qualifying vulnerabilities\nReports from automated scanners will not be accepted.\nWe are primarily interested in exploits that could compromise user privacy or expose content in unintended ways.\nNon-qualifying vulnerabilities\nUser enumeration\nAnything on pages.email.vimeo.com \nReports from automated tools or scans\nPresence of autocomplete attribute on web forms\nMissing rate limits on non-sensitive functions\nMissing cookie flags on non-sensitive cookies\nLogout CSRF attacks\nMissing http security headers (unless you deliver a proof of concept that leverages their absence)\nReports of insecure SSL/TLS ciphers (unless you have a working proof of concept -- and not just a report from a scanner)\nReports of insecure crossdomain.xml configuration (again, unless you have a working proof of concept -- and not just a report from a scanner)\nReports of window.openerredirects\nOpen SMTP redirects (just because it looks like you can use our servers doesn't mean its true-- unless you have a PoC)\nEmail related attacks including spoofing or any issues related to SPF, DKIM or DMARC\nMissing security headers including (content security policy) which do not lead directly to a vulnerability\nClickjacking on static websites\nContent spoofing / text injection\nUse of a known-vulnerable library (without evidence of exploitability)\nVulnerabilities affecting users of outdated browsers or platforms\nSocial engineering attacks including self-xss\n**Thanks for helping us fight the good fight!*\n",
		"handle": "vimeo",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/056/cf9223124dc4199567ba6f8a7d5eb5cba1b94010_large.png?1393009870",
		"internet_bug_bounty": false
	},
	{
		"id": 453,
		"url": "/informatica",
		"name": "Informatica",
		"meta": {
			"bug_count": 176,
			"accepting_submissions": true
		},
		"about": "Informatica Corporation is the world’s number one independent provider of data integration software.",
		"stripped_policy": "At Informatica we take the security of your information seriously. If you believe you've detected a vulnerability within our products we'd like to hear about it by participating in our Responsible Disclosure Program.\nIf you believe you have discovered a vulnerability or have a security incident to report, please submit a bug report and someone will contact you in a timely manner. Please include a detailed summary of the issue you discovered so that we can attempt to reproduce it and assess its severity and impact.\nTo be eligible for recognition, you must:\nBe the first person to responsibly disclose the bug.\nReport a bug that could compromise our users' private data, circumvent the system's protections, or enable access to a system within our infrastructure.\nTypes of Recognition:\nPost on our Hall of Fame\nYour very own Informatica Bug Bounty T-Shirt With More Awesome Swag to Come\nQualifying Properties:\n*.informatica.com\nNon-Qualifying Properties:\n*-test.informatica.com\nQualifying Vulnerabilities:\nIn general, any implementation issue that is reproducible and significantly affects the security of Informatica customers is likely in scope for this program. Typical types of issues include:\n• Cross-site Scripting (XSS)\n• Cross-site Request Forgery\n• Server-Side Request Forgery (SSRF)\n• SQL Injection\n• Server-side Remote Code Execution (RCE)\n• XML External Entity Attacks (XXE)\n• Access Control Issues (Insecure Direct Object Reference issues, etc)\n• Exposed Administrative Panels that don't require login credentials\n• Directory Traversal Issues\n• Local File Disclosure (LFD)\n• Broken Authentication or authorization issues\n• Broken cryptographic implementation w/ working exploit\n• Circumvention of our framework's privacy and permission models\nNon-Qualifying Vulnerabilities:\nThe following issues are outside the scope of our recognition program:\n• Best practices concerns\n• Vulnerabilities affecting users of outdated or unsupported browsers or platforms\n• Self-XSS that cannot be used to exploit other users\n• Reports from automated tools or scans\n• Denial of Service Attacks\n• Reflected File Download (RFD)\n• Username Enumeration\n• Physical or social engineering attempts (this includes phishing attacks against Informatica employees)\n• Content injection issues\n• Cross-site Request Forgery (CSRF) with minimal security implications (Logout CSRF, etc.)\n• Missing autocomplete attributes\n• Missing cookie flags on non-security sensitive cookies\n• Issues which require physical access to a victim’s computer\n• Missing security headers which do not present an immediate security vulnerability\n• SSL/TLS scan reports (this means output from sites such as SSL Labs)\n• Banner grabbing issues (figuring out what web server we use, etc)\n• Open ports without an accompanying proof-of-concept demonstrating vulnerability\n• Open Redirect Vulnerabilities\n• Publicly accessible login panels\n• Recently disclosed 0day vulnerabilities - please give us two weeks before reporting these types of issues.\n• identification of Informatica data in OSINT sources in absence of a working exploit (i.e shadowserver,   rbl, etc).\n•       Email/SMS flooding attacks\n• Issues related to software or protocols not under Informatica control\n• Physical attempts against Informatica personnel, property or data centers\n• Clickjacking and the issues exploited only by clickjacking\nAll reports are reviewed on a case-by-case basis and any report that results in a fix or update will at a minimum will receive Hall of Fame recognition and a complimentary Informatica Bug Bounty T-Shirt. Depending on their impact, at the sole discretion of Informatica, not all reported issues may qualify.\nRules of Engagement:\nPlease refrain from accessing sensitive information (by using a test account and/or system), performing actions that may negatively affect other Informatica users (denial of service), or sending reports from automated tools.\nInformatica reserves the right to assess each bug to determine if it qualifies.\nInformatica makes every reasonable effort to protect the information in our care from loss, misuse, alteration or destruction. Only authorized employees and clients have access to the data that we gather and that access is limited by need. All employees who have access to client data are enjoined to maintain the confidentiality of such information. No method of transmission over the Internet or method of electronic storage is 100% secure; therefore, while we strive to use all commercially reasonable means to protect client information, that cannot guarantee absolute security.\n",
		"handle": "informatica",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/453/c5ccafa222c5089c7c4c16f49b8bc3305adc78a6_large.png?1413843174",
		"internet_bug_bounty": false
	},
	{
		"id": 557,
		"url": "/thisdata",
		"name": "ThisData",
		"meta": {
			"bug_count": 15,
			"accepting_submissions": true
		},
		"about": "ThisData is a cloud security service which can monitor your apps for unusual logins, compromised accounts, and fraudulent activity",
		"stripped_policy": "ThisData is committed to keeping our user's data safe and secure. Working with the community of security experts is an important way we stay up to date with the latest security techniques. If you discover something we should know about, we encourage you to reach out. We'll make every effort to quickly correct the issue.\nTechnologies we use include Rails, Backbone, S3, SQS, and ElasticSearch.\nAutomated testing is not permitted\nWe will review submitted issues within 30 days, and hopefully within 7 days.\nTHANKS\nWe believe in recognizing the work of others. If your work helps us improve the security of our service, we'll be happy to acknowledge your contribution in our Hall of Fame.\nOUR RULES\nTo promote the discovery and reporting of vulnerabilities and increase user safety, we ask and require that you:\nDo not attempt a denial-of-service attack.\nThis includes spamming Intercom or the Contact Us form.\nAct in good faith not to interrupt or degrade the performance of our services (including denial of service).\nDo not access, modify, delete, or store data that does not belong to you, or attempt to do so\nDo not make any information public until the issue has been resolved\nDo not perform automated testing\nDo not deface any part of our service\nDo not pivot an exploit (e.g. an RCE) beyond a basic Proof of Concept, unless explicitly given permission by ThisData\nINELIGIBLE REPORTS\nIssues related to services or software that is not under ThisData's control. e.g.\nIssues which require our user's email account to be compromised\nIssues where physical access to the user's device / network is required (e.g. MitM)\nhelp.thisdata.com - this is run by ReadMe.io, and unless it's a problem in our implementation, and vulnerabilities there are better addressed to them\nAny physical attempts against ThisData's property or data centres\nPresence of autocomplete attribute on web forms\nMost best practice issues (e.g. SPF soft fail, user password requirements)\nIf you think it's important, we'd love to hear it. Many of these issues are related to conscious design decisions though.\nPlease do not submit any XSS reports that manually intercept HTTP headers in order to manually edit them. These would be self-inflicted or require a further MITM attack.\n",
		"handle": "thisdata",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/557/4888ce7516a9c2a6126759938d8e900d86ab78d1_large.png?1458074648",
		"internet_bug_bounty": false
	},
	{
		"id": 215,
		"url": "/qiwi",
		"name": "QIWI",
		"meta": {
			"bug_count": 272,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "The QIWI brand is a family brand that consolidates several directions: kiosks, wallet, bank and even terminals of goods delivery.",
		"stripped_policy": "Программа поиска уязвимостей QIWI\nОбъекты для поиска уязвимостей:\n•   платежные терминалы \n•   мобильные приложения Visa QIWI Wallet для iOS, Android и Windows Phone \n•   *.qiwi.ru\n•   *.qiwi.com\nНе рассматриваются и не принимаются как уязвимости:\n•   сообщения от сканеров безопасности и других средств автоматического сканирования;\n•   сообщения об уязвимостях, основанные на версиях продукта / протокола (без демонстрации реального существования уязвимости);\n•   сообщения об отсутствии механизма защиты или несоответствия рекомендациям (например отсутствие CSRF токена) без указания на реально существующие негативные последствия;\n•   framing, clickjacking;\n•   Self-XSS;\n•   Logout CSRF;\n•   сообщения о публичном доступном сервере update1.qiwi.com.\nКак отправить отчет?\nВ отчёте нужно дать подробное описание найденной уязвимости и указать:\n•   Уязвимый хост; \n•   Тип уязвимости;\n•   Где именно;\n•   Что позволяет;\n•   Как повторить;\n•   Ваши рекомендации по устранению.\nРазмеры наград за уязвимости:\nМы выплачиваем награду в том случае, если вы первый, кто сообщил нам о данной уязвимости.\nМинимальная награда за найденную уязвимость составляет 100$, максимальный размер награды зависит от критичности уязвимости.  \nКритериями оценки являются: \n•   возможность воспроизведения уязвимости;\n•   на каком сервисе найдена уязвимость;\n•   денежная оценка финансового, репутационного и иного риска, возникающего вследствие наличия уязвимости.\nВыплаты производятся через систему проекта HackerOne.\nКоличество отчетов об уязвимостях направляемых одним участником Программы не ограничено.\nПолитика раскрытия Qiwi\nОтправляя отчет, вы соглашаетесь соблюдать политику раскрытия Qiwi, которая запрещает публичное или частное раскрытие любой найденной уязвимости Qiwi в течение 90 дней после закрытия уязвимости и только по взаимному соглашению сторон.\nРаботники компании Qiwi, а также работники группы компаний Qiwi, не могут участвовать в Программе поиска уязвимостей Qiwi.\nQiwi Bug Bounty Program\nScope:\n•   qiwi kiosks \n•    Visa Qiwi Wallet mobile apps for iOS, Android and Windows Phone\n•   *.qiwi.ru\n•   *.qiwi.com\nWe do not accept/review reports with: \n•   Vulnerability scanners and other automated tools reports\n•   Reports based on product/protocol version without demonstration of real vulnerability presence\n•   Reports of missed protection mechanism / inconsistent with best practices (e.g. no CSRF token, framing/clickjacking protection) without demonstration of real security impact for user or system\n•   framing, clickjacking;\n•   Reports of insecure SSL/TLS ciphers (unless you have a working proof of concept -- and not just a report from a scanner);\n•   Self-XSS;\n•   Logout CSRF;\n•   Reports regarding public availability of update1.qiwi.com\nHow do I submit a bug report?\nA bug report must give a detailed description of the discovered vulnerability:\n•   vulnerable hosts; \n•   the type of vulnerability; \n•   where exactly; \n•   security impact; \n•   steps impact; \n•   recommendations for fixing.\nReward payment and amounts.\nWe will pay you a reward if you are the first person to report a given vulnerability.  \nThe minimum  reward  for a vulnerability report is 100$. The maximum reward depends on the severity \nof  the  vulnerability. \nWe are interested  the following  vulnerabilities criteria:\n•   possible use of the vulnerability\n•   on what service vulnerability found;\n•   value of financial, reputational and other risks from vulnerabilities.\nPayments will be made through HackerOne.\nNumber of bug reports by one person of the Program is unlimited.\nQiwi Responsible Disclosure Policy\nBy submitting a bug report you agree to comply with Qiwi Responsible Disclosure Policy, which forbids public or private disclosure of the details of any vulnerability found on Qiwi within 90 days after vulnerability is fixed and only reciprocal agreement of the parties.\nQiwi employees, the employees in any of Qiwi companies group can't participate in the Qiwi Bug Bounty Program.\n",
		"handle": "qiwi",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/215/548853339654902b2015990ac4d9073d28864044_large.png?1415704940",
		"internet_bug_bounty": false
	},
	{
		"id": 530,
		"url": "/eobotcom",
		"name": "Eobot",
		"meta": {
			"bug_count": 28,
			"accepting_submissions": true,
			"minimum_bounty": 10,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Bitcoin and cryptocurrency mining",
		"stripped_policy": "Our team runs a variety of websites/databases/software/tools to manage the Eobot website.  These are all in scope.\nWe are most interested in attacks that can steal coins from our site, as cryptocurrency is irreversible.  \nLet us know if you want a small amount of coins/GHS/KHS, if it helps with any testing.\nOut of scope/off limits:\n-autocomplete is meant to be on \n-leakage to chatango/google analytics ok \n-vulns in 3rd party plugins, like paypal/chatango/google analytics are out of scope \n-brute force of easy passwords is possible\n-poodle is known and ok\n-session still valid after password change ok\n-bugs in the basic bitcoin core are not eligible, e.g. bitcoind/dogecoind\n-paypal api out of scope\n",
		"handle": "eobotcom",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/530/41b66f88e5ba4e3bfed58cbb39ca85bf13106c3d_large.png?1414172753",
		"internet_bug_bounty": false
	},
	{
		"id": 361,
		"url": "/wordpoints",
		"name": "WordPoints",
		"meta": {
			"bug_count": 6,
			"accepting_submissions": true,
			"minimum_bounty": 25,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Open source points plugin for WordPress.",
		"stripped_policy": "Scope\nI'm interested in source code vulnerabilities in the targets listed below.\nThe Targets\nIn order of importance:\n- The WordPoints plugin (https://wordpress.org/plugins/wordpoints/) (developed on GitHub (https://github.com/WordPoints/wordpoints/)).\n- Extensions for the plugin (called \"modules\") developed under the WordPoints organization on GitHub (https://github.com/WordPoints/).\nPlease note that at present the wordpoints.org website is not considered a valid target.\nImportant Notes\nThe plugin and many of the modules are developed with the production code in the /src directory of the repository. In these cases, only code within the /src directory is in scope, since only that code is distributed and installed. This is only important when you're looking at one of the development branches. You can also download the code for the latest release (e.g., for WordPoints (https://github.com/WordPoints/wordpoints/releases/latest)), and in that case, the package will only contain the production code.\nI do not maintain old branches of the code, so only vulnerabilities present in the development version and the latest release are in scope. On GitHub these will be the master branch and the highest number x.x branch, respectively.\nReporting Bugs\nWhen reporting a vulnerability, please include a POC if possible. That will help us to validate the report as quickly as possible, and will also save you from reporting false bugs.\nBounty Program\nWe offer small bounties for valid bugs. We may award larger bounties if we think the bug is more serious.\nInvalid Bugs\nPath Disclosure: That's really a server issue, and any competent admin will have display_errors disabled on production boxes.\nDirectory Listing: Similar to path disclosure, this isn't really a concern. Many of the projects are open source, so an attacker can already easily determine the directory structure. Only if a directory is created after the plugin/module is installed would there be any concern of sensitive information being disclosed.\nVersion Disclosure: Hiding the names or versions of software that a service is running is just security through obscurity.\nXSS: Reports of XSS vulnerabilities are welcome. However, in WordPress some user Roles are trusted and are allowed to post unfiltered HTML (http://codex.wordpress.org/FAQ_Security#Why_are_some_users_allowed_to_post_unfiltered_HTML.3F) on the front end of the site. An XSS vulnerability may not be considered valid if it can only be exploited by users who have the unfiltered_html capability, and if it does not affect the administration panels. If you're unsure whether an XSS bug is valid, please report it anyway.\nNonce Persistence: WordPress uses CSRF tokens called \"nonces\". However, unlike true nonces, they aren't used only once, but expire after a limited time (http://codex.wordpress.org/WordPress_Nonces#Nonce_lifetime). If you see the same nonce token value being used repeatedly, that is probably why.\nNonces in GET requests: The WordPress developers have built the nonce system to be fairly robust against leaking of nonces in GET requests. WordPress actually includes a function for adding a nonce as a GET parameter to a URL, wpnonceurl() (https://developer.wordpress.org/reference/functions/wp_nonce_url/). This is generally considered an excepted risk. If you think that a particular case of using an nonce in a GET request poses a significant risk, please report it anyway.\nFile Uploads: WordPoints allows users with sufficient capabilities to upload arbitrary files to the server. We are only interested in vulnerabilities related to file uploads if they can be exploited by users who do not have the install_modules capability.\nOutside Scope: Only source code bugs are within scope; vulnerabilities at the server or network layer are not in scope.\nInvalid targets: The wordpoints.org website is not a valid target. Please see the Targets section above for a list of valid targets. \n",
		"handle": "wordpoints",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/361/6ef62aaf44e3fbaa72b5a2e9053a760cf0a88ef7_large.png?1438962145",
		"internet_bug_bounty": false
	},
	{
		"id": 374,
		"url": "/glasswire",
		"name": "GlassWire",
		"meta": {
			"bug_count": 47,
			"accepting_submissions": true,
			"minimum_bounty": 50,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "GlassWire helps protect your computer and privacy by monitoring your network activity.",
		"stripped_policy": "We created GlassWire to help everyday users protect their devices and privacy by monitoring their network activity .  The security, data, and privacy of our GlassWire users is our priority.  We hope HackerOne will help security researchers report GlassWire software vulnerabilities to us.\nReporting a vulnerability in the GlassWire desktop or mobile software\nWe will try to review all reported vulnerabilities within 10 business days to see if they qualify for HackerOne recognition.  Vulnerability reports require a proof of concept and detailed information on how the vulnerability can cause GlassWire to be misused.  \nPlease use the following guidelines:\n* We are mainly seeking vulnerabilities in our software (mobile and desktop).\n* Check for network parser vulnerabilities.\n* Check for vulnerabilities using fuzzing and binary analysis.\n* Go to GlassWire settings/server to review its remote access security.\n* *.glasswire.com minus exclusions below.\n* Please include detailed instructions on the vulnerability so we can try to reproduce the issue.\n* Please do not disclose the issue until it has been fixed by GlassWire.\n* Do not disrupt services for users.\n* Do not violate the privacy of users or modify their data.\nScope Exclusions\nPhysical attacks\nDDOS, DOS, or Brute Force attacks\nSocial Engineering\nWordpress/Discourse vulnerabilities\nforum.glasswire.com uses Discourse third party software\nblog.glasswire.com hosted by Wordpress.com\nstore. and other shopping pages hosted by our billing company\nVulnerabilities on third party sites\nPassword complexity reports\nRewards\nWe now offer paid bounties for vulnerabilities in our Windows desktop software or mobile software.  GlassWire does not offer bug bounties related to our website unless the vulnerability is serious and has real security implications for our users. \n",
		"handle": "glasswire",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/374/e5300e54ecfa99d6206dedff6e8abd6a63c82f56_large.png?1409030603",
		"internet_bug_bounty": false
	},
	{
		"id": 312,
		"url": "/greenhouse",
		"name": "Greenhouse.io",
		"meta": {
			"bug_count": 70,
			"accepting_submissions": true,
			"minimum_bounty": 100,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "Software to optimize your entire recruiting and onboarding process.",
		"stripped_policy": "About\nGreenhouse is software to optimize your entire recruiting and onboarding process. Find better candidates, conduct more focused interviews, and make data-driven hiring decisions.\nThrough this security bug bounty program we collaborate with security researchers worldwide to identify and mitigate security vulnerabilities in our platform.\nFind a security flaw in Greenhouse? Submit a report here. If we confirm it and it's within the guidelines below we'll send you a reward.\nGuidelines\nRewards are contingent on you operating within these guidelines and are granted at the discretion of Greenhouse:\nDomains eligible for reward: app.greenhouse.io, api.greenhouse.io, boards.greenhouse.io, www.greenhouse.io, greenhouse.io\nIf you're using your company's Greenhouse account, testing is not permitted without prior written authorization from Greenhouse.\nWe do not provide test accounts.\nOnly issues that might impact the security of our data and supporting systems are in-scope; usability, functionality, and programming bugs are out-of-scope.\nSocial engineering attacks are out-of-bounds and will not be accepted.\nAny research or testing that impacts our application's performance or exposes confidential information to anyone else is out-of-bounds and will not be accepted.\nOutput copied from any scanning, auditing, or attack tool without supporting evidence or a proof-of-concept will not be accepted as original work and will not be accepted.\nIf we catch you using a scanner against our applications you may be subject to being banned from our bounty\nYou are not an individual on, or residing in any country on, any U.S. sanctions lists.\nYou must provide a clear, detailed, and working proof of concept (PoC) that exploits the security issue\nRewards are made for reports validated by Greenhouse according to these standards:\n| Severity | Criteria | Minimum Reward |\n| --- | ---| --- |\n| Low | Limited but possible impact of the security of our service. | $100 USD |\n| High | Possible unauthorized access to confidential customer data. | $1,000 USD |\nKnown Issues, Ineligible For Reward\nThese issues are not eligible for reward due to design decisions, limitations of third-party services we use, etc. \n* Login/Logout CSRF/XSRF\n* Email configuration (SPF, DKIM, DMARC)\n* SSL/TLS ciphers\n* Diffie-Hellman parameters\n* Clickjacking/UI Redress on boards.greenhouse.io (X-Frame-Options)\n* no Strict-Transport-Security header\n* Issue related to links or forms outside of the greenhouse.io or grnh.se domains\n* Problems related to widely publicized CVE's\n* DDoS\n* Downstream providers we do not control (e.g. Marketo)\n",
		"handle": "greenhouse",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/312/2edb164a822e7c135a0c4ce51cef7736f8bf0c12_large.jpg?1412369170",
		"internet_bug_bounty": false
	},
	{
		"id": 40,
		"url": "/square",
		"name": "Square",
		"meta": {
			"bug_count": 383,
			"accepting_submissions": true,
			"minimum_bounty": 300,
			"default_currency": "usd",
			"offers_bounties": true
		},
		"about": "We make selling simple for businesses of all sizes. ",
		"stripped_policy": "Serious about security\nOur approach to security is designed to protect buyers and sellers. We monitor every transaction, continuously innovate in fraud prevention, and we protect businesses’ data like our business depends on it—because it does. We adhere to industry-leading standards to manage our network, secure our web and client applications, and set policies across our organization.\nSevere: Any bug that might grant unauthorized access to confidential or payment information. Severe bugs have a minimum bounty of $2,500.\nInteresting: Any bug that might otherwise potentially impact the security of our service. Interesting bugs have a minimum bounty of $300.\n \nWe are particularly interested in problems with Square’s payment flows.  Confirmed vulnerabilities that directly affect our payments flows will receive a $500 minimum reward.\nIf you believe you have discovered a security vulnerability, please follow the guidelines below. \n \nDisclosure procedures\nSquare recognizes the important contributions the security research community can make. We encourage coordinated reporting of security issues with our services. We take the security of our services very seriously and monitor their use for indications of a malicious attack. In order to allow us to identify legitimate security research as opposed to malicious attacks against our services, we promise not to bring legal action against researchers who:\n* Share with us the full details of any problem found.\n* Do not disclose the issue to others until we’ve had reasonable time to address it.\n* Do not intentionally harm the experience or usefulness of the service to others.\n* Never attempt to view, modify, or damage data belonging to others.\n* Do not attempt a denial-of-service attack.\n* Do not perform any research or testing in violation of law.\n \nAttributes of a good report\nDetailed steps on reproducing the bug. If valuable, please include any screenshots, links you clicked on, pages visited, etc. \nDescribe the versions of all relevant components of the attack (eg browser, OS, mobile app version).\nDescribe a concrete attack scenario. How will the problem impact Square or Square buyers/sellers? Put the problem into context.\n \nScope\nWe welcome you to report problems related to the following web domains:\n* *.squareup.com (https://squareup.com/)\n* *.square.com (https://square.com)\n* *.cash.me (https://cash.me)\n \nOur Android and iOS mobile applications for Square Cash and Square Register are also in scope:\n* https://itunes.apple.com/us/app/square-register-accept-credit/id335393788\n* https://itunes.apple.com/us/app/square-cash/id711923939\n* https://play.google.com/store/apps/details?id=com.squareup\n* https://play.google.com/store/apps/details?id=com.squareup.cash\n \nKeep in mind that:\nWe also have a bounty program for our open source code: https://hackerone.com/square-open-source\n \nSpecial CTF-style Flags!\nFind the account\nWe've created an account with an email address of the form ftwr+[32 character flag]@squareup.com.  Tell us how you found it, and you'll get a $1000 bounty. In case it helps, you can find the associated Square Market page here (https://squareup.com/market/hackerone-flag-in-email-account).\nThe SHA1 digest of the flag is: b9559723b3fd537e368fdc5c221eef72dc2e8adc. \nFind the file\nFind a file called hackerone-flag.txt with the contents of the form ftwr+[32 character flag]. Tell us how you found it, and you'll get a $1000 bounty. \nThe SHA1 digest of the flag is: 1fb27653e08cef9c6acdd520f2e9398ad3576549.\nComputing the sha1\nTo make sure you know that you have found the right flag, we are publishing the digests of the flags by running echo [32 characters] | sha1sum. You can do the same on your terminal (you might need to install sha1sum or use an alternate method).\nFor example, if the value of the token were fb3f8fe63cc107c1977855c95633fb13 (it's not), then you would get:\n\n~ echo -n fb3f8fe63cc107c1977855c95633fb13 | sha1sum\n53aa4d47f93b76214834193baefb9c6e7d042c11  -\n\nRules\nSome things to keep in mind when hunting for flags:\nOnly flags created by Square are eligible for the reward.  There will be at most one reward per flag.\nOnly the first person to report a flag and methodology for discovery will be rewarded.\nThe flags are long enough that brute force won't work.  You'll have to be more creative!\n \nIneligible reports\nIssues related to software not under Square's control\nThis includes issues of CSV \"injection\" in Excel. This write-up from Google echos our thoughts. (https://sites.google.com/site/bughunteruniversity/nonvuln/csv-excel-formula-injection)\nReports from automated tools or scans\nSocial engineering of Square staff or contractors\nAny physical attempts against Square property or data centers\nSelf-XSS\nLogout CSRF\nPresence of autocomplete attribute on web forms\nMissing cookie flags on non-sensitive cookies\nMissing http security headers (unless you deliver a proof of concept that leverages their absence)\nClickjacking on widgets intended to be embedded in other pages\nReports of insecure SSL/TLS ciphers (unless you have a working proof of concept, and not just a report from a scanner)\nNo maximum password length\nAn oracle that discloses whether a given username, email address, or phone number is associated with an actual account.  (However, please do submit anything that allows you to recover usernames en masse.)\nUsing spoofed emails for phishing\nBrute forcing of password reset token for squareup.com (unless you can deliver a proof of concept that bypasses throttling and an arbitrary/blind iteration)\nReports of the 2-factor token not expiring. We use TOTP (https://en.wikipedia.org/wiki/Time-based_One-time_Password_Algorithm) codes for two factor.\nMultiple vulnerability submissions in a single report.\nIf you believe that you are the victim of an account takeover, please contact support (https://squareup.com/square-support). These are not considered appropriate for the bug bounty program and will be closed as N/A (hurting your researcher score).\n",
		"handle": "square",
		"profile_picture": "https://profile-photos.hackerone-user-content.com/production/000/000/040/8d7cb8599266031ce0bb828c2d0a83acc5c59449_large.png?1432665497",
		"internet_bug_bounty": false
	}],
	"show_sort": true
}